
2nd_final_prj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000102e  000010c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000102e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800104  00800104  000010c6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010c6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  000010f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007a5  00000000  00000000  00001186  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000193  00000000  00000000  0000192b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000109a  00000000  00000000  00001abe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000138  00000000  00000000  00002b58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000064f  00000000  00000000  00002c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000171  00000000  00000000  000032df  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00003450  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	e2 c0       	rjmp	.+452    	; 0x1c6 <__ctors_end>
       2:	00 00       	nop
       4:	fd c0       	rjmp	.+506    	; 0x200 <__bad_interrupt>
       6:	00 00       	nop
       8:	fb c0       	rjmp	.+502    	; 0x200 <__bad_interrupt>
       a:	00 00       	nop
       c:	f9 c0       	rjmp	.+498    	; 0x200 <__bad_interrupt>
       e:	00 00       	nop
      10:	f7 c0       	rjmp	.+494    	; 0x200 <__bad_interrupt>
      12:	00 00       	nop
      14:	f5 c0       	rjmp	.+490    	; 0x200 <__bad_interrupt>
      16:	00 00       	nop
      18:	f3 c0       	rjmp	.+486    	; 0x200 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f1 c0       	rjmp	.+482    	; 0x200 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ef c0       	rjmp	.+478    	; 0x200 <__bad_interrupt>
      22:	00 00       	nop
      24:	ed c0       	rjmp	.+474    	; 0x200 <__bad_interrupt>
      26:	00 00       	nop
      28:	eb c0       	rjmp	.+470    	; 0x200 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	e9 c0       	rjmp	.+466    	; 0x200 <__bad_interrupt>
      2e:	00 00       	nop
      30:	e7 c0       	rjmp	.+462    	; 0x200 <__bad_interrupt>
      32:	00 00       	nop
      34:	0a c1       	rjmp	.+532    	; 0x24a <__vector_13>
      36:	00 00       	nop
      38:	e3 c0       	rjmp	.+454    	; 0x200 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e1 c0       	rjmp	.+450    	; 0x200 <__bad_interrupt>
      3e:	00 00       	nop
      40:	df c0       	rjmp	.+446    	; 0x200 <__bad_interrupt>
      42:	00 00       	nop
      44:	dd c0       	rjmp	.+442    	; 0x200 <__bad_interrupt>
      46:	00 00       	nop
      48:	db c0       	rjmp	.+438    	; 0x200 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d9 c0       	rjmp	.+434    	; 0x200 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d7 c0       	rjmp	.+430    	; 0x200 <__bad_interrupt>
      52:	00 00       	nop
      54:	d5 c0       	rjmp	.+426    	; 0x200 <__bad_interrupt>
      56:	00 00       	nop
      58:	d3 c0       	rjmp	.+422    	; 0x200 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d1 c0       	rjmp	.+418    	; 0x200 <__bad_interrupt>
      5e:	00 00       	nop
      60:	cf c0       	rjmp	.+414    	; 0x200 <__bad_interrupt>
      62:	00 00       	nop
      64:	cd c0       	rjmp	.+410    	; 0x200 <__bad_interrupt>
      66:	00 00       	nop
      68:	cb c0       	rjmp	.+406    	; 0x200 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c9 c0       	rjmp	.+402    	; 0x200 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c7 c0       	rjmp	.+398    	; 0x200 <__bad_interrupt>
      72:	00 00       	nop
      74:	c5 c0       	rjmp	.+394    	; 0x200 <__bad_interrupt>
      76:	00 00       	nop
      78:	c3 c0       	rjmp	.+390    	; 0x200 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c1 c0       	rjmp	.+386    	; 0x200 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bf c0       	rjmp	.+382    	; 0x200 <__bad_interrupt>
      82:	00 00       	nop
      84:	bd c0       	rjmp	.+378    	; 0x200 <__bad_interrupt>
      86:	00 00       	nop
      88:	bb c0       	rjmp	.+374    	; 0x200 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	3f 02       	muls	r19, r31
      8e:	4f 02       	muls	r20, r31
      90:	53 02       	muls	r21, r19
      92:	57 02       	muls	r21, r23
      94:	5b 02       	muls	r21, r27
      96:	5f 02       	muls	r21, r31
      98:	63 02       	muls	r22, r19
      9a:	73 02       	muls	r23, r19
      9c:	75 02       	muls	r23, r21
      9e:	78 02       	muls	r23, r24
      a0:	7b 02       	muls	r23, r27
      a2:	7e 02       	muls	r23, r30
      a4:	81 02       	muls	r24, r17
      a6:	84 02       	muls	r24, r20
      a8:	92 02       	muls	r25, r18
      aa:	a3 02       	muls	r26, r19
      ac:	b4 02       	muls	r27, r20
      ae:	c5 02       	muls	r28, r21
      b0:	d6 02       	muls	r29, r22
      b2:	e7 02       	muls	r30, r23
      b4:	f8 02       	muls	r31, r24
      b6:	0f 03       	fmul	r16, r23
      b8:	12 03       	mulsu	r17, r18
      ba:	15 03       	mulsu	r17, r21
      bc:	18 03       	fmul	r17, r16
      be:	1b 03       	fmul	r17, r19
      c0:	1e 03       	fmul	r17, r22
      c2:	0c 03       	fmul	r16, r20
      c4:	21 03       	mulsu	r18, r17
      c6:	31 03       	mulsu	r19, r17
      c8:	3d 03       	fmul	r19, r21
      ca:	41 03       	mulsu	r20, r17
      cc:	45 03       	mulsu	r20, r21
      ce:	49 03       	fmul	r20, r17
      d0:	4d 03       	fmul	r20, r21
      d2:	51 03       	mulsu	r21, r17
      d4:	55 03       	mulsu	r21, r21
      d6:	59 03       	fmul	r21, r17
      d8:	5d 03       	fmul	r21, r21
      da:	69 03       	fmul	r22, r17
      dc:	6b 03       	fmul	r22, r19
      de:	6e 03       	fmul	r22, r22
      e0:	71 03       	mulsu	r23, r17
      e2:	74 03       	mulsu	r23, r20
      e4:	77 03       	mulsu	r23, r23
      e6:	7a 03       	fmul	r23, r18
      e8:	7d 03       	fmul	r23, r21
      ea:	80 03       	fmuls	r16, r16
      ec:	83 03       	fmuls	r16, r19
      ee:	94 03       	fmuls	r17, r20
      f0:	b3 03       	fmuls	r19, r19
      f2:	c4 03       	fmuls	r20, r20
      f4:	d5 03       	fmuls	r21, r21
      f6:	e6 03       	fmuls	r22, r22
      f8:	f7 03       	fmuls	r23, r23
      fa:	08 04       	cpc	r0, r8
      fc:	19 04       	cpc	r1, r9
      fe:	2a 04       	cpc	r2, r10
     100:	3b 04       	cpc	r3, r11
     102:	ab 03       	fmulsu	r18, r19
     104:	4f 04       	cpc	r4, r15
     106:	52 04       	cpc	r5, r2
     108:	55 04       	cpc	r5, r5
     10a:	58 04       	cpc	r5, r8
     10c:	5b 04       	cpc	r5, r11
     10e:	5e 04       	cpc	r5, r14
     110:	61 04       	cpc	r6, r1
     112:	64 04       	cpc	r6, r4
     114:	67 04       	cpc	r6, r7
     116:	4c 04       	cpc	r4, r12
     118:	6a 04       	cpc	r6, r10
     11a:	7b 04       	cpc	r7, r11
     11c:	88 04       	cpc	r8, r8
     11e:	8c 04       	cpc	r8, r12
     120:	90 04       	cpc	r9, r0
     122:	94 04       	cpc	r9, r4
     124:	98 04       	cpc	r9, r8
     126:	9c 04       	cpc	r9, r12
     128:	a0 04       	cpc	r10, r0
     12a:	a4 04       	cpc	r10, r4
     12c:	a8 04       	cpc	r10, r8
     12e:	ac 04       	cpc	r10, r12
     130:	b0 04       	cpc	r11, r0
     132:	b4 04       	cpc	r11, r4
     134:	c0 04       	cpc	r12, r0
     136:	c2 04       	cpc	r12, r2
     138:	c5 04       	cpc	r12, r5
     13a:	c8 04       	cpc	r12, r8
     13c:	cb 04       	cpc	r12, r11
     13e:	ce 04       	cpc	r12, r14
     140:	d1 04       	cpc	r13, r1
     142:	d4 04       	cpc	r13, r4
     144:	d7 04       	cpc	r13, r7
     146:	da 04       	cpc	r13, r10
     148:	dd 04       	cpc	r13, r13
     14a:	e0 04       	cpc	r14, r0
     14c:	e3 04       	cpc	r14, r3
     14e:	f4 04       	cpc	r15, r4
     150:	0b 05       	cpc	r16, r11
     152:	1c 05       	cpc	r17, r12
     154:	2d 05       	cpc	r18, r13
     156:	3e 05       	cpc	r19, r14
     158:	4f 05       	cpc	r20, r15
     15a:	60 05       	cpc	r22, r0
     15c:	71 05       	cpc	r23, r1
     15e:	82 05       	cpc	r24, r2
     160:	93 05       	cpc	r25, r3
     162:	a4 05       	cpc	r26, r4
     164:	b5 05       	cpc	r27, r5
     166:	c6 05       	cpc	r28, r6
     168:	cc 05       	cpc	r28, r12
     16a:	e2 05       	cpc	r30, r2
     16c:	e5 05       	cpc	r30, r5
     16e:	e8 05       	cpc	r30, r8
     170:	eb 05       	cpc	r30, r11
     172:	ee 05       	cpc	r30, r14
     174:	f1 05       	cpc	r31, r1
     176:	f4 05       	cpc	r31, r4
     178:	f7 05       	cpc	r31, r7
     17a:	fa 05       	cpc	r31, r10
     17c:	fd 05       	cpc	r31, r13
     17e:	00 06       	cpc	r0, r16
     180:	03 06       	cpc	r0, r19
     182:	df 05       	cpc	r29, r15
     184:	06 06       	cpc	r0, r22
     186:	17 06       	cpc	r1, r23
     188:	24 06       	cpc	r2, r20
     18a:	28 06       	cpc	r2, r24
     18c:	2c 06       	cpc	r2, r28
     18e:	30 06       	cpc	r3, r16
     190:	34 06       	cpc	r3, r20
     192:	38 06       	cpc	r3, r24
     194:	3c 06       	cpc	r3, r28
     196:	40 06       	cpc	r4, r16
     198:	44 06       	cpc	r4, r20
     19a:	48 06       	cpc	r4, r24
     19c:	4c 06       	cpc	r4, r28
     19e:	50 06       	cpc	r5, r16
     1a0:	54 06       	cpc	r5, r20
     1a2:	58 06       	cpc	r5, r24
     1a4:	5c 06       	cpc	r5, r28
     1a6:	68 06       	cpc	r6, r24
     1a8:	6a 06       	cpc	r6, r26
     1aa:	6d 06       	cpc	r6, r29
     1ac:	70 06       	cpc	r7, r16
     1ae:	73 06       	cpc	r7, r19
     1b0:	76 06       	cpc	r7, r22
     1b2:	79 06       	cpc	r7, r25
     1b4:	7c 06       	cpc	r7, r28
     1b6:	7f 06       	cpc	r7, r31
     1b8:	82 06       	cpc	r8, r18
     1ba:	85 06       	cpc	r8, r21
     1bc:	88 06       	cpc	r8, r24
     1be:	8b 06       	cpc	r8, r27
     1c0:	8e 06       	cpc	r8, r30
     1c2:	91 06       	cpc	r9, r17
     1c4:	94 06       	cpc	r9, r20

000001c6 <__ctors_end>:
     1c6:	11 24       	eor	r1, r1
     1c8:	1f be       	out	0x3f, r1	; 63
     1ca:	cf ef       	ldi	r28, 0xFF	; 255
     1cc:	d0 e4       	ldi	r29, 0x40	; 64
     1ce:	de bf       	out	0x3e, r29	; 62
     1d0:	cd bf       	out	0x3d, r28	; 61

000001d2 <__do_copy_data>:
     1d2:	11 e0       	ldi	r17, 0x01	; 1
     1d4:	a0 e0       	ldi	r26, 0x00	; 0
     1d6:	b1 e0       	ldi	r27, 0x01	; 1
     1d8:	ee e2       	ldi	r30, 0x2E	; 46
     1da:	f0 e1       	ldi	r31, 0x10	; 16
     1dc:	00 e0       	ldi	r16, 0x00	; 0
     1de:	0b bf       	out	0x3b, r16	; 59
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <__do_copy_data+0x14>
     1e2:	07 90       	elpm	r0, Z+
     1e4:	0d 92       	st	X+, r0
     1e6:	a4 30       	cpi	r26, 0x04	; 4
     1e8:	b1 07       	cpc	r27, r17
     1ea:	d9 f7       	brne	.-10     	; 0x1e2 <__do_copy_data+0x10>

000001ec <__do_clear_bss>:
     1ec:	21 e0       	ldi	r18, 0x01	; 1
     1ee:	a4 e0       	ldi	r26, 0x04	; 4
     1f0:	b1 e0       	ldi	r27, 0x01	; 1
     1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <.do_clear_bss_start>

000001f4 <.do_clear_bss_loop>:
     1f4:	1d 92       	st	X+, r1

000001f6 <.do_clear_bss_start>:
     1f6:	a5 31       	cpi	r26, 0x15	; 21
     1f8:	b2 07       	cpc	r27, r18
     1fa:	e1 f7       	brne	.-8      	; 0x1f4 <.do_clear_bss_loop>
     1fc:	9b d5       	rcall	.+2870   	; 0xd34 <main>
     1fe:	15 c7       	rjmp	.+3626   	; 0x102a <_exit>

00000200 <__bad_interrupt>:
     200:	ff ce       	rjmp	.-514    	; 0x0 <__vectors>

00000202 <TimerOn>:
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
	_avr_timer_cntcurr = _avr_timer_M;
     202:	8b e0       	ldi	r24, 0x0B	; 11
     204:	80 93 81 00 	sts	0x0081, r24
     208:	8d e7       	ldi	r24, 0x7D	; 125
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	90 93 89 00 	sts	0x0089, r25
     210:	80 93 88 00 	sts	0x0088, r24
     214:	82 e0       	ldi	r24, 0x02	; 2
     216:	80 93 6f 00 	sts	0x006F, r24
     21a:	10 92 85 00 	sts	0x0085, r1
     21e:	10 92 84 00 	sts	0x0084, r1
     222:	80 91 00 01 	lds	r24, 0x0100
     226:	90 91 01 01 	lds	r25, 0x0101
     22a:	a0 91 02 01 	lds	r26, 0x0102
     22e:	b0 91 03 01 	lds	r27, 0x0103
     232:	80 93 05 01 	sts	0x0105, r24
     236:	90 93 06 01 	sts	0x0106, r25
     23a:	a0 93 07 01 	sts	0x0107, r26
     23e:	b0 93 08 01 	sts	0x0108, r27
     242:	8f b7       	in	r24, 0x3f	; 63
     244:	80 68       	ori	r24, 0x80	; 128
     246:	8f bf       	out	0x3f, r24	; 63
     248:	08 95       	ret

0000024a <__vector_13>:
     24a:	1f 92       	push	r1
     24c:	0f 92       	push	r0
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	0f 92       	push	r0
     252:	11 24       	eor	r1, r1
     254:	8f 93       	push	r24
     256:	9f 93       	push	r25
     258:	af 93       	push	r26
     25a:	bf 93       	push	r27
     25c:	80 91 05 01 	lds	r24, 0x0105
     260:	90 91 06 01 	lds	r25, 0x0106
     264:	a0 91 07 01 	lds	r26, 0x0107
     268:	b0 91 08 01 	lds	r27, 0x0108
     26c:	01 97       	sbiw	r24, 0x01	; 1
     26e:	a1 09       	sbc	r26, r1
     270:	b1 09       	sbc	r27, r1
     272:	80 93 05 01 	sts	0x0105, r24
     276:	90 93 06 01 	sts	0x0106, r25
     27a:	a0 93 07 01 	sts	0x0107, r26
     27e:	b0 93 08 01 	sts	0x0108, r27
     282:	89 2b       	or	r24, r25
     284:	8a 2b       	or	r24, r26
     286:	8b 2b       	or	r24, r27
     288:	99 f4       	brne	.+38     	; 0x2b0 <__vector_13+0x66>
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	80 93 09 01 	sts	0x0109, r24
     290:	80 91 00 01 	lds	r24, 0x0100
     294:	90 91 01 01 	lds	r25, 0x0101
     298:	a0 91 02 01 	lds	r26, 0x0102
     29c:	b0 91 03 01 	lds	r27, 0x0103
     2a0:	80 93 05 01 	sts	0x0105, r24
     2a4:	90 93 06 01 	sts	0x0106, r25
     2a8:	a0 93 07 01 	sts	0x0107, r26
     2ac:	b0 93 08 01 	sts	0x0108, r27
     2b0:	bf 91       	pop	r27
     2b2:	af 91       	pop	r26
     2b4:	9f 91       	pop	r25
     2b6:	8f 91       	pop	r24
     2b8:	0f 90       	pop	r0
     2ba:	0f be       	out	0x3f, r0	; 63
     2bc:	0f 90       	pop	r0
     2be:	1f 90       	pop	r1
     2c0:	18 95       	reti

000002c2 <TickFct_State_machine_1>:

enum SM1_States { SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;

void TickFct_State_machine_1() 
{
	switch(SM1_State) 
     2c2:	80 91 10 01 	lds	r24, 0x0110
     2c6:	82 30       	cpi	r24, 0x02	; 2
     2c8:	c9 f0       	breq	.+50     	; 0x2fc <TickFct_State_machine_1+0x3a>
     2ca:	28 f4       	brcc	.+10     	; 0x2d6 <TickFct_State_machine_1+0x14>
     2cc:	88 23       	and	r24, r24
     2ce:	41 f0       	breq	.+16     	; 0x2e0 <TickFct_State_machine_1+0x1e>
     2d0:	81 30       	cpi	r24, 0x01	; 1
     2d2:	81 f0       	breq	.+32     	; 0x2f4 <TickFct_State_machine_1+0x32>
     2d4:	20 c0       	rjmp	.+64     	; 0x316 <TickFct_State_machine_1+0x54>
     2d6:	83 30       	cpi	r24, 0x03	; 3
     2d8:	a9 f0       	breq	.+42     	; 0x304 <TickFct_State_machine_1+0x42>
     2da:	84 30       	cpi	r24, 0x04	; 4
     2dc:	b9 f0       	breq	.+46     	; 0x30c <TickFct_State_machine_1+0x4a>
     2de:	1b c0       	rjmp	.+54     	; 0x316 <TickFct_State_machine_1+0x54>
	{

		case SM1_off:
		if(global_g == 0)
     2e0:	80 91 04 01 	lds	r24, 0x0104
     2e4:	81 11       	cpse	r24, r1
     2e6:	26 c0       	rjmp	.+76     	; 0x334 <TickFct_State_machine_1+0x72>
		{
			if(~PINB & 0x10)
     2e8:	1c 99       	sbic	0x03, 4	; 3
     2ea:	24 c0       	rjmp	.+72     	; 0x334 <TickFct_State_machine_1+0x72>
			{
				SM1_State = SM1_on1;
     2ec:	81 e0       	ldi	r24, 0x01	; 1
     2ee:	80 93 10 01 	sts	0x0110, r24
     2f2:	22 c0       	rjmp	.+68     	; 0x338 <TickFct_State_machine_1+0x76>
				SM1_State = SM1_off;
			}
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
     2f4:	82 e0       	ldi	r24, 0x02	; 2
     2f6:	80 93 10 01 	sts	0x0110, r24
     2fa:	21 c0       	rjmp	.+66     	; 0x33e <TickFct_State_machine_1+0x7c>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
     2fc:	83 e0       	ldi	r24, 0x03	; 3
     2fe:	80 93 10 01 	sts	0x0110, r24
     302:	20 c0       	rjmp	.+64     	; 0x344 <TickFct_State_machine_1+0x82>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
     304:	84 e0       	ldi	r24, 0x04	; 4
     306:	80 93 10 01 	sts	0x0110, r24
     30a:	1f c0       	rjmp	.+62     	; 0x34a <TickFct_State_machine_1+0x88>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
     30c:	10 92 10 01 	sts	0x0110, r1
		global_g = 1;
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	80 93 04 01 	sts	0x0104, r24
	}

	switch(SM1_State) 
     316:	80 91 10 01 	lds	r24, 0x0110
     31a:	82 30       	cpi	r24, 0x02	; 2
     31c:	81 f0       	breq	.+32     	; 0x33e <TickFct_State_machine_1+0x7c>
     31e:	28 f4       	brcc	.+10     	; 0x32a <TickFct_State_machine_1+0x68>
     320:	88 23       	and	r24, r24
     322:	41 f0       	breq	.+16     	; 0x334 <TickFct_State_machine_1+0x72>
     324:	81 30       	cpi	r24, 0x01	; 1
     326:	41 f0       	breq	.+16     	; 0x338 <TickFct_State_machine_1+0x76>
     328:	08 95       	ret
     32a:	83 30       	cpi	r24, 0x03	; 3
     32c:	59 f0       	breq	.+22     	; 0x344 <TickFct_State_machine_1+0x82>
     32e:	84 30       	cpi	r24, 0x04	; 4
     330:	71 f4       	brne	.+28     	; 0x34e <TickFct_State_machine_1+0x8c>
     332:	0b c0       	rjmp	.+22     	; 0x34a <TickFct_State_machine_1+0x88>
	{
		case SM1_off:
		PORTA = 0X00;
     334:	12 b8       	out	0x02, r1	; 2
		break;
     336:	08 95       	ret
		case SM1_on1:
		PORTA = 0x01;
     338:	81 e0       	ldi	r24, 0x01	; 1
     33a:	82 b9       	out	0x02, r24	; 2
		break;
     33c:	08 95       	ret
		case SM1_on2:
		PORTA = 0x02;
     33e:	82 e0       	ldi	r24, 0x02	; 2
     340:	82 b9       	out	0x02, r24	; 2
		break;
     342:	08 95       	ret
		case SM1_on3:
		PORTA = 0x04;
     344:	84 e0       	ldi	r24, 0x04	; 4
     346:	82 b9       	out	0x02, r24	; 2
		break;
     348:	08 95       	ret
		case SM1_on4:
		PORTA = 0x08;
     34a:	88 e0       	ldi	r24, 0x08	; 8
     34c:	82 b9       	out	0x02, r24	; 2
     34e:	08 95       	ret

00000350 <ButtonPress>:
}

enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
     350:	80 91 14 01 	lds	r24, 0x0114
     354:	82 30       	cpi	r24, 0x02	; 2
     356:	a9 f1       	breq	.+106    	; 0x3c2 <ButtonPress+0x72>
     358:	28 f4       	brcc	.+10     	; 0x364 <ButtonPress+0x14>
     35a:	88 23       	and	r24, r24
     35c:	59 f0       	breq	.+22     	; 0x374 <ButtonPress+0x24>
     35e:	81 30       	cpi	r24, 0x01	; 1
     360:	f9 f0       	breq	.+62     	; 0x3a0 <ButtonPress+0x50>
     362:	5f c0       	rjmp	.+190    	; 0x422 <ButtonPress+0xd2>
     364:	84 30       	cpi	r24, 0x04	; 4
     366:	09 f4       	brne	.+2      	; 0x36a <ButtonPress+0x1a>
     368:	4e c0       	rjmp	.+156    	; 0x406 <ButtonPress+0xb6>
     36a:	e0 f1       	brcs	.+120    	; 0x3e4 <ButtonPress+0x94>
     36c:	85 30       	cpi	r24, 0x05	; 5
     36e:	09 f4       	brne	.+2      	; 0x372 <ButtonPress+0x22>
     370:	50 c0       	rjmp	.+160    	; 0x412 <ButtonPress+0xc2>
     372:	57 c0       	rjmp	.+174    	; 0x422 <ButtonPress+0xd2>
	{
		case Init:
		if(global_g == 1)
     374:	80 91 04 01 	lds	r24, 0x0104
     378:	81 30       	cpi	r24, 0x01	; 1
     37a:	09 f0       	breq	.+2      	; 0x37e <ButtonPress+0x2e>
     37c:	75 c0       	rjmp	.+234    	; 0x468 <ButtonPress+0x118>
		{
			if(~PINB & 0x01)
     37e:	18 99       	sbic	0x03, 0	; 3
     380:	05 c0       	rjmp	.+10     	; 0x38c <ButtonPress+0x3c>
			{
				while(~PINB & 0x01){}
     382:	18 9b       	sbis	0x03, 0	; 3
     384:	fe cf       	rjmp	.-4      	; 0x382 <ButtonPress+0x32>
				Press_States = Press1;	
     386:	81 e0       	ldi	r24, 0x01	; 1
     388:	80 93 14 01 	sts	0x0114, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     38c:	19 9b       	sbis	0x03, 1	; 3
     38e:	04 c0       	rjmp	.+8      	; 0x398 <ButtonPress+0x48>
     390:	1a 9b       	sbis	0x03, 2	; 3
     392:	02 c0       	rjmp	.+4      	; 0x398 <ButtonPress+0x48>
     394:	1b 99       	sbic	0x03, 3	; 3
     396:	45 c0       	rjmp	.+138    	; 0x422 <ButtonPress+0xd2>
			{
				Press_States = Error;
     398:	85 e0       	ldi	r24, 0x05	; 5
     39a:	80 93 14 01 	sts	0x0114, r24
     39e:	51 c0       	rjmp	.+162    	; 0x442 <ButtonPress+0xf2>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
     3a0:	19 99       	sbic	0x03, 1	; 3
     3a2:	05 c0       	rjmp	.+10     	; 0x3ae <ButtonPress+0x5e>
		{
			while(~PINB & 0x02){}
     3a4:	19 9b       	sbis	0x03, 1	; 3
     3a6:	fe cf       	rjmp	.-4      	; 0x3a4 <ButtonPress+0x54>
			Press_States = Press2;
     3a8:	82 e0       	ldi	r24, 0x02	; 2
     3aa:	80 93 14 01 	sts	0x0114, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     3ae:	18 9b       	sbis	0x03, 0	; 3
     3b0:	04 c0       	rjmp	.+8      	; 0x3ba <ButtonPress+0x6a>
     3b2:	1a 9b       	sbis	0x03, 2	; 3
     3b4:	02 c0       	rjmp	.+4      	; 0x3ba <ButtonPress+0x6a>
     3b6:	1b 99       	sbic	0x03, 3	; 3
     3b8:	34 c0       	rjmp	.+104    	; 0x422 <ButtonPress+0xd2>
		{
			Press_States = Error;
     3ba:	85 e0       	ldi	r24, 0x05	; 5
     3bc:	80 93 14 01 	sts	0x0114, r24
     3c0:	40 c0       	rjmp	.+128    	; 0x442 <ButtonPress+0xf2>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
     3c2:	1a 99       	sbic	0x03, 2	; 3
     3c4:	05 c0       	rjmp	.+10     	; 0x3d0 <ButtonPress+0x80>
		{
			while(~PINB & 0x04){}
     3c6:	1a 9b       	sbis	0x03, 2	; 3
     3c8:	fe cf       	rjmp	.-4      	; 0x3c6 <ButtonPress+0x76>
			Press_States = Press3;
     3ca:	83 e0       	ldi	r24, 0x03	; 3
     3cc:	80 93 14 01 	sts	0x0114, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     3d0:	19 9b       	sbis	0x03, 1	; 3
     3d2:	04 c0       	rjmp	.+8      	; 0x3dc <ButtonPress+0x8c>
     3d4:	18 9b       	sbis	0x03, 0	; 3
     3d6:	02 c0       	rjmp	.+4      	; 0x3dc <ButtonPress+0x8c>
     3d8:	1b 99       	sbic	0x03, 3	; 3
     3da:	23 c0       	rjmp	.+70     	; 0x422 <ButtonPress+0xd2>
		{
			Press_States = Error;
     3dc:	85 e0       	ldi	r24, 0x05	; 5
     3de:	80 93 14 01 	sts	0x0114, r24
     3e2:	2f c0       	rjmp	.+94     	; 0x442 <ButtonPress+0xf2>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
     3e4:	1b 99       	sbic	0x03, 3	; 3
     3e6:	05 c0       	rjmp	.+10     	; 0x3f2 <ButtonPress+0xa2>
		{
			while(~PINB & 0x08){}
     3e8:	1b 9b       	sbis	0x03, 3	; 3
     3ea:	fe cf       	rjmp	.-4      	; 0x3e8 <ButtonPress+0x98>
			Press_States = Press4;
     3ec:	84 e0       	ldi	r24, 0x04	; 4
     3ee:	80 93 14 01 	sts	0x0114, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     3f2:	19 9b       	sbis	0x03, 1	; 3
     3f4:	04 c0       	rjmp	.+8      	; 0x3fe <ButtonPress+0xae>
     3f6:	1a 9b       	sbis	0x03, 2	; 3
     3f8:	02 c0       	rjmp	.+4      	; 0x3fe <ButtonPress+0xae>
     3fa:	18 99       	sbic	0x03, 0	; 3
     3fc:	12 c0       	rjmp	.+36     	; 0x422 <ButtonPress+0xd2>
		{
			Press_States = Error;
     3fe:	85 e0       	ldi	r24, 0x05	; 5
     400:	80 93 14 01 	sts	0x0114, r24
     404:	1e c0       	rjmp	.+60     	; 0x442 <ButtonPress+0xf2>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
     406:	1c 99       	sbic	0x03, 4	; 3
     408:	28 c0       	rjmp	.+80     	; 0x45a <ButtonPress+0x10a>
		{
			Press_States = Off;	
     40a:	86 e0       	ldi	r24, 0x06	; 6
     40c:	80 93 14 01 	sts	0x0114, r24
     410:	27 c0       	rjmp	.+78     	; 0x460 <ButtonPress+0x110>
		}
		break;
		case Error:
		if(~PINB & 0x01)
     412:	18 99       	sbic	0x03, 0	; 3
     414:	16 c0       	rjmp	.+44     	; 0x442 <ButtonPress+0xf2>
		{
			while(~PINB & 0x01){}
     416:	18 9b       	sbis	0x03, 0	; 3
     418:	fe cf       	rjmp	.-4      	; 0x416 <ButtonPress+0xc6>
			Press_States = Press1;
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	80 93 14 01 	sts	0x0114, r24
     420:	13 c0       	rjmp	.+38     	; 0x448 <ButtonPress+0xf8>
		}
		break;
	}
	switch(Press_States)
     422:	80 91 14 01 	lds	r24, 0x0114
     426:	83 30       	cpi	r24, 0x03	; 3
     428:	a9 f0       	breq	.+42     	; 0x454 <ButtonPress+0x104>
     42a:	28 f4       	brcc	.+10     	; 0x436 <ButtonPress+0xe6>
     42c:	81 30       	cpi	r24, 0x01	; 1
     42e:	61 f0       	breq	.+24     	; 0x448 <ButtonPress+0xf8>
     430:	82 30       	cpi	r24, 0x02	; 2
     432:	69 f0       	breq	.+26     	; 0x44e <ButtonPress+0xfe>
     434:	08 95       	ret
     436:	85 30       	cpi	r24, 0x05	; 5
     438:	21 f0       	breq	.+8      	; 0x442 <ButtonPress+0xf2>
     43a:	78 f0       	brcs	.+30     	; 0x45a <ButtonPress+0x10a>
     43c:	86 30       	cpi	r24, 0x06	; 6
     43e:	81 f0       	breq	.+32     	; 0x460 <ButtonPress+0x110>
     440:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
     442:	80 e1       	ldi	r24, 0x10	; 16
     444:	82 b9       	out	0x02, r24	; 2
		break;
     446:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	82 b9       	out	0x02, r24	; 2
		break;
     44c:	08 95       	ret
		
		case Press2:
		PORTA = 0x02;
     44e:	82 e0       	ldi	r24, 0x02	; 2
     450:	82 b9       	out	0x02, r24	; 2
		break;
     452:	08 95       	ret
		
		case Press3:
		PORTA = 0x04;
     454:	84 e0       	ldi	r24, 0x04	; 4
     456:	82 b9       	out	0x02, r24	; 2
		break;
     458:	08 95       	ret
		
		case Press4:
		PORTA = 0x08;
     45a:	88 e0       	ldi	r24, 0x08	; 8
     45c:	82 b9       	out	0x02, r24	; 2
		break;
     45e:	08 95       	ret
		case Off:
		PORTA = 0x00;
     460:	12 b8       	out	0x02, r1	; 2
		global_g = 2;
     462:	82 e0       	ldi	r24, 0x02	; 2
     464:	80 93 04 01 	sts	0x0104, r24
     468:	08 95       	ret

0000046a <TickFct_Machine2>:
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
     46a:	80 91 0f 01 	lds	r24, 0x010F
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	87 30       	cpi	r24, 0x07	; 7
     472:	91 05       	cpc	r25, r1
     474:	70 f5       	brcc	.+92     	; 0x4d2 <TickFct_Machine2+0x68>
     476:	fc 01       	movw	r30, r24
     478:	ea 5b       	subi	r30, 0xBA	; 186
     47a:	ff 4f       	sbci	r31, 0xFF	; 255
     47c:	d0 c5       	rjmp	.+2976   	; 0x101e <__tablejump2__>
	{
		case SM2_off:
		if(global_g == 2)
     47e:	80 91 04 01 	lds	r24, 0x0104
     482:	82 30       	cpi	r24, 0x02	; 2
     484:	81 f5       	brne	.+96     	; 0x4e6 <TickFct_Machine2+0x7c>
		{
			if(~PINB & 0x01)
     486:	18 99       	sbic	0x03, 0	; 3
     488:	03 c0       	rjmp	.+6      	; 0x490 <TickFct_Machine2+0x26>
			{
				SM2_States = SM2_on1;
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	80 93 0f 01 	sts	0x010F, r24
			}
			while(!(~PINB & 0x01))
     490:	18 9b       	sbis	0x03, 0	; 3
     492:	1f c0       	rjmp	.+62     	; 0x4d2 <TickFct_Machine2+0x68>
			{
				SM2_States = SM2_off;
     494:	10 92 0f 01 	sts	0x010F, r1
		{
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
     498:	18 99       	sbic	0x03, 0	; 3
     49a:	fc cf       	rjmp	.-8      	; 0x494 <TickFct_Machine2+0x2a>
     49c:	24 c0       	rjmp	.+72     	; 0x4e6 <TickFct_Machine2+0x7c>
		else{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
     49e:	82 e0       	ldi	r24, 0x02	; 2
     4a0:	80 93 0f 01 	sts	0x010F, r24
     4a4:	25 c0       	rjmp	.+74     	; 0x4f0 <TickFct_Machine2+0x86>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
     4a6:	83 e0       	ldi	r24, 0x03	; 3
     4a8:	80 93 0f 01 	sts	0x010F, r24
     4ac:	24 c0       	rjmp	.+72     	; 0x4f6 <TickFct_Machine2+0x8c>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
     4ae:	84 e0       	ldi	r24, 0x04	; 4
     4b0:	80 93 0f 01 	sts	0x010F, r24
     4b4:	23 c0       	rjmp	.+70     	; 0x4fc <TickFct_Machine2+0x92>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
     4b6:	85 e0       	ldi	r24, 0x05	; 5
     4b8:	80 93 0f 01 	sts	0x010F, r24
     4bc:	22 c0       	rjmp	.+68     	; 0x502 <TickFct_Machine2+0x98>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
     4be:	86 e0       	ldi	r24, 0x06	; 6
     4c0:	80 93 0f 01 	sts	0x010F, r24
     4c4:	21 c0       	rjmp	.+66     	; 0x508 <TickFct_Machine2+0x9e>
		break;
		case SM2_on6:
		global_g = 3;
     4c6:	83 e0       	ldi	r24, 0x03	; 3
     4c8:	80 93 04 01 	sts	0x0104, r24
		SM2_States = SM2_off;
     4cc:	10 92 0f 01 	sts	0x010F, r1
		break;
     4d0:	0a c0       	rjmp	.+20     	; 0x4e6 <TickFct_Machine2+0x7c>
	}

	switch(SM2_States)
     4d2:	80 91 0f 01 	lds	r24, 0x010F
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	87 30       	cpi	r24, 0x07	; 7
     4da:	91 05       	cpc	r25, r1
     4dc:	b8 f4       	brcc	.+46     	; 0x50c <TickFct_Machine2+0xa2>
     4de:	fc 01       	movw	r30, r24
     4e0:	e3 5b       	subi	r30, 0xB3	; 179
     4e2:	ff 4f       	sbci	r31, 0xFF	; 255
     4e4:	9c c5       	rjmp	.+2872   	; 0x101e <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
     4e6:	12 b8       	out	0x02, r1	; 2
		break;
     4e8:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
     4ea:	81 e0       	ldi	r24, 0x01	; 1
     4ec:	82 b9       	out	0x02, r24	; 2
		break;
     4ee:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
     4f0:	84 e0       	ldi	r24, 0x04	; 4
     4f2:	82 b9       	out	0x02, r24	; 2
		break;
     4f4:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
     4f6:	88 e0       	ldi	r24, 0x08	; 8
     4f8:	82 b9       	out	0x02, r24	; 2
		break;
     4fa:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	82 b9       	out	0x02, r24	; 2
		break;
     500:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
     502:	82 e0       	ldi	r24, 0x02	; 2
     504:	82 b9       	out	0x02, r24	; 2
		break;
     506:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
     508:	81 e0       	ldi	r24, 0x01	; 1
     50a:	82 b9       	out	0x02, r24	; 2
     50c:	08 95       	ret

0000050e <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
     50e:	80 91 0a 01 	lds	r24, 0x010A
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	87 30       	cpi	r24, 0x07	; 7
     516:	91 05       	cpc	r25, r1
     518:	08 f0       	brcs	.+2      	; 0x51c <ButtonPress2+0xe>
     51a:	70 c0       	rjmp	.+224    	; 0x5fc <ButtonPress2+0xee>
     51c:	fc 01       	movw	r30, r24
     51e:	ec 5a       	subi	r30, 0xAC	; 172
     520:	ff 4f       	sbci	r31, 0xFF	; 255
     522:	7d c5       	rjmp	.+2810   	; 0x101e <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
     524:	18 99       	sbic	0x03, 0	; 3
     526:	05 c0       	rjmp	.+10     	; 0x532 <ButtonPress2+0x24>
		{
			while(~PINB & 0x01){}
     528:	18 9b       	sbis	0x03, 0	; 3
     52a:	fe cf       	rjmp	.-4      	; 0x528 <ButtonPress2+0x1a>
			Press_sec_level = Press_state1;
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     532:	19 9b       	sbis	0x03, 1	; 3
     534:	04 c0       	rjmp	.+8      	; 0x53e <ButtonPress2+0x30>
     536:	1a 9b       	sbis	0x03, 2	; 3
     538:	02 c0       	rjmp	.+4      	; 0x53e <ButtonPress2+0x30>
     53a:	1b 99       	sbic	0x03, 3	; 3
     53c:	62 c0       	rjmp	.+196    	; 0x602 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     53e:	87 e0       	ldi	r24, 0x07	; 7
     540:	80 93 0a 01 	sts	0x010A, r24
     544:	69 c0       	rjmp	.+210    	; 0x618 <ButtonPress2+0x10a>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
     546:	1a 99       	sbic	0x03, 2	; 3
     548:	05 c0       	rjmp	.+10     	; 0x554 <ButtonPress2+0x46>
		{
			while(~PINB & 0x04){}
     54a:	1a 9b       	sbis	0x03, 2	; 3
     54c:	fe cf       	rjmp	.-4      	; 0x54a <ButtonPress2+0x3c>
			Press_sec_level = Press_state2;
     54e:	82 e0       	ldi	r24, 0x02	; 2
     550:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     554:	19 9b       	sbis	0x03, 1	; 3
     556:	04 c0       	rjmp	.+8      	; 0x560 <ButtonPress2+0x52>
     558:	18 9b       	sbis	0x03, 0	; 3
     55a:	02 c0       	rjmp	.+4      	; 0x560 <ButtonPress2+0x52>
     55c:	1b 99       	sbic	0x03, 3	; 3
     55e:	51 c0       	rjmp	.+162    	; 0x602 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     560:	87 e0       	ldi	r24, 0x07	; 7
     562:	80 93 0a 01 	sts	0x010A, r24
     566:	58 c0       	rjmp	.+176    	; 0x618 <ButtonPress2+0x10a>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
     568:	1b 99       	sbic	0x03, 3	; 3
     56a:	05 c0       	rjmp	.+10     	; 0x576 <ButtonPress2+0x68>
		{
			while(~PINB & 0x08){}
     56c:	1b 9b       	sbis	0x03, 3	; 3
     56e:	fe cf       	rjmp	.-4      	; 0x56c <ButtonPress2+0x5e>
			Press_sec_level = Press_state3;
     570:	83 e0       	ldi	r24, 0x03	; 3
     572:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     576:	19 9b       	sbis	0x03, 1	; 3
     578:	04 c0       	rjmp	.+8      	; 0x582 <ButtonPress2+0x74>
     57a:	1a 9b       	sbis	0x03, 2	; 3
     57c:	02 c0       	rjmp	.+4      	; 0x582 <ButtonPress2+0x74>
     57e:	18 99       	sbic	0x03, 0	; 3
     580:	40 c0       	rjmp	.+128    	; 0x602 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     582:	87 e0       	ldi	r24, 0x07	; 7
     584:	80 93 0a 01 	sts	0x010A, r24
     588:	47 c0       	rjmp	.+142    	; 0x618 <ButtonPress2+0x10a>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
     58a:	18 99       	sbic	0x03, 0	; 3
     58c:	05 c0       	rjmp	.+10     	; 0x598 <ButtonPress2+0x8a>
		{
			while(~PINB & 0x01){}
     58e:	18 9b       	sbis	0x03, 0	; 3
     590:	fe cf       	rjmp	.-4      	; 0x58e <ButtonPress2+0x80>
			Press_sec_level = Press_state4;
     592:	84 e0       	ldi	r24, 0x04	; 4
     594:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     598:	19 9b       	sbis	0x03, 1	; 3
     59a:	04 c0       	rjmp	.+8      	; 0x5a4 <ButtonPress2+0x96>
     59c:	1a 9b       	sbis	0x03, 2	; 3
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <ButtonPress2+0x96>
     5a0:	1b 99       	sbic	0x03, 3	; 3
     5a2:	2f c0       	rjmp	.+94     	; 0x602 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     5a4:	87 e0       	ldi	r24, 0x07	; 7
     5a6:	80 93 0a 01 	sts	0x010A, r24
     5aa:	36 c0       	rjmp	.+108    	; 0x618 <ButtonPress2+0x10a>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
     5ac:	19 99       	sbic	0x03, 1	; 3
     5ae:	05 c0       	rjmp	.+10     	; 0x5ba <ButtonPress2+0xac>
		{
			while(~PINB & 0x02){}
     5b0:	19 9b       	sbis	0x03, 1	; 3
     5b2:	fe cf       	rjmp	.-4      	; 0x5b0 <ButtonPress2+0xa2>
			Press_sec_level = Press_state5;
     5b4:	85 e0       	ldi	r24, 0x05	; 5
     5b6:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     5ba:	18 9b       	sbis	0x03, 0	; 3
     5bc:	04 c0       	rjmp	.+8      	; 0x5c6 <ButtonPress2+0xb8>
     5be:	1a 9b       	sbis	0x03, 2	; 3
     5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <ButtonPress2+0xb8>
     5c2:	1b 99       	sbic	0x03, 3	; 3
     5c4:	1e c0       	rjmp	.+60     	; 0x602 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     5c6:	87 e0       	ldi	r24, 0x07	; 7
     5c8:	80 93 0a 01 	sts	0x010A, r24
     5cc:	25 c0       	rjmp	.+74     	; 0x618 <ButtonPress2+0x10a>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
     5ce:	18 99       	sbic	0x03, 0	; 3
     5d0:	05 c0       	rjmp	.+10     	; 0x5dc <ButtonPress2+0xce>
		{
			while(~PINB & 0x01){}
     5d2:	18 9b       	sbis	0x03, 0	; 3
     5d4:	fe cf       	rjmp	.-4      	; 0x5d2 <ButtonPress2+0xc4>
			Press_sec_level = Press_state6;
     5d6:	86 e0       	ldi	r24, 0x06	; 6
     5d8:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     5dc:	19 9b       	sbis	0x03, 1	; 3
     5de:	04 c0       	rjmp	.+8      	; 0x5e8 <ButtonPress2+0xda>
     5e0:	1a 9b       	sbis	0x03, 2	; 3
     5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <ButtonPress2+0xda>
     5e4:	1b 99       	sbic	0x03, 3	; 3
     5e6:	0d c0       	rjmp	.+26     	; 0x602 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     5e8:	87 e0       	ldi	r24, 0x07	; 7
     5ea:	80 93 0a 01 	sts	0x010A, r24
     5ee:	14 c0       	rjmp	.+40     	; 0x618 <ButtonPress2+0x10a>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
     5f0:	1c 99       	sbic	0x03, 4	; 3
     5f2:	24 c0       	rjmp	.+72     	; 0x63c <ButtonPress2+0x12e>
		{
			Press_sec_level = Off2;
     5f4:	88 e0       	ldi	r24, 0x08	; 8
     5f6:	80 93 0a 01 	sts	0x010A, r24
     5fa:	23 c0       	rjmp	.+70     	; 0x642 <ButtonPress2+0x134>
		}
		break;
		default:
		Press_sec_level = Init2;
     5fc:	10 92 0a 01 	sts	0x010A, r1
     600:	08 95       	ret
	}
	switch(Press_sec_level)
     602:	80 91 0a 01 	lds	r24, 0x010A
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	fc 01       	movw	r30, r24
     60a:	31 97       	sbiw	r30, 0x01	; 1
     60c:	e8 30       	cpi	r30, 0x08	; 8
     60e:	f1 05       	cpc	r31, r1
     610:	e0 f4       	brcc	.+56     	; 0x64a <ButtonPress2+0x13c>
     612:	e5 5a       	subi	r30, 0xA5	; 165
     614:	ff 4f       	sbci	r31, 0xFF	; 255
     616:	03 c5       	rjmp	.+2566   	; 0x101e <__tablejump2__>
	{
		case Error2:
		PORTA = 0x10;
     618:	80 e1       	ldi	r24, 0x10	; 16
     61a:	82 b9       	out	0x02, r24	; 2
		break;
     61c:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
     61e:	81 e0       	ldi	r24, 0x01	; 1
     620:	82 b9       	out	0x02, r24	; 2
		break;
     622:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
     624:	84 e0       	ldi	r24, 0x04	; 4
     626:	82 b9       	out	0x02, r24	; 2
		break;
     628:	08 95       	ret

		case Press_state3:
		PORTA = 0x08;
     62a:	88 e0       	ldi	r24, 0x08	; 8
     62c:	82 b9       	out	0x02, r24	; 2
		break;
     62e:	08 95       	ret

		case Press_state4:
		PORTA = 0x01;
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	82 b9       	out	0x02, r24	; 2
		break;
     634:	08 95       	ret

		case Press_state5:
		PORTA = 0x02;
     636:	82 e0       	ldi	r24, 0x02	; 2
     638:	82 b9       	out	0x02, r24	; 2
		break;
     63a:	08 95       	ret

		case Press_state6:
		PORTA = 0x01;
     63c:	81 e0       	ldi	r24, 0x01	; 1
     63e:	82 b9       	out	0x02, r24	; 2
		break;
     640:	08 95       	ret

		case Off2:
		PORTA = 0x00;
     642:	12 b8       	out	0x02, r1	; 2
		global_g = 4;
     644:	84 e0       	ldi	r24, 0x04	; 4
     646:	80 93 04 01 	sts	0x0104, r24
     64a:	08 95       	ret

0000064c <TickFct_Machine3>:
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
     64c:	20 91 0b 01 	lds	r18, 0x010B
     650:	82 2f       	mov	r24, r18
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	8a 30       	cpi	r24, 0x0A	; 10
     656:	91 05       	cpc	r25, r1
     658:	98 f5       	brcc	.+102    	; 0x6c0 <TickFct_Machine3+0x74>
     65a:	fc 01       	movw	r30, r24
     65c:	ed 59       	subi	r30, 0x9D	; 157
     65e:	ff 4f       	sbci	r31, 0xFF	; 255
     660:	de c4       	rjmp	.+2492   	; 0x101e <__tablejump2__>
	{
		case SM3_off:
		if(global_g == 4)
     662:	80 91 04 01 	lds	r24, 0x0104
     666:	84 30       	cpi	r24, 0x04	; 4
     668:	a1 f5       	brne	.+104    	; 0x6d2 <TickFct_Machine3+0x86>
		{
			if(~PINB & 0x01)
     66a:	18 99       	sbic	0x03, 0	; 3
     66c:	32 c0       	rjmp	.+100    	; 0x6d2 <TickFct_Machine3+0x86>
			{
				while(~PINB & 0x01){}
     66e:	18 9b       	sbis	0x03, 0	; 3
     670:	fe cf       	rjmp	.-4      	; 0x66e <TickFct_Machine3+0x22>
				SM3_State = SM3_on1;
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	80 93 0b 01 	sts	0x010B, r24
     678:	2e c0       	rjmp	.+92     	; 0x6d6 <TickFct_Machine3+0x8a>
				SM3_State = SM3_off;
			}	
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
     67a:	82 e0       	ldi	r24, 0x02	; 2
     67c:	80 93 0b 01 	sts	0x010B, r24
     680:	2d c0       	rjmp	.+90     	; 0x6dc <TickFct_Machine3+0x90>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
     682:	83 e0       	ldi	r24, 0x03	; 3
     684:	80 93 0b 01 	sts	0x010B, r24
     688:	2c c0       	rjmp	.+88     	; 0x6e2 <TickFct_Machine3+0x96>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
     68a:	84 e0       	ldi	r24, 0x04	; 4
     68c:	80 93 0b 01 	sts	0x010B, r24
     690:	2b c0       	rjmp	.+86     	; 0x6e8 <TickFct_Machine3+0x9c>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
     692:	85 e0       	ldi	r24, 0x05	; 5
     694:	80 93 0b 01 	sts	0x010B, r24
     698:	2a c0       	rjmp	.+84     	; 0x6ee <TickFct_Machine3+0xa2>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
     69a:	86 e0       	ldi	r24, 0x06	; 6
     69c:	80 93 0b 01 	sts	0x010B, r24
     6a0:	29 c0       	rjmp	.+82     	; 0x6f4 <TickFct_Machine3+0xa8>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
     6a2:	87 e0       	ldi	r24, 0x07	; 7
     6a4:	80 93 0b 01 	sts	0x010B, r24
     6a8:	28 c0       	rjmp	.+80     	; 0x6fa <TickFct_Machine3+0xae>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
     6aa:	88 e0       	ldi	r24, 0x08	; 8
     6ac:	80 93 0b 01 	sts	0x010B, r24
     6b0:	27 c0       	rjmp	.+78     	; 0x700 <TickFct_Machine3+0xb4>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
     6b2:	89 e0       	ldi	r24, 0x09	; 9
     6b4:	80 93 0b 01 	sts	0x010B, r24
     6b8:	26 c0       	rjmp	.+76     	; 0x706 <TickFct_Machine3+0xba>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
     6ba:	10 92 0b 01 	sts	0x010B, r1
     6be:	09 c0       	rjmp	.+18     	; 0x6d2 <TickFct_Machine3+0x86>
	}
	switch(SM3_State)
     6c0:	82 2f       	mov	r24, r18
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	8a 30       	cpi	r24, 0x0A	; 10
     6c6:	91 05       	cpc	r25, r1
     6c8:	18 f5       	brcc	.+70     	; 0x710 <TickFct_Machine3+0xc4>
     6ca:	fc 01       	movw	r30, r24
     6cc:	e3 59       	subi	r30, 0x93	; 147
     6ce:	ff 4f       	sbci	r31, 0xFF	; 255
     6d0:	a6 c4       	rjmp	.+2380   	; 0x101e <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
     6d2:	12 b8       	out	0x02, r1	; 2
		break;
     6d4:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
     6d6:	82 e0       	ldi	r24, 0x02	; 2
     6d8:	82 b9       	out	0x02, r24	; 2
		break;
     6da:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
     6dc:	84 e0       	ldi	r24, 0x04	; 4
     6de:	82 b9       	out	0x02, r24	; 2
		break;
     6e0:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	82 b9       	out	0x02, r24	; 2
		break;
     6e6:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
     6e8:	88 e0       	ldi	r24, 0x08	; 8
     6ea:	82 b9       	out	0x02, r24	; 2
		break;
     6ec:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
     6ee:	82 e0       	ldi	r24, 0x02	; 2
     6f0:	82 b9       	out	0x02, r24	; 2
		break;
     6f2:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
     6f4:	84 e0       	ldi	r24, 0x04	; 4
     6f6:	82 b9       	out	0x02, r24	; 2
		break;
     6f8:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	82 b9       	out	0x02, r24	; 2
		break;
     6fe:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
     700:	82 e0       	ldi	r24, 0x02	; 2
     702:	82 b9       	out	0x02, r24	; 2
		break;
     704:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
     706:	88 e0       	ldi	r24, 0x08	; 8
     708:	82 b9       	out	0x02, r24	; 2
		global_g = 5;
     70a:	85 e0       	ldi	r24, 0x05	; 5
     70c:	80 93 04 01 	sts	0x0104, r24
     710:	08 95       	ret

00000712 <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
     712:	80 91 11 01 	lds	r24, 0x0111
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	8b 30       	cpi	r24, 0x0B	; 11
     71a:	91 05       	cpc	r25, r1
     71c:	08 f0       	brcs	.+2      	; 0x720 <ButtonPress3+0xe>
     71e:	b1 c0       	rjmp	.+354    	; 0x882 <ButtonPress3+0x170>
     720:	fc 01       	movw	r30, r24
     722:	e9 58       	subi	r30, 0x89	; 137
     724:	ff 4f       	sbci	r31, 0xFF	; 255
     726:	7b c4       	rjmp	.+2294   	; 0x101e <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
     728:	80 91 04 01 	lds	r24, 0x0104
     72c:	85 30       	cpi	r24, 0x05	; 5
     72e:	09 f0       	breq	.+2      	; 0x732 <ButtonPress3+0x20>
     730:	d5 c0       	rjmp	.+426    	; 0x8dc <ButtonPress3+0x1ca>
		{
			PORTA = 0x00;
     732:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
     734:	19 99       	sbic	0x03, 1	; 3
     736:	05 c0       	rjmp	.+10     	; 0x742 <ButtonPress3+0x30>
			{
				while(~PINB & 0x02){}
     738:	19 9b       	sbis	0x03, 1	; 3
     73a:	fe cf       	rjmp	.-4      	; 0x738 <ButtonPress3+0x26>
				Press_third_level = Press3_state1;
     73c:	81 e0       	ldi	r24, 0x01	; 1
     73e:	80 93 11 01 	sts	0x0111, r24
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     742:	18 9b       	sbis	0x03, 0	; 3
     744:	04 c0       	rjmp	.+8      	; 0x74e <ButtonPress3+0x3c>
     746:	1a 9b       	sbis	0x03, 2	; 3
     748:	02 c0       	rjmp	.+4      	; 0x74e <ButtonPress3+0x3c>
     74a:	1b 99       	sbic	0x03, 3	; 3
     74c:	9a c0       	rjmp	.+308    	; 0x882 <ButtonPress3+0x170>
			{
				Press_third_level = Error3;
     74e:	8a e0       	ldi	r24, 0x0A	; 10
     750:	80 93 11 01 	sts	0x0111, r24
     754:	a1 c0       	rjmp	.+322    	; 0x898 <ButtonPress3+0x186>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
     756:	19 99       	sbic	0x03, 1	; 3
     758:	9f c0       	rjmp	.+318    	; 0x898 <ButtonPress3+0x186>
		{
			while(~PINB & 0x02){}
     75a:	19 9b       	sbis	0x03, 1	; 3
     75c:	fe cf       	rjmp	.-4      	; 0x75a <ButtonPress3+0x48>
			Press_third_level = Press3_state1;
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	80 93 11 01 	sts	0x0111, r24
     764:	9c c0       	rjmp	.+312    	; 0x89e <ButtonPress3+0x18c>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
     766:	1a 99       	sbic	0x03, 2	; 3
     768:	05 c0       	rjmp	.+10     	; 0x774 <ButtonPress3+0x62>
		{
			
			while(~PINB & 0x04){}
     76a:	1a 9b       	sbis	0x03, 2	; 3
     76c:	fe cf       	rjmp	.-4      	; 0x76a <ButtonPress3+0x58>
			Press_third_level = Press3_state2;
     76e:	82 e0       	ldi	r24, 0x02	; 2
     770:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     774:	19 9b       	sbis	0x03, 1	; 3
     776:	04 c0       	rjmp	.+8      	; 0x780 <ButtonPress3+0x6e>
     778:	18 9b       	sbis	0x03, 0	; 3
     77a:	02 c0       	rjmp	.+4      	; 0x780 <ButtonPress3+0x6e>
     77c:	1b 99       	sbic	0x03, 3	; 3
     77e:	81 c0       	rjmp	.+258    	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     780:	8a e0       	ldi	r24, 0x0A	; 10
     782:	80 93 11 01 	sts	0x0111, r24
     786:	88 c0       	rjmp	.+272    	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
     788:	18 99       	sbic	0x03, 0	; 3
     78a:	05 c0       	rjmp	.+10     	; 0x796 <ButtonPress3+0x84>
		{
			while(~PINB & 0x01){}
     78c:	18 9b       	sbis	0x03, 0	; 3
     78e:	fe cf       	rjmp	.-4      	; 0x78c <ButtonPress3+0x7a>
			Press_third_level = Press3_state3;
     790:	83 e0       	ldi	r24, 0x03	; 3
     792:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     796:	19 9b       	sbis	0x03, 1	; 3
     798:	04 c0       	rjmp	.+8      	; 0x7a2 <ButtonPress3+0x90>
     79a:	1a 9b       	sbis	0x03, 2	; 3
     79c:	02 c0       	rjmp	.+4      	; 0x7a2 <ButtonPress3+0x90>
     79e:	1b 99       	sbic	0x03, 3	; 3
     7a0:	70 c0       	rjmp	.+224    	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     7a2:	8a e0       	ldi	r24, 0x0A	; 10
     7a4:	80 93 11 01 	sts	0x0111, r24
     7a8:	77 c0       	rjmp	.+238    	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
     7aa:	1b 99       	sbic	0x03, 3	; 3
     7ac:	05 c0       	rjmp	.+10     	; 0x7b8 <ButtonPress3+0xa6>
		{
			while(~PINB & 0x08){}
     7ae:	1b 9b       	sbis	0x03, 3	; 3
     7b0:	fe cf       	rjmp	.-4      	; 0x7ae <ButtonPress3+0x9c>
			Press_third_level = Press3_state4;
     7b2:	84 e0       	ldi	r24, 0x04	; 4
     7b4:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     7b8:	19 9b       	sbis	0x03, 1	; 3
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <ButtonPress3+0xb2>
     7bc:	1a 9b       	sbis	0x03, 2	; 3
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <ButtonPress3+0xb2>
     7c0:	18 99       	sbic	0x03, 0	; 3
     7c2:	5f c0       	rjmp	.+190    	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     7c4:	8a e0       	ldi	r24, 0x0A	; 10
     7c6:	80 93 11 01 	sts	0x0111, r24
     7ca:	66 c0       	rjmp	.+204    	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
     7cc:	19 99       	sbic	0x03, 1	; 3
     7ce:	05 c0       	rjmp	.+10     	; 0x7da <ButtonPress3+0xc8>
		{
			while(~PINB & 0x02){}
     7d0:	19 9b       	sbis	0x03, 1	; 3
     7d2:	fe cf       	rjmp	.-4      	; 0x7d0 <ButtonPress3+0xbe>
			Press_third_level = Press3_state5;
     7d4:	85 e0       	ldi	r24, 0x05	; 5
     7d6:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     7da:	18 9b       	sbis	0x03, 0	; 3
     7dc:	04 c0       	rjmp	.+8      	; 0x7e6 <ButtonPress3+0xd4>
     7de:	1a 9b       	sbis	0x03, 2	; 3
     7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <ButtonPress3+0xd4>
     7e2:	1b 99       	sbic	0x03, 3	; 3
     7e4:	4e c0       	rjmp	.+156    	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     7e6:	8a e0       	ldi	r24, 0x0A	; 10
     7e8:	80 93 11 01 	sts	0x0111, r24
     7ec:	55 c0       	rjmp	.+170    	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
     7ee:	1a 99       	sbic	0x03, 2	; 3
     7f0:	05 c0       	rjmp	.+10     	; 0x7fc <ButtonPress3+0xea>
		{
			
			while(~PINB & 0x04){}
     7f2:	1a 9b       	sbis	0x03, 2	; 3
     7f4:	fe cf       	rjmp	.-4      	; 0x7f2 <ButtonPress3+0xe0>
			Press_third_level = Press3_state6;
     7f6:	86 e0       	ldi	r24, 0x06	; 6
     7f8:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     7fc:	19 9b       	sbis	0x03, 1	; 3
     7fe:	04 c0       	rjmp	.+8      	; 0x808 <ButtonPress3+0xf6>
     800:	18 9b       	sbis	0x03, 0	; 3
     802:	02 c0       	rjmp	.+4      	; 0x808 <ButtonPress3+0xf6>
     804:	1b 99       	sbic	0x03, 3	; 3
     806:	3d c0       	rjmp	.+122    	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     808:	8a e0       	ldi	r24, 0x0A	; 10
     80a:	80 93 11 01 	sts	0x0111, r24
     80e:	44 c0       	rjmp	.+136    	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
     810:	18 99       	sbic	0x03, 0	; 3
     812:	05 c0       	rjmp	.+10     	; 0x81e <ButtonPress3+0x10c>
		{
			while(~PINB & 0x01){}
     814:	18 9b       	sbis	0x03, 0	; 3
     816:	fe cf       	rjmp	.-4      	; 0x814 <ButtonPress3+0x102>
			Press_third_level = Press3_state7;
     818:	87 e0       	ldi	r24, 0x07	; 7
     81a:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     81e:	19 9b       	sbis	0x03, 1	; 3
     820:	04 c0       	rjmp	.+8      	; 0x82a <ButtonPress3+0x118>
     822:	1a 9b       	sbis	0x03, 2	; 3
     824:	02 c0       	rjmp	.+4      	; 0x82a <ButtonPress3+0x118>
     826:	1b 99       	sbic	0x03, 3	; 3
     828:	2c c0       	rjmp	.+88     	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     82a:	8a e0       	ldi	r24, 0x0A	; 10
     82c:	80 93 11 01 	sts	0x0111, r24
     830:	33 c0       	rjmp	.+102    	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
     832:	19 99       	sbic	0x03, 1	; 3
     834:	05 c0       	rjmp	.+10     	; 0x840 <ButtonPress3+0x12e>
		{
			while(~PINB & 0x02){}
     836:	19 9b       	sbis	0x03, 1	; 3
     838:	fe cf       	rjmp	.-4      	; 0x836 <ButtonPress3+0x124>
			Press_third_level = Press3_state8;
     83a:	88 e0       	ldi	r24, 0x08	; 8
     83c:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     840:	18 9b       	sbis	0x03, 0	; 3
     842:	04 c0       	rjmp	.+8      	; 0x84c <ButtonPress3+0x13a>
     844:	1a 9b       	sbis	0x03, 2	; 3
     846:	02 c0       	rjmp	.+4      	; 0x84c <ButtonPress3+0x13a>
     848:	1b 99       	sbic	0x03, 3	; 3
     84a:	1b c0       	rjmp	.+54     	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     84c:	8a e0       	ldi	r24, 0x0A	; 10
     84e:	80 93 11 01 	sts	0x0111, r24
     852:	22 c0       	rjmp	.+68     	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
     854:	1b 99       	sbic	0x03, 3	; 3
     856:	05 c0       	rjmp	.+10     	; 0x862 <ButtonPress3+0x150>
		{
			while(~PINB & 0x08){}
     858:	1b 9b       	sbis	0x03, 3	; 3
     85a:	fe cf       	rjmp	.-4      	; 0x858 <ButtonPress3+0x146>
			Press_third_level = Press3_state9;
     85c:	89 e0       	ldi	r24, 0x09	; 9
     85e:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     862:	19 9b       	sbis	0x03, 1	; 3
     864:	04 c0       	rjmp	.+8      	; 0x86e <ButtonPress3+0x15c>
     866:	1a 9b       	sbis	0x03, 2	; 3
     868:	02 c0       	rjmp	.+4      	; 0x86e <ButtonPress3+0x15c>
     86a:	18 99       	sbic	0x03, 0	; 3
     86c:	0a c0       	rjmp	.+20     	; 0x882 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     86e:	8a e0       	ldi	r24, 0x0A	; 10
     870:	80 93 11 01 	sts	0x0111, r24
     874:	11 c0       	rjmp	.+34     	; 0x898 <ButtonPress3+0x186>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
     876:	1c 99       	sbic	0x03, 4	; 3
     878:	2a c0       	rjmp	.+84     	; 0x8ce <ButtonPress3+0x1bc>
		{
			Press_third_level = Off3;
     87a:	8b e0       	ldi	r24, 0x0B	; 11
     87c:	80 93 11 01 	sts	0x0111, r24
     880:	29 c0       	rjmp	.+82     	; 0x8d4 <ButtonPress3+0x1c2>
		}
		break;
	}
	switch(Press_third_level)
     882:	80 91 11 01 	lds	r24, 0x0111
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	fc 01       	movw	r30, r24
     88a:	31 97       	sbiw	r30, 0x01	; 1
     88c:	eb 30       	cpi	r30, 0x0B	; 11
     88e:	f1 05       	cpc	r31, r1
     890:	28 f5       	brcc	.+74     	; 0x8dc <ButtonPress3+0x1ca>
     892:	ee 57       	subi	r30, 0x7E	; 126
     894:	ff 4f       	sbci	r31, 0xFF	; 255
     896:	c3 c3       	rjmp	.+1926   	; 0x101e <__tablejump2__>
	{
		case Error3:
		PORTA = 0x10;
     898:	80 e1       	ldi	r24, 0x10	; 16
     89a:	82 b9       	out	0x02, r24	; 2
		break;
     89c:	08 95       	ret
		case Press3_state1:
		PORTA = 0x02;
     89e:	82 e0       	ldi	r24, 0x02	; 2
     8a0:	82 b9       	out	0x02, r24	; 2
		break;
     8a2:	08 95       	ret
		case Press3_state2:
		PORTA = 0x04;
     8a4:	84 e0       	ldi	r24, 0x04	; 4
     8a6:	82 b9       	out	0x02, r24	; 2
		break;
     8a8:	08 95       	ret
		case Press3_state3:
		PORTA = 0x01;
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	82 b9       	out	0x02, r24	; 2
		break;
     8ae:	08 95       	ret
		case Press3_state4:
		PORTA = 0x08;
     8b0:	88 e0       	ldi	r24, 0x08	; 8
     8b2:	82 b9       	out	0x02, r24	; 2
		break;
     8b4:	08 95       	ret
		case Press3_state5:
		PORTA = 0x02;
     8b6:	82 e0       	ldi	r24, 0x02	; 2
     8b8:	82 b9       	out	0x02, r24	; 2
		break;
     8ba:	08 95       	ret
		case Press3_state6:
		PORTA = 0x04;
     8bc:	84 e0       	ldi	r24, 0x04	; 4
     8be:	82 b9       	out	0x02, r24	; 2
		break;
     8c0:	08 95       	ret
		case Press3_state7:
		PORTA = 0x01;
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	82 b9       	out	0x02, r24	; 2
		break;
     8c6:	08 95       	ret
		case Press3_state8:
		PORTA = 0x02;
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	82 b9       	out	0x02, r24	; 2
		break;
     8cc:	08 95       	ret
		case Press3_state9:
		PORTA = 0x08;
     8ce:	88 e0       	ldi	r24, 0x08	; 8
     8d0:	82 b9       	out	0x02, r24	; 2
		break;
     8d2:	08 95       	ret
		case Off3:
		PORTA = 0x00;
     8d4:	12 b8       	out	0x02, r1	; 2
		global_g = 6;
     8d6:	86 e0       	ldi	r24, 0x06	; 6
     8d8:	80 93 04 01 	sts	0x0104, r24
     8dc:	08 95       	ret

000008de <TickFct_Machine4>:
}

enum SM4_States {SM4_off, SM4_on1, SM4_on2, SM4_on3, SM4_on4, SM4_on5, SM4_on6, SM4_on7, SM4_on8, SM4_on9, SM4_on10, SM4_on11, SM4_on12} SM4_States;
void TickFct_Machine4()
{
	switch(SM4_States)
     8de:	20 91 0c 01 	lds	r18, 0x010C
     8e2:	82 2f       	mov	r24, r18
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	8d 30       	cpi	r24, 0x0D	; 13
     8e8:	91 05       	cpc	r25, r1
     8ea:	08 f0       	brcs	.+2      	; 0x8ee <TickFct_Machine4+0x10>
     8ec:	40 c0       	rjmp	.+128    	; 0x96e <TickFct_Machine4+0x90>
     8ee:	fc 01       	movw	r30, r24
     8f0:	e3 57       	subi	r30, 0x73	; 115
     8f2:	ff 4f       	sbci	r31, 0xFF	; 255
     8f4:	94 c3       	rjmp	.+1832   	; 0x101e <__tablejump2__>
	{
		case SM4_off:
		if(global_g == 6)
     8f6:	80 91 04 01 	lds	r24, 0x0104
     8fa:	86 30       	cpi	r24, 0x06	; 6
     8fc:	09 f0       	breq	.+2      	; 0x900 <TickFct_Machine4+0x22>
     8fe:	40 c0       	rjmp	.+128    	; 0x980 <TickFct_Machine4+0xa2>
		{
			if(~PINB & 0x01)
     900:	18 99       	sbic	0x03, 0	; 3
     902:	3e c0       	rjmp	.+124    	; 0x980 <TickFct_Machine4+0xa2>
			{
				while(~PINB & 0x01){}
     904:	18 9b       	sbis	0x03, 0	; 3
     906:	fe cf       	rjmp	.-4      	; 0x904 <TickFct_Machine4+0x26>
				SM4_States = SM4_on1;
     908:	81 e0       	ldi	r24, 0x01	; 1
     90a:	80 93 0c 01 	sts	0x010C, r24
     90e:	3a c0       	rjmp	.+116    	; 0x984 <TickFct_Machine4+0xa6>
				SM4_States = SM4_off;
			}
		}
		break;
		case SM4_on1:
		SM4_States = SM4_on2;
     910:	82 e0       	ldi	r24, 0x02	; 2
     912:	80 93 0c 01 	sts	0x010C, r24
     916:	39 c0       	rjmp	.+114    	; 0x98a <TickFct_Machine4+0xac>
		break;
		case SM4_on2:
		SM4_States = SM4_on3;
     918:	83 e0       	ldi	r24, 0x03	; 3
     91a:	80 93 0c 01 	sts	0x010C, r24
     91e:	38 c0       	rjmp	.+112    	; 0x990 <TickFct_Machine4+0xb2>
		break;
		case SM4_on3:
		SM4_States = SM4_on4;
     920:	84 e0       	ldi	r24, 0x04	; 4
     922:	80 93 0c 01 	sts	0x010C, r24
     926:	37 c0       	rjmp	.+110    	; 0x996 <TickFct_Machine4+0xb8>
		break;
		case SM4_on4:
		SM4_States = SM4_on5;
     928:	85 e0       	ldi	r24, 0x05	; 5
     92a:	80 93 0c 01 	sts	0x010C, r24
     92e:	36 c0       	rjmp	.+108    	; 0x99c <TickFct_Machine4+0xbe>
		break;
		case SM4_on5:
		SM4_States = SM4_on6;
     930:	86 e0       	ldi	r24, 0x06	; 6
     932:	80 93 0c 01 	sts	0x010C, r24
     936:	35 c0       	rjmp	.+106    	; 0x9a2 <TickFct_Machine4+0xc4>
		break;
		case SM4_on6:
		SM4_States = SM4_on7;
     938:	87 e0       	ldi	r24, 0x07	; 7
     93a:	80 93 0c 01 	sts	0x010C, r24
     93e:	34 c0       	rjmp	.+104    	; 0x9a8 <TickFct_Machine4+0xca>
		break;
		case SM4_on7:
		SM4_States = SM4_on8;
     940:	88 e0       	ldi	r24, 0x08	; 8
     942:	80 93 0c 01 	sts	0x010C, r24
     946:	33 c0       	rjmp	.+102    	; 0x9ae <TickFct_Machine4+0xd0>
		break;
		case SM4_on8:
		SM4_States = SM4_on9;
     948:	89 e0       	ldi	r24, 0x09	; 9
     94a:	80 93 0c 01 	sts	0x010C, r24
     94e:	32 c0       	rjmp	.+100    	; 0x9b4 <TickFct_Machine4+0xd6>
		break;
		case SM4_on9:
		SM4_States = SM4_on10;
     950:	8a e0       	ldi	r24, 0x0A	; 10
     952:	80 93 0c 01 	sts	0x010C, r24
     956:	31 c0       	rjmp	.+98     	; 0x9ba <TickFct_Machine4+0xdc>
		break;
		case SM4_on10:
		SM4_States = SM4_on11;
     958:	8b e0       	ldi	r24, 0x0B	; 11
     95a:	80 93 0c 01 	sts	0x010C, r24
     95e:	30 c0       	rjmp	.+96     	; 0x9c0 <TickFct_Machine4+0xe2>
		break;
		case SM4_on11:
		SM4_States = SM4_on12;
     960:	8c e0       	ldi	r24, 0x0C	; 12
     962:	80 93 0c 01 	sts	0x010C, r24
     966:	2f c0       	rjmp	.+94     	; 0x9c6 <TickFct_Machine4+0xe8>
		break;
		case SM4_on12:
		SM4_States = SM4_off;
     968:	10 92 0c 01 	sts	0x010C, r1
		break;
     96c:	09 c0       	rjmp	.+18     	; 0x980 <TickFct_Machine4+0xa2>
	}
	switch(SM4_States)
     96e:	82 2f       	mov	r24, r18
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	8d 30       	cpi	r24, 0x0D	; 13
     974:	91 05       	cpc	r25, r1
     976:	60 f5       	brcc	.+88     	; 0x9d0 <TickFct_Machine4+0xf2>
     978:	fc 01       	movw	r30, r24
     97a:	e6 56       	subi	r30, 0x66	; 102
     97c:	ff 4f       	sbci	r31, 0xFF	; 255
     97e:	4f c3       	rjmp	.+1694   	; 0x101e <__tablejump2__>
	{
		case SM4_off:
		PORTA = 0x00;
     980:	12 b8       	out	0x02, r1	; 2
		break;
     982:	08 95       	ret
		case SM4_on1:
		PORTA = 0x01;
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	82 b9       	out	0x02, r24	; 2
		break;
     988:	08 95       	ret
		case SM4_on2:
		PORTA = 0x08;
     98a:	88 e0       	ldi	r24, 0x08	; 8
     98c:	82 b9       	out	0x02, r24	; 2
		break;
     98e:	08 95       	ret
		case SM4_on3:
		PORTA = 0x02;
     990:	82 e0       	ldi	r24, 0x02	; 2
     992:	82 b9       	out	0x02, r24	; 2
		break;
     994:	08 95       	ret
		case SM4_on4:
		PORTA = 0x01;
     996:	81 e0       	ldi	r24, 0x01	; 1
     998:	82 b9       	out	0x02, r24	; 2
		break;
     99a:	08 95       	ret
		case SM4_on5:
		PORTA = 0x02;
     99c:	82 e0       	ldi	r24, 0x02	; 2
     99e:	82 b9       	out	0x02, r24	; 2
		break;
     9a0:	08 95       	ret
		case SM4_on6:
		PORTA = 0x08;
     9a2:	88 e0       	ldi	r24, 0x08	; 8
     9a4:	82 b9       	out	0x02, r24	; 2
		break;
     9a6:	08 95       	ret
		case SM4_on7:
		PORTA = 0x02;
     9a8:	82 e0       	ldi	r24, 0x02	; 2
     9aa:	82 b9       	out	0x02, r24	; 2
		break;
     9ac:	08 95       	ret
		case SM4_on8:
		PORTA = 0x01;
     9ae:	81 e0       	ldi	r24, 0x01	; 1
     9b0:	82 b9       	out	0x02, r24	; 2
		break;
     9b2:	08 95       	ret
		case SM4_on9:
		PORTA = 0x08;
     9b4:	88 e0       	ldi	r24, 0x08	; 8
     9b6:	82 b9       	out	0x02, r24	; 2
		break;
     9b8:	08 95       	ret
		case SM4_on10:
		PORTA = 0x01;
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	82 b9       	out	0x02, r24	; 2
		break;
     9be:	08 95       	ret
		case SM4_on11:
		PORTA = 0x02;
     9c0:	82 e0       	ldi	r24, 0x02	; 2
     9c2:	82 b9       	out	0x02, r24	; 2
		break;
     9c4:	08 95       	ret
		case SM4_on12:
		PORTA = 0x01;
     9c6:	81 e0       	ldi	r24, 0x01	; 1
     9c8:	82 b9       	out	0x02, r24	; 2
		global_g = 7;
     9ca:	87 e0       	ldi	r24, 0x07	; 7
     9cc:	80 93 04 01 	sts	0x0104, r24
     9d0:	08 95       	ret

000009d2 <ButtonPress4>:
}

enum Press_fourth_level{Init4, Press4_state1, Press4_state2, Press4_state3, Press4_state4, Press4_state5, Press4_state6, Press4_state7, Press4_state8, Press4_state9, Press4_state10, Press4_state11, Press4_state12, Error4, Off4} Press_fourth_level;
void ButtonPress4()
{
	switch(Press_fourth_level)
     9d2:	80 91 0e 01 	lds	r24, 0x010E
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	8e 30       	cpi	r24, 0x0E	; 14
     9da:	91 05       	cpc	r25, r1
     9dc:	08 f0       	brcs	.+2      	; 0x9e0 <ButtonPress4+0xe>
     9de:	e4 c0       	rjmp	.+456    	; 0xba8 <ButtonPress4+0x1d6>
     9e0:	fc 01       	movw	r30, r24
     9e2:	e9 55       	subi	r30, 0x59	; 89
     9e4:	ff 4f       	sbci	r31, 0xFF	; 255
     9e6:	1b c3       	rjmp	.+1590   	; 0x101e <__tablejump2__>
	{
		case Init4:
		if(global_g == 7)
     9e8:	80 91 04 01 	lds	r24, 0x0104
     9ec:	87 30       	cpi	r24, 0x07	; 7
     9ee:	09 f0       	breq	.+2      	; 0x9f2 <ButtonPress4+0x20>
     9f0:	11 c1       	rjmp	.+546    	; 0xc14 <ButtonPress4+0x242>
		{
			PORTA = 0x00;
     9f2:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x01)
     9f4:	18 99       	sbic	0x03, 0	; 3
     9f6:	05 c0       	rjmp	.+10     	; 0xa02 <ButtonPress4+0x30>
			{
				while(~PINB & 0x01){}
     9f8:	18 9b       	sbis	0x03, 0	; 3
     9fa:	fe cf       	rjmp	.-4      	; 0x9f8 <ButtonPress4+0x26>
				Press_fourth_level = Press4_state1; 
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	80 93 0e 01 	sts	0x010E, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     a02:	19 9b       	sbis	0x03, 1	; 3
     a04:	04 c0       	rjmp	.+8      	; 0xa0e <ButtonPress4+0x3c>
     a06:	1a 9b       	sbis	0x03, 2	; 3
     a08:	02 c0       	rjmp	.+4      	; 0xa0e <ButtonPress4+0x3c>
     a0a:	1b 99       	sbic	0x03, 3	; 3
     a0c:	cd c0       	rjmp	.+410    	; 0xba8 <ButtonPress4+0x1d6>
			{
				Press_fourth_level = Error4;
     a0e:	8d e0       	ldi	r24, 0x0D	; 13
     a10:	80 93 0e 01 	sts	0x010E, r24
     a14:	d4 c0       	rjmp	.+424    	; 0xbbe <ButtonPress4+0x1ec>
			}
		}
		break;
		case Press4_state1:
		if(~PINB & 0x08)
     a16:	1b 99       	sbic	0x03, 3	; 3
     a18:	05 c0       	rjmp	.+10     	; 0xa24 <ButtonPress4+0x52>
		{
			while(~PINB & 0x08){}
     a1a:	1b 9b       	sbis	0x03, 3	; 3
     a1c:	fe cf       	rjmp	.-4      	; 0xa1a <ButtonPress4+0x48>
			Press_fourth_level = Press4_state2;
     a1e:	82 e0       	ldi	r24, 0x02	; 2
     a20:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     a24:	19 9b       	sbis	0x03, 1	; 3
     a26:	04 c0       	rjmp	.+8      	; 0xa30 <ButtonPress4+0x5e>
     a28:	1a 9b       	sbis	0x03, 2	; 3
     a2a:	02 c0       	rjmp	.+4      	; 0xa30 <ButtonPress4+0x5e>
     a2c:	18 99       	sbic	0x03, 0	; 3
     a2e:	bc c0       	rjmp	.+376    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     a30:	8d e0       	ldi	r24, 0x0D	; 13
     a32:	80 93 0e 01 	sts	0x010E, r24
     a36:	c3 c0       	rjmp	.+390    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state2:
		if(~PINB & 0x02)
     a38:	19 99       	sbic	0x03, 1	; 3
     a3a:	05 c0       	rjmp	.+10     	; 0xa46 <ButtonPress4+0x74>
		{
			while(~PINB & 0x02){}
     a3c:	19 9b       	sbis	0x03, 1	; 3
     a3e:	fe cf       	rjmp	.-4      	; 0xa3c <ButtonPress4+0x6a>
			Press_fourth_level = Press4_state3;
     a40:	83 e0       	ldi	r24, 0x03	; 3
     a42:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     a46:	18 9b       	sbis	0x03, 0	; 3
     a48:	04 c0       	rjmp	.+8      	; 0xa52 <ButtonPress4+0x80>
     a4a:	1a 9b       	sbis	0x03, 2	; 3
     a4c:	02 c0       	rjmp	.+4      	; 0xa52 <ButtonPress4+0x80>
     a4e:	1b 99       	sbic	0x03, 3	; 3
     a50:	ab c0       	rjmp	.+342    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     a52:	8d e0       	ldi	r24, 0x0D	; 13
     a54:	80 93 0e 01 	sts	0x010E, r24
     a58:	b2 c0       	rjmp	.+356    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state3:
		if(~PINB & 0x01)
     a5a:	18 99       	sbic	0x03, 0	; 3
     a5c:	05 c0       	rjmp	.+10     	; 0xa68 <ButtonPress4+0x96>
		{
			while(~PINB & 0x01){}
     a5e:	18 9b       	sbis	0x03, 0	; 3
     a60:	fe cf       	rjmp	.-4      	; 0xa5e <ButtonPress4+0x8c>
			Press_fourth_level = Press4_state4;
     a62:	84 e0       	ldi	r24, 0x04	; 4
     a64:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     a68:	19 9b       	sbis	0x03, 1	; 3
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <ButtonPress4+0xa2>
     a6c:	1a 9b       	sbis	0x03, 2	; 3
     a6e:	02 c0       	rjmp	.+4      	; 0xa74 <ButtonPress4+0xa2>
     a70:	1b 99       	sbic	0x03, 3	; 3
     a72:	9a c0       	rjmp	.+308    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     a74:	8d e0       	ldi	r24, 0x0D	; 13
     a76:	80 93 0e 01 	sts	0x010E, r24
     a7a:	a1 c0       	rjmp	.+322    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state4:
		if(~PINB & 0x02)
     a7c:	19 99       	sbic	0x03, 1	; 3
     a7e:	05 c0       	rjmp	.+10     	; 0xa8a <ButtonPress4+0xb8>
		{
			while(~PINB & 0x02){}
     a80:	19 9b       	sbis	0x03, 1	; 3
     a82:	fe cf       	rjmp	.-4      	; 0xa80 <ButtonPress4+0xae>
			Press_fourth_level = Press4_state5;
     a84:	85 e0       	ldi	r24, 0x05	; 5
     a86:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     a8a:	18 9b       	sbis	0x03, 0	; 3
     a8c:	04 c0       	rjmp	.+8      	; 0xa96 <ButtonPress4+0xc4>
     a8e:	1a 9b       	sbis	0x03, 2	; 3
     a90:	02 c0       	rjmp	.+4      	; 0xa96 <ButtonPress4+0xc4>
     a92:	1b 99       	sbic	0x03, 3	; 3
     a94:	89 c0       	rjmp	.+274    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     a96:	8d e0       	ldi	r24, 0x0D	; 13
     a98:	80 93 0e 01 	sts	0x010E, r24
     a9c:	90 c0       	rjmp	.+288    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state5:
		if(~PINB & 0x08)
     a9e:	1b 99       	sbic	0x03, 3	; 3
     aa0:	05 c0       	rjmp	.+10     	; 0xaac <ButtonPress4+0xda>
		{
			while(~PINB & 0x08){}
     aa2:	1b 9b       	sbis	0x03, 3	; 3
     aa4:	fe cf       	rjmp	.-4      	; 0xaa2 <ButtonPress4+0xd0>
			Press_fourth_level = Press4_state6;
     aa6:	86 e0       	ldi	r24, 0x06	; 6
     aa8:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     aac:	19 9b       	sbis	0x03, 1	; 3
     aae:	04 c0       	rjmp	.+8      	; 0xab8 <ButtonPress4+0xe6>
     ab0:	1a 9b       	sbis	0x03, 2	; 3
     ab2:	02 c0       	rjmp	.+4      	; 0xab8 <ButtonPress4+0xe6>
     ab4:	18 99       	sbic	0x03, 0	; 3
     ab6:	78 c0       	rjmp	.+240    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     ab8:	8d e0       	ldi	r24, 0x0D	; 13
     aba:	80 93 0e 01 	sts	0x010E, r24
     abe:	7f c0       	rjmp	.+254    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state6:
		if(~PINB & 0x02)
     ac0:	19 99       	sbic	0x03, 1	; 3
     ac2:	05 c0       	rjmp	.+10     	; 0xace <ButtonPress4+0xfc>
		{
			while(~PINB & 0x02){}
     ac4:	19 9b       	sbis	0x03, 1	; 3
     ac6:	fe cf       	rjmp	.-4      	; 0xac4 <ButtonPress4+0xf2>
			Press_fourth_level = Press4_state7;
     ac8:	87 e0       	ldi	r24, 0x07	; 7
     aca:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     ace:	18 9b       	sbis	0x03, 0	; 3
     ad0:	04 c0       	rjmp	.+8      	; 0xada <ButtonPress4+0x108>
     ad2:	1a 9b       	sbis	0x03, 2	; 3
     ad4:	02 c0       	rjmp	.+4      	; 0xada <ButtonPress4+0x108>
     ad6:	1b 99       	sbic	0x03, 3	; 3
     ad8:	67 c0       	rjmp	.+206    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     ada:	8d e0       	ldi	r24, 0x0D	; 13
     adc:	80 93 0e 01 	sts	0x010E, r24
     ae0:	6e c0       	rjmp	.+220    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state7:
		if(~PINB & 0x01)
     ae2:	18 99       	sbic	0x03, 0	; 3
     ae4:	05 c0       	rjmp	.+10     	; 0xaf0 <ButtonPress4+0x11e>
		{
			while(~PINB & 0x01){}
     ae6:	18 9b       	sbis	0x03, 0	; 3
     ae8:	fe cf       	rjmp	.-4      	; 0xae6 <ButtonPress4+0x114>
			Press_fourth_level = Press4_state8;
     aea:	88 e0       	ldi	r24, 0x08	; 8
     aec:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     af0:	19 9b       	sbis	0x03, 1	; 3
     af2:	04 c0       	rjmp	.+8      	; 0xafc <ButtonPress4+0x12a>
     af4:	1a 9b       	sbis	0x03, 2	; 3
     af6:	02 c0       	rjmp	.+4      	; 0xafc <ButtonPress4+0x12a>
     af8:	1b 99       	sbic	0x03, 3	; 3
     afa:	56 c0       	rjmp	.+172    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     afc:	8d e0       	ldi	r24, 0x0D	; 13
     afe:	80 93 0e 01 	sts	0x010E, r24
     b02:	5d c0       	rjmp	.+186    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state8:
		if(~PINB & 0x08)
     b04:	1b 99       	sbic	0x03, 3	; 3
     b06:	05 c0       	rjmp	.+10     	; 0xb12 <ButtonPress4+0x140>
		{
			while(~PINB & 0x08){}
     b08:	1b 9b       	sbis	0x03, 3	; 3
     b0a:	fe cf       	rjmp	.-4      	; 0xb08 <ButtonPress4+0x136>
			Press_fourth_level = Press4_state9;
     b0c:	89 e0       	ldi	r24, 0x09	; 9
     b0e:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     b12:	19 9b       	sbis	0x03, 1	; 3
     b14:	04 c0       	rjmp	.+8      	; 0xb1e <ButtonPress4+0x14c>
     b16:	1a 9b       	sbis	0x03, 2	; 3
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <ButtonPress4+0x14c>
     b1a:	18 99       	sbic	0x03, 0	; 3
     b1c:	45 c0       	rjmp	.+138    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b1e:	8d e0       	ldi	r24, 0x0D	; 13
     b20:	80 93 0e 01 	sts	0x010E, r24
     b24:	4c c0       	rjmp	.+152    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state9:
		if(~PINB & 0x01)
     b26:	18 99       	sbic	0x03, 0	; 3
     b28:	05 c0       	rjmp	.+10     	; 0xb34 <ButtonPress4+0x162>
		{
			while(~PINB & 0x01){}
     b2a:	18 9b       	sbis	0x03, 0	; 3
     b2c:	fe cf       	rjmp	.-4      	; 0xb2a <ButtonPress4+0x158>
			Press_fourth_level = Press4_state10;
     b2e:	8a e0       	ldi	r24, 0x0A	; 10
     b30:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     b34:	19 9b       	sbis	0x03, 1	; 3
     b36:	04 c0       	rjmp	.+8      	; 0xb40 <ButtonPress4+0x16e>
     b38:	1a 9b       	sbis	0x03, 2	; 3
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <ButtonPress4+0x16e>
     b3c:	1b 99       	sbic	0x03, 3	; 3
     b3e:	34 c0       	rjmp	.+104    	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b40:	8d e0       	ldi	r24, 0x0D	; 13
     b42:	80 93 0e 01 	sts	0x010E, r24
     b46:	3b c0       	rjmp	.+118    	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state10:
		if(~PINB & 0x02)
     b48:	19 99       	sbic	0x03, 1	; 3
     b4a:	05 c0       	rjmp	.+10     	; 0xb56 <ButtonPress4+0x184>
		{
			while(~PINB & 0x02){}
     b4c:	19 9b       	sbis	0x03, 1	; 3
     b4e:	fe cf       	rjmp	.-4      	; 0xb4c <ButtonPress4+0x17a>
			Press_fourth_level = Press4_state11;
     b50:	8b e0       	ldi	r24, 0x0B	; 11
     b52:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     b56:	18 9b       	sbis	0x03, 0	; 3
     b58:	04 c0       	rjmp	.+8      	; 0xb62 <ButtonPress4+0x190>
     b5a:	1a 9b       	sbis	0x03, 2	; 3
     b5c:	02 c0       	rjmp	.+4      	; 0xb62 <ButtonPress4+0x190>
     b5e:	1b 99       	sbic	0x03, 3	; 3
     b60:	23 c0       	rjmp	.+70     	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b62:	8d e0       	ldi	r24, 0x0D	; 13
     b64:	80 93 0e 01 	sts	0x010E, r24
     b68:	2a c0       	rjmp	.+84     	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		
		case Press4_state11:
		if(~PINB & 0x01)
     b6a:	18 99       	sbic	0x03, 0	; 3
     b6c:	05 c0       	rjmp	.+10     	; 0xb78 <ButtonPress4+0x1a6>
		{
			while(~PINB & 0x01){}
     b6e:	18 9b       	sbis	0x03, 0	; 3
     b70:	fe cf       	rjmp	.-4      	; 0xb6e <ButtonPress4+0x19c>
			Press_fourth_level = Press4_state12;
     b72:	8c e0       	ldi	r24, 0x0C	; 12
     b74:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     b78:	19 9b       	sbis	0x03, 1	; 3
     b7a:	04 c0       	rjmp	.+8      	; 0xb84 <ButtonPress4+0x1b2>
     b7c:	1a 9b       	sbis	0x03, 2	; 3
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <ButtonPress4+0x1b2>
     b80:	1b 99       	sbic	0x03, 3	; 3
     b82:	12 c0       	rjmp	.+36     	; 0xba8 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b84:	8d e0       	ldi	r24, 0x0D	; 13
     b86:	80 93 0e 01 	sts	0x010E, r24
     b8a:	19 c0       	rjmp	.+50     	; 0xbbe <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state12:
		if(~PINB & 0x10)
     b8c:	1c 99       	sbic	0x03, 4	; 3
     b8e:	3b c0       	rjmp	.+118    	; 0xc06 <ButtonPress4+0x234>
		{
			Press_fourth_level = Off4;
     b90:	8e e0       	ldi	r24, 0x0E	; 14
     b92:	80 93 0e 01 	sts	0x010E, r24
     b96:	3a c0       	rjmp	.+116    	; 0xc0c <ButtonPress4+0x23a>
		}
		break;
		case Error4:
		if(~PINB & 0x01)
     b98:	18 99       	sbic	0x03, 0	; 3
     b9a:	11 c0       	rjmp	.+34     	; 0xbbe <ButtonPress4+0x1ec>
		{
			while(~PINB & 0x01){}
     b9c:	18 9b       	sbis	0x03, 0	; 3
     b9e:	fe cf       	rjmp	.-4      	; 0xb9c <ButtonPress4+0x1ca>
			Press_fourth_level = Press4_state1;
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	80 93 0e 01 	sts	0x010E, r24
     ba6:	0e c0       	rjmp	.+28     	; 0xbc4 <ButtonPress4+0x1f2>
		}
	}
	switch(Press_fourth_level)
     ba8:	80 91 0e 01 	lds	r24, 0x010E
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	fc 01       	movw	r30, r24
     bb0:	31 97       	sbiw	r30, 0x01	; 1
     bb2:	ee 30       	cpi	r30, 0x0E	; 14
     bb4:	f1 05       	cpc	r31, r1
     bb6:	70 f5       	brcc	.+92     	; 0xc14 <ButtonPress4+0x242>
     bb8:	eb 54       	subi	r30, 0x4B	; 75
     bba:	ff 4f       	sbci	r31, 0xFF	; 255
     bbc:	30 c2       	rjmp	.+1120   	; 0x101e <__tablejump2__>
	{
		case Error4:
		PORTA = 0x10;
     bbe:	80 e1       	ldi	r24, 0x10	; 16
     bc0:	82 b9       	out	0x02, r24	; 2
		break;
     bc2:	08 95       	ret
		case Press4_state1:
		PORTA = 0x01;
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	82 b9       	out	0x02, r24	; 2
		break;
     bc8:	08 95       	ret
		case Press4_state2:
		PORTA = 0x08;
     bca:	88 e0       	ldi	r24, 0x08	; 8
     bcc:	82 b9       	out	0x02, r24	; 2
		break;
     bce:	08 95       	ret
		case Press4_state3:
		PORTA = 0x02;
     bd0:	82 e0       	ldi	r24, 0x02	; 2
     bd2:	82 b9       	out	0x02, r24	; 2
		break;
     bd4:	08 95       	ret
		case Press4_state4:
		PORTA = 0x01;
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	82 b9       	out	0x02, r24	; 2
		break;
     bda:	08 95       	ret
		case Press4_state5:
		PORTA = 0x02;
     bdc:	82 e0       	ldi	r24, 0x02	; 2
     bde:	82 b9       	out	0x02, r24	; 2
		break;
     be0:	08 95       	ret
		case Press4_state6:
		PORTA = 0x08;
     be2:	88 e0       	ldi	r24, 0x08	; 8
     be4:	82 b9       	out	0x02, r24	; 2
		break;
     be6:	08 95       	ret
		case Press4_state7:
		PORTA = 0x02;
     be8:	82 e0       	ldi	r24, 0x02	; 2
     bea:	82 b9       	out	0x02, r24	; 2
		break;
     bec:	08 95       	ret
		case Press4_state8:
		PORTA = 0x01;
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	82 b9       	out	0x02, r24	; 2
		break;
     bf2:	08 95       	ret
		case Press4_state9:
		PORTA = 0x08;
     bf4:	88 e0       	ldi	r24, 0x08	; 8
     bf6:	82 b9       	out	0x02, r24	; 2
		break;
     bf8:	08 95       	ret
		case Press4_state10:
		PORTA = 0x01;
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	82 b9       	out	0x02, r24	; 2
		break;
     bfe:	08 95       	ret
		case Press4_state11:
		PORTA = 0x02;
     c00:	82 e0       	ldi	r24, 0x02	; 2
     c02:	82 b9       	out	0x02, r24	; 2
		break;
     c04:	08 95       	ret
		case Press4_state12:
		PORTA = 0x01;
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	82 b9       	out	0x02, r24	; 2
		break;
     c0a:	08 95       	ret
		case Off4:
		PORTA = 0x00;
     c0c:	12 b8       	out	0x02, r1	; 2
		global_g = 8;
     c0e:	88 e0       	ldi	r24, 0x08	; 8
     c10:	80 93 04 01 	sts	0x0104, r24
     c14:	08 95       	ret

00000c16 <TickFct_Machine5>:
}	

enum SM5_States{SM5_off, SM5_on1, SM5_on2, SM5_on3, SM5_on4, SM5_on5, SM5_on6, SM5_on7, SM5_on8, SM5_on9, SM5_on10, SM5_on11, SM5_on12, SM5_on13, SM5_on14, SM5_on15} SM5_States;
void TickFct_Machine5()
{
	switch(SM5_States)
     c16:	20 91 12 01 	lds	r18, 0x0112
     c1a:	82 2f       	mov	r24, r18
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	80 31       	cpi	r24, 0x10	; 16
     c20:	91 05       	cpc	r25, r1
     c22:	08 f0       	brcs	.+2      	; 0xc26 <TickFct_Machine5+0x10>
     c24:	4c c0       	rjmp	.+152    	; 0xcbe <TickFct_Machine5+0xa8>
     c26:	fc 01       	movw	r30, r24
     c28:	ed 53       	subi	r30, 0x3D	; 61
     c2a:	ff 4f       	sbci	r31, 0xFF	; 255
     c2c:	f8 c1       	rjmp	.+1008   	; 0x101e <__tablejump2__>
	{
		case SM5_off:
		
		if(global_g == 8)
     c2e:	80 91 04 01 	lds	r24, 0x0104
     c32:	88 30       	cpi	r24, 0x08	; 8
     c34:	09 f0       	breq	.+2      	; 0xc38 <TickFct_Machine5+0x22>
     c36:	4c c0       	rjmp	.+152    	; 0xcd0 <TickFct_Machine5+0xba>
		{
			if(~PINB & 0x01)
     c38:	18 99       	sbic	0x03, 0	; 3
     c3a:	4a c0       	rjmp	.+148    	; 0xcd0 <TickFct_Machine5+0xba>
			{
				while(~PINB & 0x01){}
     c3c:	18 9b       	sbis	0x03, 0	; 3
     c3e:	fe cf       	rjmp	.-4      	; 0xc3c <TickFct_Machine5+0x26>
				SM5_States = SM5_on1;
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	80 93 12 01 	sts	0x0112, r24
     c46:	46 c0       	rjmp	.+140    	; 0xcd4 <TickFct_Machine5+0xbe>
				SM5_States = SM5_off;
			}
		}
		break;
		case SM5_on1:
		SM5_States = SM5_on2;
     c48:	82 e0       	ldi	r24, 0x02	; 2
     c4a:	80 93 12 01 	sts	0x0112, r24
     c4e:	45 c0       	rjmp	.+138    	; 0xcda <TickFct_Machine5+0xc4>
		break;
		case SM5_on2:
		SM5_States = SM5_on3;
     c50:	83 e0       	ldi	r24, 0x03	; 3
     c52:	80 93 12 01 	sts	0x0112, r24
     c56:	44 c0       	rjmp	.+136    	; 0xce0 <TickFct_Machine5+0xca>
		break;
		case SM5_on3:
		SM5_States = SM5_on4;
     c58:	84 e0       	ldi	r24, 0x04	; 4
     c5a:	80 93 12 01 	sts	0x0112, r24
     c5e:	43 c0       	rjmp	.+134    	; 0xce6 <TickFct_Machine5+0xd0>
		break;
		case SM5_on4:
		SM5_States = SM5_on5;
     c60:	85 e0       	ldi	r24, 0x05	; 5
     c62:	80 93 12 01 	sts	0x0112, r24
     c66:	42 c0       	rjmp	.+132    	; 0xcec <TickFct_Machine5+0xd6>
		break;
		case SM5_on5:
		SM5_States = SM5_on6;
     c68:	86 e0       	ldi	r24, 0x06	; 6
     c6a:	80 93 12 01 	sts	0x0112, r24
     c6e:	41 c0       	rjmp	.+130    	; 0xcf2 <TickFct_Machine5+0xdc>
		break;
		case SM5_on6:
		SM5_States = SM5_on7;
     c70:	87 e0       	ldi	r24, 0x07	; 7
     c72:	80 93 12 01 	sts	0x0112, r24
     c76:	40 c0       	rjmp	.+128    	; 0xcf8 <TickFct_Machine5+0xe2>
		break;
		case SM5_on7:
		SM5_States = SM5_on8;
     c78:	88 e0       	ldi	r24, 0x08	; 8
     c7a:	80 93 12 01 	sts	0x0112, r24
     c7e:	3f c0       	rjmp	.+126    	; 0xcfe <TickFct_Machine5+0xe8>
		break;
		case SM5_on8:
		SM5_States = SM5_on9;
     c80:	89 e0       	ldi	r24, 0x09	; 9
     c82:	80 93 12 01 	sts	0x0112, r24
     c86:	3e c0       	rjmp	.+124    	; 0xd04 <TickFct_Machine5+0xee>
		break;
		case SM5_on9:
		SM5_States = SM5_on10;
     c88:	8a e0       	ldi	r24, 0x0A	; 10
     c8a:	80 93 12 01 	sts	0x0112, r24
     c8e:	3d c0       	rjmp	.+122    	; 0xd0a <TickFct_Machine5+0xf4>
		break;
		case SM5_on10:
		SM5_States = SM5_on11;
     c90:	8b e0       	ldi	r24, 0x0B	; 11
     c92:	80 93 12 01 	sts	0x0112, r24
     c96:	3c c0       	rjmp	.+120    	; 0xd10 <TickFct_Machine5+0xfa>
		break;
		case SM5_on11:
		SM5_States = SM5_on12;
     c98:	8c e0       	ldi	r24, 0x0C	; 12
     c9a:	80 93 12 01 	sts	0x0112, r24
     c9e:	3b c0       	rjmp	.+118    	; 0xd16 <TickFct_Machine5+0x100>
		break;
		case SM5_on12:
		SM5_States = SM5_on13;
     ca0:	8d e0       	ldi	r24, 0x0D	; 13
     ca2:	80 93 12 01 	sts	0x0112, r24
     ca6:	3a c0       	rjmp	.+116    	; 0xd1c <TickFct_Machine5+0x106>
		break;
		case SM5_on13:
		SM5_States = SM5_on14;
     ca8:	8e e0       	ldi	r24, 0x0E	; 14
     caa:	80 93 12 01 	sts	0x0112, r24
     cae:	39 c0       	rjmp	.+114    	; 0xd22 <TickFct_Machine5+0x10c>
		break;
		case SM5_on14:
		SM5_States = SM5_on15;
     cb0:	8f e0       	ldi	r24, 0x0F	; 15
     cb2:	80 93 12 01 	sts	0x0112, r24
     cb6:	38 c0       	rjmp	.+112    	; 0xd28 <TickFct_Machine5+0x112>
		break;
		case SM5_on15:
		SM5_States = SM5_off;
     cb8:	10 92 12 01 	sts	0x0112, r1
		break;
     cbc:	09 c0       	rjmp	.+18     	; 0xcd0 <TickFct_Machine5+0xba>
	}
	switch(SM5_States)
     cbe:	82 2f       	mov	r24, r18
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	80 31       	cpi	r24, 0x10	; 16
     cc4:	91 05       	cpc	r25, r1
     cc6:	a8 f5       	brcc	.+106    	; 0xd32 <TickFct_Machine5+0x11c>
     cc8:	fc 01       	movw	r30, r24
     cca:	ed 52       	subi	r30, 0x2D	; 45
     ccc:	ff 4f       	sbci	r31, 0xFF	; 255
     cce:	a7 c1       	rjmp	.+846    	; 0x101e <__tablejump2__>
	{
		case SM5_off:
		PORTA = 0x00;
     cd0:	12 b8       	out	0x02, r1	; 2
		break;
     cd2:	08 95       	ret
		case SM5_on1:
		PORTA = 0x08;
     cd4:	88 e0       	ldi	r24, 0x08	; 8
     cd6:	82 b9       	out	0x02, r24	; 2
		break;
     cd8:	08 95       	ret
		case SM5_on2:
		PORTA = 0x04;
     cda:	84 e0       	ldi	r24, 0x04	; 4
     cdc:	82 b9       	out	0x02, r24	; 2
		break;
     cde:	08 95       	ret
		case SM5_on3:
		PORTA = 0x02;
     ce0:	82 e0       	ldi	r24, 0x02	; 2
     ce2:	82 b9       	out	0x02, r24	; 2
		break;
     ce4:	08 95       	ret
		case SM5_on4:
		PORTA = 0x01;
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	82 b9       	out	0x02, r24	; 2
		break;
     cea:	08 95       	ret
		case SM5_on5:
		PORTA = 0x02;
     cec:	82 e0       	ldi	r24, 0x02	; 2
     cee:	82 b9       	out	0x02, r24	; 2
		break;
     cf0:	08 95       	ret
		case SM5_on6:
		PORTA = 0x01;
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	82 b9       	out	0x02, r24	; 2
		break;
     cf6:	08 95       	ret
		case SM5_on7:
		PORTA = 0x04;
     cf8:	84 e0       	ldi	r24, 0x04	; 4
     cfa:	82 b9       	out	0x02, r24	; 2
		break;
     cfc:	08 95       	ret
		case SM5_on8:
		PORTA = 0x08;
     cfe:	88 e0       	ldi	r24, 0x08	; 8
     d00:	82 b9       	out	0x02, r24	; 2
		break;
     d02:	08 95       	ret
		case SM5_on9:
		PORTA = 0x02;
     d04:	82 e0       	ldi	r24, 0x02	; 2
     d06:	82 b9       	out	0x02, r24	; 2
		break;
     d08:	08 95       	ret
		case SM5_on10:
		PORTA = 0x01;
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	82 b9       	out	0x02, r24	; 2
		break;
     d0e:	08 95       	ret
		case SM5_on11:
		PORTA = 0x02;
     d10:	82 e0       	ldi	r24, 0x02	; 2
     d12:	82 b9       	out	0x02, r24	; 2
		break;
     d14:	08 95       	ret
		case SM5_on12:
		PORTA = 0x01;
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	82 b9       	out	0x02, r24	; 2
		break;
     d1a:	08 95       	ret
		case SM5_on13:
		PORTA = 0x04;
     d1c:	84 e0       	ldi	r24, 0x04	; 4
     d1e:	82 b9       	out	0x02, r24	; 2
		break;
     d20:	08 95       	ret
		case SM5_on14:
		PORTA = 0x08;
     d22:	88 e0       	ldi	r24, 0x08	; 8
     d24:	82 b9       	out	0x02, r24	; 2
		break;
     d26:	08 95       	ret
		case SM5_on15:
		PORTA = 0x01;
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	82 b9       	out	0x02, r24	; 2
		global_g = 9;
     d2c:	89 e0       	ldi	r24, 0x09	; 9
     d2e:	80 93 04 01 	sts	0x0104, r24
     d32:	08 95       	ret

00000d34 <main>:
		break;
	}
}

int main(void)
{
     d34:	cf 92       	push	r12
     d36:	df 92       	push	r13
     d38:	ef 92       	push	r14
     d3a:	ff 92       	push	r15
	DDRA = 0xff;	PORTA = 0x00;
     d3c:	8f ef       	ldi	r24, 0xFF	; 255
     d3e:	81 b9       	out	0x01, r24	; 1
     d40:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;
     d42:	14 b8       	out	0x04, r1	; 4
     d44:	85 b9       	out	0x05, r24	; 5
	
	if(global_g == 0)
     d46:	80 91 04 01 	lds	r24, 0x0104
     d4a:	81 11       	cpse	r24, r1
     d4c:	61 c1       	rjmp	.+706    	; 0x1010 <main+0x2dc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     d4e:	0f 2e       	mov	r0, r31
     d50:	fc eb       	ldi	r31, 0xBC	; 188
     d52:	cf 2e       	mov	r12, r31
     d54:	f2 e0       	ldi	r31, 0x02	; 2
     d56:	df 2e       	mov	r13, r31
     d58:	e1 2c       	mov	r14, r1
     d5a:	f1 2c       	mov	r15, r1
     d5c:	f0 2d       	mov	r31, r0
     d5e:	c0 92 00 01 	sts	0x0100, r12
     d62:	d0 92 01 01 	sts	0x0101, r13
     d66:	e0 92 02 01 	sts	0x0102, r14
     d6a:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     d6e:	c0 92 05 01 	sts	0x0105, r12
     d72:	d0 92 06 01 	sts	0x0106, r13
     d76:	e0 92 07 01 	sts	0x0107, r14
     d7a:	f0 92 08 01 	sts	0x0108, r15
	if(global_g == 0)
	{
		while(global_g == 0)
		{
			TimerSet(700);
			TimerOn();
     d7e:	41 da       	rcall	.-2942   	; 0x202 <TimerOn>
			TickFct_State_machine_1();
     d80:	a0 da       	rcall	.-2752   	; 0x2c2 <TickFct_State_machine_1>
			while(!TimerFlag);
     d82:	80 91 09 01 	lds	r24, 0x0109
     d86:	88 23       	and	r24, r24
     d88:	e1 f3       	breq	.-8      	; 0xd82 <main+0x4e>
			TimerFlag = 0;	
     d8a:	10 92 09 01 	sts	0x0109, r1
	DDRA = 0xff;	PORTA = 0x00;
	DDRB = 0x00;	PORTB = 0xFF;
	
	if(global_g == 0)
	{
		while(global_g == 0)
     d8e:	80 91 04 01 	lds	r24, 0x0104
     d92:	88 23       	and	r24, r24
     d94:	21 f3       	breq	.-56     	; 0xd5e <main+0x2a>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
     d96:	81 30       	cpi	r24, 0x01	; 1
     d98:	19 f5       	brne	.+70     	; 0xde0 <main+0xac>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     d9a:	0f 2e       	mov	r0, r31
     d9c:	f8 ec       	ldi	r31, 0xC8	; 200
     d9e:	cf 2e       	mov	r12, r31
     da0:	d1 2c       	mov	r13, r1
     da2:	e1 2c       	mov	r14, r1
     da4:	f1 2c       	mov	r15, r1
     da6:	f0 2d       	mov	r31, r0
     da8:	c0 92 00 01 	sts	0x0100, r12
     dac:	d0 92 01 01 	sts	0x0101, r13
     db0:	e0 92 02 01 	sts	0x0102, r14
     db4:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     db8:	c0 92 05 01 	sts	0x0105, r12
     dbc:	d0 92 06 01 	sts	0x0106, r13
     dc0:	e0 92 07 01 	sts	0x0107, r14
     dc4:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;	
		}
		while(global_g == 1)
		{
			TimerSet(200);
			TimerOn();
     dc8:	1c da       	rcall	.-3016   	; 0x202 <TimerOn>
			ButtonPress();
     dca:	c2 da       	rcall	.-2684   	; 0x350 <ButtonPress>
			while(!TimerFlag);
     dcc:	80 91 09 01 	lds	r24, 0x0109
     dd0:	88 23       	and	r24, r24
     dd2:	e1 f3       	breq	.-8      	; 0xdcc <main+0x98>
			TimerFlag = 0;
     dd4:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
     dd8:	80 91 04 01 	lds	r24, 0x0104
     ddc:	81 30       	cpi	r24, 0x01	; 1
     dde:	21 f3       	breq	.-56     	; 0xda8 <main+0x74>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
     de0:	80 91 04 01 	lds	r24, 0x0104
     de4:	82 30       	cpi	r24, 0x02	; 2
     de6:	21 f5       	brne	.+72     	; 0xe30 <main+0xfc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     de8:	0f 2e       	mov	r0, r31
     dea:	f8 ee       	ldi	r31, 0xE8	; 232
     dec:	cf 2e       	mov	r12, r31
     dee:	f3 e0       	ldi	r31, 0x03	; 3
     df0:	df 2e       	mov	r13, r31
     df2:	e1 2c       	mov	r14, r1
     df4:	f1 2c       	mov	r15, r1
     df6:	f0 2d       	mov	r31, r0
     df8:	c0 92 00 01 	sts	0x0100, r12
     dfc:	d0 92 01 01 	sts	0x0101, r13
     e00:	e0 92 02 01 	sts	0x0102, r14
     e04:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     e08:	c0 92 05 01 	sts	0x0105, r12
     e0c:	d0 92 06 01 	sts	0x0106, r13
     e10:	e0 92 07 01 	sts	0x0107, r14
     e14:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 2)
		{
			TimerSet(1000);
			TimerOn();
     e18:	f4 d9       	rcall	.-3096   	; 0x202 <TimerOn>
			TickFct_Machine2();
     e1a:	27 db       	rcall	.-2482   	; 0x46a <TickFct_Machine2>
			while(!TimerFlag);
     e1c:	80 91 09 01 	lds	r24, 0x0109
     e20:	88 23       	and	r24, r24
     e22:	e1 f3       	breq	.-8      	; 0xe1c <main+0xe8>
			TimerFlag = 0;
     e24:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
     e28:	80 91 04 01 	lds	r24, 0x0104
     e2c:	82 30       	cpi	r24, 0x02	; 2
     e2e:	21 f3       	breq	.-56     	; 0xdf8 <main+0xc4>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
     e30:	80 91 04 01 	lds	r24, 0x0104
     e34:	83 30       	cpi	r24, 0x03	; 3
     e36:	21 f5       	brne	.+72     	; 0xe80 <main+0x14c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     e38:	0f 2e       	mov	r0, r31
     e3a:	f0 e9       	ldi	r31, 0x90	; 144
     e3c:	cf 2e       	mov	r12, r31
     e3e:	dd 24       	eor	r13, r13
     e40:	d3 94       	inc	r13
     e42:	e1 2c       	mov	r14, r1
     e44:	f1 2c       	mov	r15, r1
     e46:	f0 2d       	mov	r31, r0
     e48:	c0 92 00 01 	sts	0x0100, r12
     e4c:	d0 92 01 01 	sts	0x0101, r13
     e50:	e0 92 02 01 	sts	0x0102, r14
     e54:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     e58:	c0 92 05 01 	sts	0x0105, r12
     e5c:	d0 92 06 01 	sts	0x0106, r13
     e60:	e0 92 07 01 	sts	0x0107, r14
     e64:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 3)
		{
			TimerSet(400);
			TimerOn();
     e68:	cc d9       	rcall	.-3176   	; 0x202 <TimerOn>
			ButtonPress2();
     e6a:	51 db       	rcall	.-2398   	; 0x50e <ButtonPress2>
			while(!TimerFlag);
     e6c:	80 91 09 01 	lds	r24, 0x0109
     e70:	88 23       	and	r24, r24
     e72:	e1 f3       	breq	.-8      	; 0xe6c <main+0x138>
			TimerFlag = 0;
     e74:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
     e78:	80 91 04 01 	lds	r24, 0x0104
     e7c:	83 30       	cpi	r24, 0x03	; 3
     e7e:	21 f3       	breq	.-56     	; 0xe48 <main+0x114>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
     e80:	80 91 04 01 	lds	r24, 0x0104
     e84:	84 30       	cpi	r24, 0x04	; 4
     e86:	21 f5       	brne	.+72     	; 0xed0 <main+0x19c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     e88:	0f 2e       	mov	r0, r31
     e8a:	f8 ee       	ldi	r31, 0xE8	; 232
     e8c:	cf 2e       	mov	r12, r31
     e8e:	f3 e0       	ldi	r31, 0x03	; 3
     e90:	df 2e       	mov	r13, r31
     e92:	e1 2c       	mov	r14, r1
     e94:	f1 2c       	mov	r15, r1
     e96:	f0 2d       	mov	r31, r0
     e98:	c0 92 00 01 	sts	0x0100, r12
     e9c:	d0 92 01 01 	sts	0x0101, r13
     ea0:	e0 92 02 01 	sts	0x0102, r14
     ea4:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     ea8:	c0 92 05 01 	sts	0x0105, r12
     eac:	d0 92 06 01 	sts	0x0106, r13
     eb0:	e0 92 07 01 	sts	0x0107, r14
     eb4:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 4)
		{
			TimerSet(1000);
			TimerOn();
     eb8:	a4 d9       	rcall	.-3256   	; 0x202 <TimerOn>
			TickFct_Machine3();
     eba:	c8 db       	rcall	.-2160   	; 0x64c <TickFct_Machine3>
			while(!TimerFlag);
     ebc:	80 91 09 01 	lds	r24, 0x0109
     ec0:	88 23       	and	r24, r24
     ec2:	e1 f3       	breq	.-8      	; 0xebc <main+0x188>
			TimerFlag = 0;
     ec4:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
     ec8:	80 91 04 01 	lds	r24, 0x0104
     ecc:	84 30       	cpi	r24, 0x04	; 4
     ece:	21 f3       	breq	.-56     	; 0xe98 <main+0x164>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
     ed0:	80 91 04 01 	lds	r24, 0x0104
     ed4:	85 30       	cpi	r24, 0x05	; 5
     ed6:	21 f5       	brne	.+72     	; 0xf20 <main+0x1ec>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     ed8:	0f 2e       	mov	r0, r31
     eda:	f0 e9       	ldi	r31, 0x90	; 144
     edc:	cf 2e       	mov	r12, r31
     ede:	dd 24       	eor	r13, r13
     ee0:	d3 94       	inc	r13
     ee2:	e1 2c       	mov	r14, r1
     ee4:	f1 2c       	mov	r15, r1
     ee6:	f0 2d       	mov	r31, r0
     ee8:	c0 92 00 01 	sts	0x0100, r12
     eec:	d0 92 01 01 	sts	0x0101, r13
     ef0:	e0 92 02 01 	sts	0x0102, r14
     ef4:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     ef8:	c0 92 05 01 	sts	0x0105, r12
     efc:	d0 92 06 01 	sts	0x0106, r13
     f00:	e0 92 07 01 	sts	0x0107, r14
     f04:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 5)
		{
			TimerSet(400);
			TimerOn();
     f08:	7c d9       	rcall	.-3336   	; 0x202 <TimerOn>
			ButtonPress3();
     f0a:	03 dc       	rcall	.-2042   	; 0x712 <ButtonPress3>
			while(!TimerFlag);
     f0c:	80 91 09 01 	lds	r24, 0x0109
     f10:	88 23       	and	r24, r24
     f12:	e1 f3       	breq	.-8      	; 0xf0c <main+0x1d8>
			TimerFlag = 0;
     f14:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
     f18:	80 91 04 01 	lds	r24, 0x0104
     f1c:	85 30       	cpi	r24, 0x05	; 5
     f1e:	21 f3       	breq	.-56     	; 0xee8 <main+0x1b4>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
     f20:	80 91 04 01 	lds	r24, 0x0104
     f24:	86 30       	cpi	r24, 0x06	; 6
     f26:	21 f5       	brne	.+72     	; 0xf70 <main+0x23c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     f28:	0f 2e       	mov	r0, r31
     f2a:	f8 ee       	ldi	r31, 0xE8	; 232
     f2c:	cf 2e       	mov	r12, r31
     f2e:	f3 e0       	ldi	r31, 0x03	; 3
     f30:	df 2e       	mov	r13, r31
     f32:	e1 2c       	mov	r14, r1
     f34:	f1 2c       	mov	r15, r1
     f36:	f0 2d       	mov	r31, r0
     f38:	c0 92 00 01 	sts	0x0100, r12
     f3c:	d0 92 01 01 	sts	0x0101, r13
     f40:	e0 92 02 01 	sts	0x0102, r14
     f44:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     f48:	c0 92 05 01 	sts	0x0105, r12
     f4c:	d0 92 06 01 	sts	0x0106, r13
     f50:	e0 92 07 01 	sts	0x0107, r14
     f54:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 6)
		{
			TimerSet(1000);
			TimerOn();
     f58:	54 d9       	rcall	.-3416   	; 0x202 <TimerOn>
			TickFct_Machine4();
     f5a:	c1 dc       	rcall	.-1662   	; 0x8de <TickFct_Machine4>
			while(!TimerFlag);
     f5c:	80 91 09 01 	lds	r24, 0x0109
     f60:	88 23       	and	r24, r24
     f62:	e1 f3       	breq	.-8      	; 0xf5c <main+0x228>
			TimerFlag = 0;
     f64:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
     f68:	80 91 04 01 	lds	r24, 0x0104
     f6c:	86 30       	cpi	r24, 0x06	; 6
     f6e:	21 f3       	breq	.-56     	; 0xf38 <main+0x204>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
     f70:	80 91 04 01 	lds	r24, 0x0104
     f74:	87 30       	cpi	r24, 0x07	; 7
     f76:	21 f5       	brne	.+72     	; 0xfc0 <main+0x28c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     f78:	0f 2e       	mov	r0, r31
     f7a:	f0 e9       	ldi	r31, 0x90	; 144
     f7c:	cf 2e       	mov	r12, r31
     f7e:	dd 24       	eor	r13, r13
     f80:	d3 94       	inc	r13
     f82:	e1 2c       	mov	r14, r1
     f84:	f1 2c       	mov	r15, r1
     f86:	f0 2d       	mov	r31, r0
     f88:	c0 92 00 01 	sts	0x0100, r12
     f8c:	d0 92 01 01 	sts	0x0101, r13
     f90:	e0 92 02 01 	sts	0x0102, r14
     f94:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     f98:	c0 92 05 01 	sts	0x0105, r12
     f9c:	d0 92 06 01 	sts	0x0106, r13
     fa0:	e0 92 07 01 	sts	0x0107, r14
     fa4:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 7)
		{
			TimerSet(400);
			TimerOn();
     fa8:	2c d9       	rcall	.-3496   	; 0x202 <TimerOn>
			ButtonPress4();
     faa:	13 dd       	rcall	.-1498   	; 0x9d2 <ButtonPress4>
			while(!TimerFlag);
     fac:	80 91 09 01 	lds	r24, 0x0109
     fb0:	88 23       	and	r24, r24
     fb2:	e1 f3       	breq	.-8      	; 0xfac <main+0x278>
			TimerFlag = 0;
     fb4:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
     fb8:	80 91 04 01 	lds	r24, 0x0104
     fbc:	87 30       	cpi	r24, 0x07	; 7
     fbe:	21 f3       	breq	.-56     	; 0xf88 <main+0x254>
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
     fc0:	80 91 04 01 	lds	r24, 0x0104
     fc4:	88 30       	cpi	r24, 0x08	; 8
     fc6:	21 f5       	brne	.+72     	; 0x1010 <main+0x2dc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
     fc8:	0f 2e       	mov	r0, r31
     fca:	f0 e2       	ldi	r31, 0x20	; 32
     fcc:	cf 2e       	mov	r12, r31
     fce:	f3 e0       	ldi	r31, 0x03	; 3
     fd0:	df 2e       	mov	r13, r31
     fd2:	e1 2c       	mov	r14, r1
     fd4:	f1 2c       	mov	r15, r1
     fd6:	f0 2d       	mov	r31, r0
     fd8:	c0 92 00 01 	sts	0x0100, r12
     fdc:	d0 92 01 01 	sts	0x0101, r13
     fe0:	e0 92 02 01 	sts	0x0102, r14
     fe4:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
     fe8:	c0 92 05 01 	sts	0x0105, r12
     fec:	d0 92 06 01 	sts	0x0106, r13
     ff0:	e0 92 07 01 	sts	0x0107, r14
     ff4:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 8)
		{
			TimerSet(800);
			TimerOn();
     ff8:	04 d9       	rcall	.-3576   	; 0x202 <TimerOn>
			TickFct_Machine5();
     ffa:	0d de       	rcall	.-998    	; 0xc16 <TickFct_Machine5>
			while(!TimerFlag);
     ffc:	80 91 09 01 	lds	r24, 0x0109
    1000:	88 23       	and	r24, r24
    1002:	e1 f3       	breq	.-8      	; 0xffc <main+0x2c8>
			TimerFlag = 0;
    1004:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1008:	80 91 04 01 	lds	r24, 0x0104
    100c:	88 30       	cpi	r24, 0x08	; 8
    100e:	21 f3       	breq	.-56     	; 0xfd8 <main+0x2a4>
			TimerFlag = 0;
		}
	}
	return 0;
		
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	ff 90       	pop	r15
    1016:	ef 90       	pop	r14
    1018:	df 90       	pop	r13
    101a:	cf 90       	pop	r12
    101c:	08 95       	ret

0000101e <__tablejump2__>:
    101e:	ee 0f       	add	r30, r30
    1020:	ff 1f       	adc	r31, r31

00001022 <__tablejump__>:
    1022:	05 90       	lpm	r0, Z+
    1024:	f4 91       	lpm	r31, Z
    1026:	e0 2d       	mov	r30, r0
    1028:	09 94       	ijmp

0000102a <_exit>:
    102a:	f8 94       	cli

0000102c <__stop_program>:
    102c:	ff cf       	rjmp	.-2      	; 0x102c <__stop_program>
