
2nd_final_prj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000a44  00000ad8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800104  00800104  00000adc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000adc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000568  00000000  00000000  00000b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000193  00000000  00000000  000010ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a61  00000000  00000000  0000127f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000108  00000000  00000000  00001ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000450  00000000  00000000  00001de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000012f  00000000  00000000  00002238  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002367  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	8c c0       	rjmp	.+280    	; 0x11a <__ctors_end>
   2:	00 00       	nop
   4:	a7 c0       	rjmp	.+334    	; 0x154 <__bad_interrupt>
   6:	00 00       	nop
   8:	a5 c0       	rjmp	.+330    	; 0x154 <__bad_interrupt>
   a:	00 00       	nop
   c:	a3 c0       	rjmp	.+326    	; 0x154 <__bad_interrupt>
   e:	00 00       	nop
  10:	a1 c0       	rjmp	.+322    	; 0x154 <__bad_interrupt>
  12:	00 00       	nop
  14:	9f c0       	rjmp	.+318    	; 0x154 <__bad_interrupt>
  16:	00 00       	nop
  18:	9d c0       	rjmp	.+314    	; 0x154 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	9b c0       	rjmp	.+310    	; 0x154 <__bad_interrupt>
  1e:	00 00       	nop
  20:	99 c0       	rjmp	.+306    	; 0x154 <__bad_interrupt>
  22:	00 00       	nop
  24:	97 c0       	rjmp	.+302    	; 0x154 <__bad_interrupt>
  26:	00 00       	nop
  28:	95 c0       	rjmp	.+298    	; 0x154 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	93 c0       	rjmp	.+294    	; 0x154 <__bad_interrupt>
  2e:	00 00       	nop
  30:	91 c0       	rjmp	.+290    	; 0x154 <__bad_interrupt>
  32:	00 00       	nop
  34:	b4 c0       	rjmp	.+360    	; 0x19e <__vector_13>
  36:	00 00       	nop
  38:	8d c0       	rjmp	.+282    	; 0x154 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	8b c0       	rjmp	.+278    	; 0x154 <__bad_interrupt>
  3e:	00 00       	nop
  40:	89 c0       	rjmp	.+274    	; 0x154 <__bad_interrupt>
  42:	00 00       	nop
  44:	87 c0       	rjmp	.+270    	; 0x154 <__bad_interrupt>
  46:	00 00       	nop
  48:	85 c0       	rjmp	.+266    	; 0x154 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	83 c0       	rjmp	.+262    	; 0x154 <__bad_interrupt>
  4e:	00 00       	nop
  50:	81 c0       	rjmp	.+258    	; 0x154 <__bad_interrupt>
  52:	00 00       	nop
  54:	7f c0       	rjmp	.+254    	; 0x154 <__bad_interrupt>
  56:	00 00       	nop
  58:	7d c0       	rjmp	.+250    	; 0x154 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	7b c0       	rjmp	.+246    	; 0x154 <__bad_interrupt>
  5e:	00 00       	nop
  60:	79 c0       	rjmp	.+242    	; 0x154 <__bad_interrupt>
  62:	00 00       	nop
  64:	77 c0       	rjmp	.+238    	; 0x154 <__bad_interrupt>
  66:	00 00       	nop
  68:	75 c0       	rjmp	.+234    	; 0x154 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	73 c0       	rjmp	.+230    	; 0x154 <__bad_interrupt>
  6e:	00 00       	nop
  70:	71 c0       	rjmp	.+226    	; 0x154 <__bad_interrupt>
  72:	00 00       	nop
  74:	6f c0       	rjmp	.+222    	; 0x154 <__bad_interrupt>
  76:	00 00       	nop
  78:	6d c0       	rjmp	.+218    	; 0x154 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	6b c0       	rjmp	.+214    	; 0x154 <__bad_interrupt>
  7e:	00 00       	nop
  80:	69 c0       	rjmp	.+210    	; 0x154 <__bad_interrupt>
  82:	00 00       	nop
  84:	67 c0       	rjmp	.+206    	; 0x154 <__bad_interrupt>
  86:	00 00       	nop
  88:	65 c0       	rjmp	.+202    	; 0x154 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	e9 01       	movw	r28, r18
  8e:	f9 01       	movw	r30, r18
  90:	fd 01       	movw	r30, r26
  92:	01 02       	muls	r16, r17
  94:	05 02       	muls	r16, r21
  96:	09 02       	muls	r16, r25
  98:	0d 02       	muls	r16, r29
  9a:	1d 02       	muls	r17, r29
  9c:	1f 02       	muls	r17, r31
  9e:	22 02       	muls	r18, r18
  a0:	25 02       	muls	r18, r21
  a2:	28 02       	muls	r18, r24
  a4:	2b 02       	muls	r18, r27
  a6:	2e 02       	muls	r18, r30
  a8:	3c 02       	muls	r19, r28
  aa:	4d 02       	muls	r20, r29
  ac:	5e 02       	muls	r21, r30
  ae:	6f 02       	muls	r22, r31
  b0:	80 02       	muls	r24, r16
  b2:	91 02       	muls	r25, r17
  b4:	a2 02       	muls	r26, r18
  b6:	b9 02       	muls	r27, r25
  b8:	bc 02       	muls	r27, r28
  ba:	bf 02       	muls	r27, r31
  bc:	c2 02       	muls	r28, r18
  be:	c5 02       	muls	r28, r21
  c0:	c8 02       	muls	r28, r24
  c2:	b6 02       	muls	r27, r22
  c4:	cb 02       	muls	r28, r27
  c6:	db 02       	muls	r29, r27
  c8:	eb 02       	muls	r30, r27
  ca:	ef 02       	muls	r30, r31
  cc:	f3 02       	muls	r31, r19
  ce:	f7 02       	muls	r31, r23
  d0:	fb 02       	muls	r31, r27
  d2:	ff 02       	muls	r31, r31
  d4:	03 03       	mulsu	r16, r19
  d6:	07 03       	mulsu	r16, r23
  d8:	0b 03       	fmul	r16, r19
  da:	17 03       	mulsu	r17, r23
  dc:	19 03       	fmul	r17, r17
  de:	1c 03       	fmul	r17, r20
  e0:	1f 03       	fmul	r17, r23
  e2:	22 03       	mulsu	r18, r18
  e4:	25 03       	mulsu	r18, r21
  e6:	28 03       	fmul	r18, r16
  e8:	2b 03       	fmul	r18, r19
  ea:	2e 03       	fmul	r18, r22
  ec:	31 03       	mulsu	r19, r17
  ee:	42 03       	mulsu	r20, r18
  f0:	61 03       	mulsu	r22, r17
  f2:	72 03       	mulsu	r23, r18
  f4:	83 03       	fmuls	r16, r19
  f6:	94 03       	fmuls	r17, r20
  f8:	a5 03       	fmuls	r18, r21
  fa:	b6 03       	fmuls	r19, r22
  fc:	c7 03       	fmuls	r20, r23
  fe:	d8 03       	fmulsu	r21, r16
 100:	e9 03       	fmulsu	r22, r17
 102:	59 03       	fmul	r21, r17
 104:	fd 03       	fmulsu	r23, r21
 106:	00 04       	cpc	r0, r0
 108:	03 04       	cpc	r0, r3
 10a:	06 04       	cpc	r0, r6
 10c:	09 04       	cpc	r0, r9
 10e:	0c 04       	cpc	r0, r12
 110:	0f 04       	cpc	r0, r15
 112:	12 04       	cpc	r1, r2
 114:	15 04       	cpc	r1, r5
 116:	fa 03       	fmulsu	r23, r18
 118:	18 04       	cpc	r1, r8

0000011a <__ctors_end>:
 11a:	11 24       	eor	r1, r1
 11c:	1f be       	out	0x3f, r1	; 63
 11e:	cf ef       	ldi	r28, 0xFF	; 255
 120:	d0 e4       	ldi	r29, 0x40	; 64
 122:	de bf       	out	0x3e, r29	; 62
 124:	cd bf       	out	0x3d, r28	; 61

00000126 <__do_copy_data>:
 126:	11 e0       	ldi	r17, 0x01	; 1
 128:	a0 e0       	ldi	r26, 0x00	; 0
 12a:	b1 e0       	ldi	r27, 0x01	; 1
 12c:	e4 e4       	ldi	r30, 0x44	; 68
 12e:	fa e0       	ldi	r31, 0x0A	; 10
 130:	00 e0       	ldi	r16, 0x00	; 0
 132:	0b bf       	out	0x3b, r16	; 59
 134:	02 c0       	rjmp	.+4      	; 0x13a <__do_copy_data+0x14>
 136:	07 90       	elpm	r0, Z+
 138:	0d 92       	st	X+, r0
 13a:	a4 30       	cpi	r26, 0x04	; 4
 13c:	b1 07       	cpc	r27, r17
 13e:	d9 f7       	brne	.-10     	; 0x136 <__do_copy_data+0x10>

00000140 <__do_clear_bss>:
 140:	21 e0       	ldi	r18, 0x01	; 1
 142:	a4 e0       	ldi	r26, 0x04	; 4
 144:	b1 e0       	ldi	r27, 0x01	; 1
 146:	01 c0       	rjmp	.+2      	; 0x14a <.do_clear_bss_start>

00000148 <.do_clear_bss_loop>:
 148:	1d 92       	st	X+, r1

0000014a <.do_clear_bss_start>:
 14a:	a2 31       	cpi	r26, 0x12	; 18
 14c:	b2 07       	cpc	r27, r18
 14e:	e1 f7       	brne	.-8      	; 0x148 <.do_clear_bss_loop>
 150:	74 d3       	rcall	.+1768   	; 0x83a <main>
 152:	76 c4       	rjmp	.+2284   	; 0xa40 <_exit>

00000154 <__bad_interrupt>:
 154:	55 cf       	rjmp	.-342    	; 0x0 <__vectors>

00000156 <TimerOn>:
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
	_avr_timer_cntcurr = _avr_timer_M;
 156:	8b e0       	ldi	r24, 0x0B	; 11
 158:	80 93 81 00 	sts	0x0081, r24
 15c:	8d e7       	ldi	r24, 0x7D	; 125
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	90 93 89 00 	sts	0x0089, r25
 164:	80 93 88 00 	sts	0x0088, r24
 168:	82 e0       	ldi	r24, 0x02	; 2
 16a:	80 93 6f 00 	sts	0x006F, r24
 16e:	10 92 85 00 	sts	0x0085, r1
 172:	10 92 84 00 	sts	0x0084, r1
 176:	80 91 00 01 	lds	r24, 0x0100
 17a:	90 91 01 01 	lds	r25, 0x0101
 17e:	a0 91 02 01 	lds	r26, 0x0102
 182:	b0 91 03 01 	lds	r27, 0x0103
 186:	80 93 05 01 	sts	0x0105, r24
 18a:	90 93 06 01 	sts	0x0106, r25
 18e:	a0 93 07 01 	sts	0x0107, r26
 192:	b0 93 08 01 	sts	0x0108, r27
 196:	8f b7       	in	r24, 0x3f	; 63
 198:	80 68       	ori	r24, 0x80	; 128
 19a:	8f bf       	out	0x3f, r24	; 63
 19c:	08 95       	ret

0000019e <__vector_13>:
 19e:	1f 92       	push	r1
 1a0:	0f 92       	push	r0
 1a2:	0f b6       	in	r0, 0x3f	; 63
 1a4:	0f 92       	push	r0
 1a6:	11 24       	eor	r1, r1
 1a8:	8f 93       	push	r24
 1aa:	9f 93       	push	r25
 1ac:	af 93       	push	r26
 1ae:	bf 93       	push	r27
 1b0:	80 91 05 01 	lds	r24, 0x0105
 1b4:	90 91 06 01 	lds	r25, 0x0106
 1b8:	a0 91 07 01 	lds	r26, 0x0107
 1bc:	b0 91 08 01 	lds	r27, 0x0108
 1c0:	01 97       	sbiw	r24, 0x01	; 1
 1c2:	a1 09       	sbc	r26, r1
 1c4:	b1 09       	sbc	r27, r1
 1c6:	80 93 05 01 	sts	0x0105, r24
 1ca:	90 93 06 01 	sts	0x0106, r25
 1ce:	a0 93 07 01 	sts	0x0107, r26
 1d2:	b0 93 08 01 	sts	0x0108, r27
 1d6:	89 2b       	or	r24, r25
 1d8:	8a 2b       	or	r24, r26
 1da:	8b 2b       	or	r24, r27
 1dc:	99 f4       	brne	.+38     	; 0x204 <__vector_13+0x66>
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	80 93 09 01 	sts	0x0109, r24
 1e4:	80 91 00 01 	lds	r24, 0x0100
 1e8:	90 91 01 01 	lds	r25, 0x0101
 1ec:	a0 91 02 01 	lds	r26, 0x0102
 1f0:	b0 91 03 01 	lds	r27, 0x0103
 1f4:	80 93 05 01 	sts	0x0105, r24
 1f8:	90 93 06 01 	sts	0x0106, r25
 1fc:	a0 93 07 01 	sts	0x0107, r26
 200:	b0 93 08 01 	sts	0x0108, r27
 204:	bf 91       	pop	r27
 206:	af 91       	pop	r26
 208:	9f 91       	pop	r25
 20a:	8f 91       	pop	r24
 20c:	0f 90       	pop	r0
 20e:	0f be       	out	0x3f, r0	; 63
 210:	0f 90       	pop	r0
 212:	1f 90       	pop	r1
 214:	18 95       	reti

00000216 <TickFct_State_machine_1>:

enum SM1_States { SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;

void TickFct_State_machine_1() 
{
	switch(SM1_State) 
 216:	80 91 0e 01 	lds	r24, 0x010E
 21a:	82 30       	cpi	r24, 0x02	; 2
 21c:	c9 f0       	breq	.+50     	; 0x250 <TickFct_State_machine_1+0x3a>
 21e:	28 f4       	brcc	.+10     	; 0x22a <TickFct_State_machine_1+0x14>
 220:	88 23       	and	r24, r24
 222:	41 f0       	breq	.+16     	; 0x234 <TickFct_State_machine_1+0x1e>
 224:	81 30       	cpi	r24, 0x01	; 1
 226:	81 f0       	breq	.+32     	; 0x248 <TickFct_State_machine_1+0x32>
 228:	20 c0       	rjmp	.+64     	; 0x26a <TickFct_State_machine_1+0x54>
 22a:	83 30       	cpi	r24, 0x03	; 3
 22c:	a9 f0       	breq	.+42     	; 0x258 <TickFct_State_machine_1+0x42>
 22e:	84 30       	cpi	r24, 0x04	; 4
 230:	b9 f0       	breq	.+46     	; 0x260 <TickFct_State_machine_1+0x4a>
 232:	1b c0       	rjmp	.+54     	; 0x26a <TickFct_State_machine_1+0x54>
	{

		case SM1_off:
		if(global_g == 0)
 234:	80 91 04 01 	lds	r24, 0x0104
 238:	81 11       	cpse	r24, r1
 23a:	26 c0       	rjmp	.+76     	; 0x288 <TickFct_State_machine_1+0x72>
		{
			if(~PINB & 0x10)
 23c:	1c 99       	sbic	0x03, 4	; 3
 23e:	24 c0       	rjmp	.+72     	; 0x288 <TickFct_State_machine_1+0x72>
			{
				SM1_State = SM1_on1;
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	80 93 0e 01 	sts	0x010E, r24
 246:	22 c0       	rjmp	.+68     	; 0x28c <TickFct_State_machine_1+0x76>
				SM1_State = SM1_off;
			}
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
 248:	82 e0       	ldi	r24, 0x02	; 2
 24a:	80 93 0e 01 	sts	0x010E, r24
 24e:	21 c0       	rjmp	.+66     	; 0x292 <TickFct_State_machine_1+0x7c>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
 250:	83 e0       	ldi	r24, 0x03	; 3
 252:	80 93 0e 01 	sts	0x010E, r24
 256:	20 c0       	rjmp	.+64     	; 0x298 <TickFct_State_machine_1+0x82>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
 258:	84 e0       	ldi	r24, 0x04	; 4
 25a:	80 93 0e 01 	sts	0x010E, r24
 25e:	1f c0       	rjmp	.+62     	; 0x29e <TickFct_State_machine_1+0x88>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
 260:	10 92 0e 01 	sts	0x010E, r1
		global_g = 1;
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	80 93 04 01 	sts	0x0104, r24
	}

	switch(SM1_State) 
 26a:	80 91 0e 01 	lds	r24, 0x010E
 26e:	82 30       	cpi	r24, 0x02	; 2
 270:	81 f0       	breq	.+32     	; 0x292 <TickFct_State_machine_1+0x7c>
 272:	28 f4       	brcc	.+10     	; 0x27e <TickFct_State_machine_1+0x68>
 274:	88 23       	and	r24, r24
 276:	41 f0       	breq	.+16     	; 0x288 <TickFct_State_machine_1+0x72>
 278:	81 30       	cpi	r24, 0x01	; 1
 27a:	41 f0       	breq	.+16     	; 0x28c <TickFct_State_machine_1+0x76>
 27c:	08 95       	ret
 27e:	83 30       	cpi	r24, 0x03	; 3
 280:	59 f0       	breq	.+22     	; 0x298 <TickFct_State_machine_1+0x82>
 282:	84 30       	cpi	r24, 0x04	; 4
 284:	71 f4       	brne	.+28     	; 0x2a2 <TickFct_State_machine_1+0x8c>
 286:	0b c0       	rjmp	.+22     	; 0x29e <TickFct_State_machine_1+0x88>
	{
		case SM1_off:
		PORTA = 0X00;
 288:	12 b8       	out	0x02, r1	; 2
		break;
 28a:	08 95       	ret
		case SM1_on1:
		PORTA = 0x01;
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	82 b9       	out	0x02, r24	; 2
		break;
 290:	08 95       	ret
		case SM1_on2:
		PORTA = 0x02;
 292:	82 e0       	ldi	r24, 0x02	; 2
 294:	82 b9       	out	0x02, r24	; 2
		break;
 296:	08 95       	ret
		case SM1_on3:
		PORTA = 0x04;
 298:	84 e0       	ldi	r24, 0x04	; 4
 29a:	82 b9       	out	0x02, r24	; 2
		break;
 29c:	08 95       	ret
		case SM1_on4:
		PORTA = 0x08;
 29e:	88 e0       	ldi	r24, 0x08	; 8
 2a0:	82 b9       	out	0x02, r24	; 2
 2a2:	08 95       	ret

000002a4 <ButtonPress>:
}

enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
 2a4:	80 91 11 01 	lds	r24, 0x0111
 2a8:	82 30       	cpi	r24, 0x02	; 2
 2aa:	a9 f1       	breq	.+106    	; 0x316 <ButtonPress+0x72>
 2ac:	28 f4       	brcc	.+10     	; 0x2b8 <ButtonPress+0x14>
 2ae:	88 23       	and	r24, r24
 2b0:	59 f0       	breq	.+22     	; 0x2c8 <ButtonPress+0x24>
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	f9 f0       	breq	.+62     	; 0x2f4 <ButtonPress+0x50>
 2b6:	5f c0       	rjmp	.+190    	; 0x376 <ButtonPress+0xd2>
 2b8:	84 30       	cpi	r24, 0x04	; 4
 2ba:	09 f4       	brne	.+2      	; 0x2be <ButtonPress+0x1a>
 2bc:	4e c0       	rjmp	.+156    	; 0x35a <ButtonPress+0xb6>
 2be:	e0 f1       	brcs	.+120    	; 0x338 <ButtonPress+0x94>
 2c0:	85 30       	cpi	r24, 0x05	; 5
 2c2:	09 f4       	brne	.+2      	; 0x2c6 <ButtonPress+0x22>
 2c4:	50 c0       	rjmp	.+160    	; 0x366 <ButtonPress+0xc2>
 2c6:	57 c0       	rjmp	.+174    	; 0x376 <ButtonPress+0xd2>
	{
		case Init:
		if(global_g == 1)
 2c8:	80 91 04 01 	lds	r24, 0x0104
 2cc:	81 30       	cpi	r24, 0x01	; 1
 2ce:	09 f0       	breq	.+2      	; 0x2d2 <ButtonPress+0x2e>
 2d0:	75 c0       	rjmp	.+234    	; 0x3bc <ButtonPress+0x118>
		{
			if(~PINB & 0x01)
 2d2:	18 99       	sbic	0x03, 0	; 3
 2d4:	05 c0       	rjmp	.+10     	; 0x2e0 <ButtonPress+0x3c>
			{
				while(~PINB & 0x01){}
 2d6:	18 9b       	sbis	0x03, 0	; 3
 2d8:	fe cf       	rjmp	.-4      	; 0x2d6 <ButtonPress+0x32>
				Press_States = Press1;	
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	80 93 11 01 	sts	0x0111, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 2e0:	19 9b       	sbis	0x03, 1	; 3
 2e2:	04 c0       	rjmp	.+8      	; 0x2ec <ButtonPress+0x48>
 2e4:	1a 9b       	sbis	0x03, 2	; 3
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <ButtonPress+0x48>
 2e8:	1b 99       	sbic	0x03, 3	; 3
 2ea:	45 c0       	rjmp	.+138    	; 0x376 <ButtonPress+0xd2>
			{
				Press_States = Error;
 2ec:	85 e0       	ldi	r24, 0x05	; 5
 2ee:	80 93 11 01 	sts	0x0111, r24
 2f2:	51 c0       	rjmp	.+162    	; 0x396 <ButtonPress+0xf2>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
 2f4:	19 99       	sbic	0x03, 1	; 3
 2f6:	05 c0       	rjmp	.+10     	; 0x302 <ButtonPress+0x5e>
		{
			while(~PINB & 0x02){}
 2f8:	19 9b       	sbis	0x03, 1	; 3
 2fa:	fe cf       	rjmp	.-4      	; 0x2f8 <ButtonPress+0x54>
			Press_States = Press2;
 2fc:	82 e0       	ldi	r24, 0x02	; 2
 2fe:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 302:	18 9b       	sbis	0x03, 0	; 3
 304:	04 c0       	rjmp	.+8      	; 0x30e <ButtonPress+0x6a>
 306:	1a 9b       	sbis	0x03, 2	; 3
 308:	02 c0       	rjmp	.+4      	; 0x30e <ButtonPress+0x6a>
 30a:	1b 99       	sbic	0x03, 3	; 3
 30c:	34 c0       	rjmp	.+104    	; 0x376 <ButtonPress+0xd2>
		{
			Press_States = Error;
 30e:	85 e0       	ldi	r24, 0x05	; 5
 310:	80 93 11 01 	sts	0x0111, r24
 314:	40 c0       	rjmp	.+128    	; 0x396 <ButtonPress+0xf2>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
 316:	1a 99       	sbic	0x03, 2	; 3
 318:	05 c0       	rjmp	.+10     	; 0x324 <ButtonPress+0x80>
		{
			while(~PINB & 0x04){}
 31a:	1a 9b       	sbis	0x03, 2	; 3
 31c:	fe cf       	rjmp	.-4      	; 0x31a <ButtonPress+0x76>
			Press_States = Press3;
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 324:	19 9b       	sbis	0x03, 1	; 3
 326:	04 c0       	rjmp	.+8      	; 0x330 <ButtonPress+0x8c>
 328:	18 9b       	sbis	0x03, 0	; 3
 32a:	02 c0       	rjmp	.+4      	; 0x330 <ButtonPress+0x8c>
 32c:	1b 99       	sbic	0x03, 3	; 3
 32e:	23 c0       	rjmp	.+70     	; 0x376 <ButtonPress+0xd2>
		{
			Press_States = Error;
 330:	85 e0       	ldi	r24, 0x05	; 5
 332:	80 93 11 01 	sts	0x0111, r24
 336:	2f c0       	rjmp	.+94     	; 0x396 <ButtonPress+0xf2>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
 338:	1b 99       	sbic	0x03, 3	; 3
 33a:	05 c0       	rjmp	.+10     	; 0x346 <ButtonPress+0xa2>
		{
			while(~PINB & 0x08){}
 33c:	1b 9b       	sbis	0x03, 3	; 3
 33e:	fe cf       	rjmp	.-4      	; 0x33c <ButtonPress+0x98>
			Press_States = Press4;
 340:	84 e0       	ldi	r24, 0x04	; 4
 342:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 346:	19 9b       	sbis	0x03, 1	; 3
 348:	04 c0       	rjmp	.+8      	; 0x352 <ButtonPress+0xae>
 34a:	1a 9b       	sbis	0x03, 2	; 3
 34c:	02 c0       	rjmp	.+4      	; 0x352 <ButtonPress+0xae>
 34e:	18 99       	sbic	0x03, 0	; 3
 350:	12 c0       	rjmp	.+36     	; 0x376 <ButtonPress+0xd2>
		{
			Press_States = Error;
 352:	85 e0       	ldi	r24, 0x05	; 5
 354:	80 93 11 01 	sts	0x0111, r24
 358:	1e c0       	rjmp	.+60     	; 0x396 <ButtonPress+0xf2>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
 35a:	1c 99       	sbic	0x03, 4	; 3
 35c:	28 c0       	rjmp	.+80     	; 0x3ae <ButtonPress+0x10a>
		{
			Press_States = Off;	
 35e:	86 e0       	ldi	r24, 0x06	; 6
 360:	80 93 11 01 	sts	0x0111, r24
 364:	27 c0       	rjmp	.+78     	; 0x3b4 <ButtonPress+0x110>
		}
		break;
		case Error:
		if(~PINB & 0x01)
 366:	18 99       	sbic	0x03, 0	; 3
 368:	16 c0       	rjmp	.+44     	; 0x396 <ButtonPress+0xf2>
		{
			while(~PINB & 0x01){}
 36a:	18 9b       	sbis	0x03, 0	; 3
 36c:	fe cf       	rjmp	.-4      	; 0x36a <ButtonPress+0xc6>
			Press_States = Press1;
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	80 93 11 01 	sts	0x0111, r24
 374:	13 c0       	rjmp	.+38     	; 0x39c <ButtonPress+0xf8>
		}
		break;
	}
	switch(Press_States)
 376:	80 91 11 01 	lds	r24, 0x0111
 37a:	83 30       	cpi	r24, 0x03	; 3
 37c:	a9 f0       	breq	.+42     	; 0x3a8 <ButtonPress+0x104>
 37e:	28 f4       	brcc	.+10     	; 0x38a <ButtonPress+0xe6>
 380:	81 30       	cpi	r24, 0x01	; 1
 382:	61 f0       	breq	.+24     	; 0x39c <ButtonPress+0xf8>
 384:	82 30       	cpi	r24, 0x02	; 2
 386:	69 f0       	breq	.+26     	; 0x3a2 <ButtonPress+0xfe>
 388:	08 95       	ret
 38a:	85 30       	cpi	r24, 0x05	; 5
 38c:	21 f0       	breq	.+8      	; 0x396 <ButtonPress+0xf2>
 38e:	78 f0       	brcs	.+30     	; 0x3ae <ButtonPress+0x10a>
 390:	86 30       	cpi	r24, 0x06	; 6
 392:	81 f0       	breq	.+32     	; 0x3b4 <ButtonPress+0x110>
 394:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
 396:	80 e1       	ldi	r24, 0x10	; 16
 398:	82 b9       	out	0x02, r24	; 2
		break;
 39a:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	82 b9       	out	0x02, r24	; 2
		break;
 3a0:	08 95       	ret
		
		case Press2:
		PORTA = 0x02;
 3a2:	82 e0       	ldi	r24, 0x02	; 2
 3a4:	82 b9       	out	0x02, r24	; 2
		break;
 3a6:	08 95       	ret
		
		case Press3:
		PORTA = 0x04;
 3a8:	84 e0       	ldi	r24, 0x04	; 4
 3aa:	82 b9       	out	0x02, r24	; 2
		break;
 3ac:	08 95       	ret
		
		case Press4:
		PORTA = 0x08;
 3ae:	88 e0       	ldi	r24, 0x08	; 8
 3b0:	82 b9       	out	0x02, r24	; 2
		break;
 3b2:	08 95       	ret
		case Off:
		PORTA = 0x00;
 3b4:	12 b8       	out	0x02, r1	; 2
		global_g = 2;
 3b6:	82 e0       	ldi	r24, 0x02	; 2
 3b8:	80 93 04 01 	sts	0x0104, r24
 3bc:	08 95       	ret

000003be <TickFct_Machine2>:
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
 3be:	80 91 0d 01 	lds	r24, 0x010D
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	87 30       	cpi	r24, 0x07	; 7
 3c6:	91 05       	cpc	r25, r1
 3c8:	70 f5       	brcc	.+92     	; 0x426 <TickFct_Machine2+0x68>
 3ca:	fc 01       	movw	r30, r24
 3cc:	ea 5b       	subi	r30, 0xBA	; 186
 3ce:	ff 4f       	sbci	r31, 0xFF	; 255
 3d0:	31 c3       	rjmp	.+1634   	; 0xa34 <__tablejump2__>
	{
		case SM2_off:
		if(global_g == 2)
 3d2:	80 91 04 01 	lds	r24, 0x0104
 3d6:	82 30       	cpi	r24, 0x02	; 2
 3d8:	81 f5       	brne	.+96     	; 0x43a <TickFct_Machine2+0x7c>
		{
			if(~PINB & 0x01)
 3da:	18 99       	sbic	0x03, 0	; 3
 3dc:	03 c0       	rjmp	.+6      	; 0x3e4 <TickFct_Machine2+0x26>
			{
				SM2_States = SM2_on1;
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	80 93 0d 01 	sts	0x010D, r24
			}
			while(!(~PINB & 0x01))
 3e4:	18 9b       	sbis	0x03, 0	; 3
 3e6:	1f c0       	rjmp	.+62     	; 0x426 <TickFct_Machine2+0x68>
			{
				SM2_States = SM2_off;
 3e8:	10 92 0d 01 	sts	0x010D, r1
		{
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
 3ec:	18 99       	sbic	0x03, 0	; 3
 3ee:	fc cf       	rjmp	.-8      	; 0x3e8 <TickFct_Machine2+0x2a>
 3f0:	24 c0       	rjmp	.+72     	; 0x43a <TickFct_Machine2+0x7c>
		else{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
 3f2:	82 e0       	ldi	r24, 0x02	; 2
 3f4:	80 93 0d 01 	sts	0x010D, r24
 3f8:	25 c0       	rjmp	.+74     	; 0x444 <TickFct_Machine2+0x86>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
 3fa:	83 e0       	ldi	r24, 0x03	; 3
 3fc:	80 93 0d 01 	sts	0x010D, r24
 400:	24 c0       	rjmp	.+72     	; 0x44a <TickFct_Machine2+0x8c>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
 402:	84 e0       	ldi	r24, 0x04	; 4
 404:	80 93 0d 01 	sts	0x010D, r24
 408:	23 c0       	rjmp	.+70     	; 0x450 <TickFct_Machine2+0x92>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
 40a:	85 e0       	ldi	r24, 0x05	; 5
 40c:	80 93 0d 01 	sts	0x010D, r24
 410:	22 c0       	rjmp	.+68     	; 0x456 <TickFct_Machine2+0x98>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
 412:	86 e0       	ldi	r24, 0x06	; 6
 414:	80 93 0d 01 	sts	0x010D, r24
 418:	21 c0       	rjmp	.+66     	; 0x45c <TickFct_Machine2+0x9e>
		break;
		case SM2_on6:
		global_g = 3;
 41a:	83 e0       	ldi	r24, 0x03	; 3
 41c:	80 93 04 01 	sts	0x0104, r24
		SM2_States = SM2_off;
 420:	10 92 0d 01 	sts	0x010D, r1
		break;
 424:	0a c0       	rjmp	.+20     	; 0x43a <TickFct_Machine2+0x7c>
	}

	switch(SM2_States)
 426:	80 91 0d 01 	lds	r24, 0x010D
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	87 30       	cpi	r24, 0x07	; 7
 42e:	91 05       	cpc	r25, r1
 430:	b8 f4       	brcc	.+46     	; 0x460 <TickFct_Machine2+0xa2>
 432:	fc 01       	movw	r30, r24
 434:	e3 5b       	subi	r30, 0xB3	; 179
 436:	ff 4f       	sbci	r31, 0xFF	; 255
 438:	fd c2       	rjmp	.+1530   	; 0xa34 <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
 43a:	12 b8       	out	0x02, r1	; 2
		break;
 43c:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	82 b9       	out	0x02, r24	; 2
		break;
 442:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
 444:	84 e0       	ldi	r24, 0x04	; 4
 446:	82 b9       	out	0x02, r24	; 2
		break;
 448:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
 44a:	88 e0       	ldi	r24, 0x08	; 8
 44c:	82 b9       	out	0x02, r24	; 2
		break;
 44e:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	82 b9       	out	0x02, r24	; 2
		break;
 454:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
 456:	82 e0       	ldi	r24, 0x02	; 2
 458:	82 b9       	out	0x02, r24	; 2
		break;
 45a:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	82 b9       	out	0x02, r24	; 2
 460:	08 95       	ret

00000462 <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
 462:	80 91 0a 01 	lds	r24, 0x010A
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	87 30       	cpi	r24, 0x07	; 7
 46a:	91 05       	cpc	r25, r1
 46c:	08 f0       	brcs	.+2      	; 0x470 <ButtonPress2+0xe>
 46e:	70 c0       	rjmp	.+224    	; 0x550 <ButtonPress2+0xee>
 470:	fc 01       	movw	r30, r24
 472:	ec 5a       	subi	r30, 0xAC	; 172
 474:	ff 4f       	sbci	r31, 0xFF	; 255
 476:	de c2       	rjmp	.+1468   	; 0xa34 <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
 478:	18 99       	sbic	0x03, 0	; 3
 47a:	05 c0       	rjmp	.+10     	; 0x486 <ButtonPress2+0x24>
		{
			while(~PINB & 0x01){}
 47c:	18 9b       	sbis	0x03, 0	; 3
 47e:	fe cf       	rjmp	.-4      	; 0x47c <ButtonPress2+0x1a>
			Press_sec_level = Press_state1;
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 486:	19 9b       	sbis	0x03, 1	; 3
 488:	04 c0       	rjmp	.+8      	; 0x492 <ButtonPress2+0x30>
 48a:	1a 9b       	sbis	0x03, 2	; 3
 48c:	02 c0       	rjmp	.+4      	; 0x492 <ButtonPress2+0x30>
 48e:	1b 99       	sbic	0x03, 3	; 3
 490:	62 c0       	rjmp	.+196    	; 0x556 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 492:	87 e0       	ldi	r24, 0x07	; 7
 494:	80 93 0a 01 	sts	0x010A, r24
 498:	69 c0       	rjmp	.+210    	; 0x56c <ButtonPress2+0x10a>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
 49a:	1a 99       	sbic	0x03, 2	; 3
 49c:	05 c0       	rjmp	.+10     	; 0x4a8 <ButtonPress2+0x46>
		{
			while(~PINB & 0x04){}
 49e:	1a 9b       	sbis	0x03, 2	; 3
 4a0:	fe cf       	rjmp	.-4      	; 0x49e <ButtonPress2+0x3c>
			Press_sec_level = Press_state2;
 4a2:	82 e0       	ldi	r24, 0x02	; 2
 4a4:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 4a8:	19 9b       	sbis	0x03, 1	; 3
 4aa:	04 c0       	rjmp	.+8      	; 0x4b4 <ButtonPress2+0x52>
 4ac:	18 9b       	sbis	0x03, 0	; 3
 4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <ButtonPress2+0x52>
 4b0:	1b 99       	sbic	0x03, 3	; 3
 4b2:	51 c0       	rjmp	.+162    	; 0x556 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error;
 4b4:	85 e0       	ldi	r24, 0x05	; 5
 4b6:	80 93 0a 01 	sts	0x010A, r24
 4ba:	67 c0       	rjmp	.+206    	; 0x58a <ButtonPress2+0x128>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
 4bc:	1b 99       	sbic	0x03, 3	; 3
 4be:	05 c0       	rjmp	.+10     	; 0x4ca <ButtonPress2+0x68>
		{
			while(~PINB & 0x08){}
 4c0:	1b 9b       	sbis	0x03, 3	; 3
 4c2:	fe cf       	rjmp	.-4      	; 0x4c0 <ButtonPress2+0x5e>
			Press_sec_level = Press_state3;
 4c4:	83 e0       	ldi	r24, 0x03	; 3
 4c6:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 4ca:	19 9b       	sbis	0x03, 1	; 3
 4cc:	04 c0       	rjmp	.+8      	; 0x4d6 <ButtonPress2+0x74>
 4ce:	1a 9b       	sbis	0x03, 2	; 3
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <ButtonPress2+0x74>
 4d2:	18 99       	sbic	0x03, 0	; 3
 4d4:	40 c0       	rjmp	.+128    	; 0x556 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 4d6:	87 e0       	ldi	r24, 0x07	; 7
 4d8:	80 93 0a 01 	sts	0x010A, r24
 4dc:	47 c0       	rjmp	.+142    	; 0x56c <ButtonPress2+0x10a>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
 4de:	18 99       	sbic	0x03, 0	; 3
 4e0:	05 c0       	rjmp	.+10     	; 0x4ec <ButtonPress2+0x8a>
		{
			while(~PINB & 0x01){}
 4e2:	18 9b       	sbis	0x03, 0	; 3
 4e4:	fe cf       	rjmp	.-4      	; 0x4e2 <ButtonPress2+0x80>
			Press_sec_level = Press_state4;
 4e6:	84 e0       	ldi	r24, 0x04	; 4
 4e8:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 4ec:	19 9b       	sbis	0x03, 1	; 3
 4ee:	04 c0       	rjmp	.+8      	; 0x4f8 <ButtonPress2+0x96>
 4f0:	1a 9b       	sbis	0x03, 2	; 3
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <ButtonPress2+0x96>
 4f4:	1b 99       	sbic	0x03, 3	; 3
 4f6:	2f c0       	rjmp	.+94     	; 0x556 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 4f8:	87 e0       	ldi	r24, 0x07	; 7
 4fa:	80 93 0a 01 	sts	0x010A, r24
 4fe:	36 c0       	rjmp	.+108    	; 0x56c <ButtonPress2+0x10a>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
 500:	19 99       	sbic	0x03, 1	; 3
 502:	05 c0       	rjmp	.+10     	; 0x50e <ButtonPress2+0xac>
		{
			while(~PINB & 0x02){}
 504:	19 9b       	sbis	0x03, 1	; 3
 506:	fe cf       	rjmp	.-4      	; 0x504 <ButtonPress2+0xa2>
			Press_sec_level = Press_state5;
 508:	85 e0       	ldi	r24, 0x05	; 5
 50a:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 50e:	18 9b       	sbis	0x03, 0	; 3
 510:	04 c0       	rjmp	.+8      	; 0x51a <ButtonPress2+0xb8>
 512:	1a 9b       	sbis	0x03, 2	; 3
 514:	02 c0       	rjmp	.+4      	; 0x51a <ButtonPress2+0xb8>
 516:	1b 99       	sbic	0x03, 3	; 3
 518:	1e c0       	rjmp	.+60     	; 0x556 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 51a:	87 e0       	ldi	r24, 0x07	; 7
 51c:	80 93 0a 01 	sts	0x010A, r24
 520:	25 c0       	rjmp	.+74     	; 0x56c <ButtonPress2+0x10a>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
 522:	18 99       	sbic	0x03, 0	; 3
 524:	05 c0       	rjmp	.+10     	; 0x530 <ButtonPress2+0xce>
		{
			while(~PINB & 0x01){}
 526:	18 9b       	sbis	0x03, 0	; 3
 528:	fe cf       	rjmp	.-4      	; 0x526 <ButtonPress2+0xc4>
			Press_sec_level = Press_state6;
 52a:	86 e0       	ldi	r24, 0x06	; 6
 52c:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 530:	19 9b       	sbis	0x03, 1	; 3
 532:	04 c0       	rjmp	.+8      	; 0x53c <ButtonPress2+0xda>
 534:	1a 9b       	sbis	0x03, 2	; 3
 536:	02 c0       	rjmp	.+4      	; 0x53c <ButtonPress2+0xda>
 538:	1b 99       	sbic	0x03, 3	; 3
 53a:	0d c0       	rjmp	.+26     	; 0x556 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 53c:	87 e0       	ldi	r24, 0x07	; 7
 53e:	80 93 0a 01 	sts	0x010A, r24
 542:	14 c0       	rjmp	.+40     	; 0x56c <ButtonPress2+0x10a>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
 544:	1c 99       	sbic	0x03, 4	; 3
 546:	24 c0       	rjmp	.+72     	; 0x590 <ButtonPress2+0x12e>
		{
			Press_sec_level = Off2;
 548:	88 e0       	ldi	r24, 0x08	; 8
 54a:	80 93 0a 01 	sts	0x010A, r24
 54e:	23 c0       	rjmp	.+70     	; 0x596 <ButtonPress2+0x134>
		}
		break;
		default:
		Press_sec_level = Init2;
 550:	10 92 0a 01 	sts	0x010A, r1
 554:	08 95       	ret
	}
	switch(Press_sec_level)
 556:	80 91 0a 01 	lds	r24, 0x010A
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	fc 01       	movw	r30, r24
 55e:	31 97       	sbiw	r30, 0x01	; 1
 560:	e8 30       	cpi	r30, 0x08	; 8
 562:	f1 05       	cpc	r31, r1
 564:	e0 f4       	brcc	.+56     	; 0x59e <ButtonPress2+0x13c>
 566:	e5 5a       	subi	r30, 0xA5	; 165
 568:	ff 4f       	sbci	r31, 0xFF	; 255
 56a:	64 c2       	rjmp	.+1224   	; 0xa34 <__tablejump2__>
	{
		case Error2:
		PORTA = 0x10;
 56c:	80 e1       	ldi	r24, 0x10	; 16
 56e:	82 b9       	out	0x02, r24	; 2
		break;
 570:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	82 b9       	out	0x02, r24	; 2
		break;
 576:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
 578:	84 e0       	ldi	r24, 0x04	; 4
 57a:	82 b9       	out	0x02, r24	; 2
		break;
 57c:	08 95       	ret

		case Press_state3:
		PORTA = 0x08;
 57e:	88 e0       	ldi	r24, 0x08	; 8
 580:	82 b9       	out	0x02, r24	; 2
		break;
 582:	08 95       	ret

		case Press_state4:
		PORTA = 0x01;
 584:	81 e0       	ldi	r24, 0x01	; 1
 586:	82 b9       	out	0x02, r24	; 2
		break;
 588:	08 95       	ret

		case Press_state5:
		PORTA = 0x02;
 58a:	82 e0       	ldi	r24, 0x02	; 2
 58c:	82 b9       	out	0x02, r24	; 2
		break;
 58e:	08 95       	ret

		case Press_state6:
		PORTA = 0x01;
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	82 b9       	out	0x02, r24	; 2
		break;
 594:	08 95       	ret

		case Off2:
		PORTA = 0x00;
 596:	12 b8       	out	0x02, r1	; 2
		global_g = 4;
 598:	84 e0       	ldi	r24, 0x04	; 4
 59a:	80 93 04 01 	sts	0x0104, r24
 59e:	08 95       	ret

000005a0 <TickFct_Machine3>:
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
 5a0:	20 91 0b 01 	lds	r18, 0x010B
 5a4:	82 2f       	mov	r24, r18
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	8a 30       	cpi	r24, 0x0A	; 10
 5aa:	91 05       	cpc	r25, r1
 5ac:	b8 f5       	brcc	.+110    	; 0x61c <TickFct_Machine3+0x7c>
 5ae:	fc 01       	movw	r30, r24
 5b0:	ed 59       	subi	r30, 0x9D	; 157
 5b2:	ff 4f       	sbci	r31, 0xFF	; 255
 5b4:	3f c2       	rjmp	.+1150   	; 0xa34 <__tablejump2__>
	{
		case SM3_off:
		if(global_g == 4)
 5b6:	80 91 04 01 	lds	r24, 0x0104
 5ba:	84 30       	cpi	r24, 0x04	; 4
 5bc:	c1 f5       	brne	.+112    	; 0x62e <TickFct_Machine3+0x8e>
		{
			PORTA = 0x04;
 5be:	82 b9       	out	0x02, r24	; 2
			if(~PINB & 0x01)
 5c0:	18 99       	sbic	0x03, 0	; 3
 5c2:	06 c0       	rjmp	.+12     	; 0x5d0 <TickFct_Machine3+0x30>
			{
				while(~PINB & 0x01){}
 5c4:	18 9b       	sbis	0x03, 0	; 3
 5c6:	fe cf       	rjmp	.-4      	; 0x5c4 <TickFct_Machine3+0x24>
				SM3_State = SM3_on1;
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	80 93 0b 01 	sts	0x010B, r24
 5ce:	31 c0       	rjmp	.+98     	; 0x632 <TickFct_Machine3+0x92>
			}
			else
			{
				SM3_State = SM3_off;
 5d0:	10 92 0b 01 	sts	0x010B, r1
 5d4:	2c c0       	rjmp	.+88     	; 0x62e <TickFct_Machine3+0x8e>
			}	
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
 5d6:	82 e0       	ldi	r24, 0x02	; 2
 5d8:	80 93 0b 01 	sts	0x010B, r24
 5dc:	2d c0       	rjmp	.+90     	; 0x638 <TickFct_Machine3+0x98>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
 5de:	83 e0       	ldi	r24, 0x03	; 3
 5e0:	80 93 0b 01 	sts	0x010B, r24
 5e4:	2c c0       	rjmp	.+88     	; 0x63e <TickFct_Machine3+0x9e>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
 5e6:	84 e0       	ldi	r24, 0x04	; 4
 5e8:	80 93 0b 01 	sts	0x010B, r24
 5ec:	2b c0       	rjmp	.+86     	; 0x644 <TickFct_Machine3+0xa4>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
 5ee:	85 e0       	ldi	r24, 0x05	; 5
 5f0:	80 93 0b 01 	sts	0x010B, r24
 5f4:	2a c0       	rjmp	.+84     	; 0x64a <TickFct_Machine3+0xaa>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
 5f6:	86 e0       	ldi	r24, 0x06	; 6
 5f8:	80 93 0b 01 	sts	0x010B, r24
 5fc:	29 c0       	rjmp	.+82     	; 0x650 <TickFct_Machine3+0xb0>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
 5fe:	87 e0       	ldi	r24, 0x07	; 7
 600:	80 93 0b 01 	sts	0x010B, r24
 604:	28 c0       	rjmp	.+80     	; 0x656 <TickFct_Machine3+0xb6>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
 606:	88 e0       	ldi	r24, 0x08	; 8
 608:	80 93 0b 01 	sts	0x010B, r24
 60c:	27 c0       	rjmp	.+78     	; 0x65c <TickFct_Machine3+0xbc>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
 60e:	89 e0       	ldi	r24, 0x09	; 9
 610:	80 93 0b 01 	sts	0x010B, r24
 614:	26 c0       	rjmp	.+76     	; 0x662 <TickFct_Machine3+0xc2>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
 616:	10 92 0b 01 	sts	0x010B, r1
 61a:	09 c0       	rjmp	.+18     	; 0x62e <TickFct_Machine3+0x8e>
	}
	switch(SM3_State)
 61c:	82 2f       	mov	r24, r18
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	8a 30       	cpi	r24, 0x0A	; 10
 622:	91 05       	cpc	r25, r1
 624:	18 f5       	brcc	.+70     	; 0x66c <TickFct_Machine3+0xcc>
 626:	fc 01       	movw	r30, r24
 628:	e3 59       	subi	r30, 0x93	; 147
 62a:	ff 4f       	sbci	r31, 0xFF	; 255
 62c:	03 c2       	rjmp	.+1030   	; 0xa34 <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
 62e:	12 b8       	out	0x02, r1	; 2
		break;
 630:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
 632:	82 e0       	ldi	r24, 0x02	; 2
 634:	82 b9       	out	0x02, r24	; 2
		break;
 636:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
 638:	84 e0       	ldi	r24, 0x04	; 4
 63a:	82 b9       	out	0x02, r24	; 2
		break;
 63c:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
 63e:	81 e0       	ldi	r24, 0x01	; 1
 640:	82 b9       	out	0x02, r24	; 2
		break;
 642:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
 644:	88 e0       	ldi	r24, 0x08	; 8
 646:	82 b9       	out	0x02, r24	; 2
		break;
 648:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
 64a:	82 e0       	ldi	r24, 0x02	; 2
 64c:	82 b9       	out	0x02, r24	; 2
		break;
 64e:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
 650:	84 e0       	ldi	r24, 0x04	; 4
 652:	82 b9       	out	0x02, r24	; 2
		break;
 654:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	82 b9       	out	0x02, r24	; 2
		break;
 65a:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
 65c:	82 e0       	ldi	r24, 0x02	; 2
 65e:	82 b9       	out	0x02, r24	; 2
		break;
 660:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
 662:	88 e0       	ldi	r24, 0x08	; 8
 664:	82 b9       	out	0x02, r24	; 2
		global_g = 5;
 666:	85 e0       	ldi	r24, 0x05	; 5
 668:	80 93 04 01 	sts	0x0104, r24
 66c:	08 95       	ret

0000066e <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
 66e:	80 91 0f 01 	lds	r24, 0x010F
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	8b 30       	cpi	r24, 0x0B	; 11
 676:	91 05       	cpc	r25, r1
 678:	08 f0       	brcs	.+2      	; 0x67c <ButtonPress3+0xe>
 67a:	b1 c0       	rjmp	.+354    	; 0x7de <ButtonPress3+0x170>
 67c:	fc 01       	movw	r30, r24
 67e:	e9 58       	subi	r30, 0x89	; 137
 680:	ff 4f       	sbci	r31, 0xFF	; 255
 682:	d8 c1       	rjmp	.+944    	; 0xa34 <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
 684:	80 91 04 01 	lds	r24, 0x0104
 688:	85 30       	cpi	r24, 0x05	; 5
 68a:	09 f0       	breq	.+2      	; 0x68e <ButtonPress3+0x20>
 68c:	d5 c0       	rjmp	.+426    	; 0x838 <ButtonPress3+0x1ca>
		{
			PORTA = 0x00;
 68e:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
 690:	19 99       	sbic	0x03, 1	; 3
 692:	05 c0       	rjmp	.+10     	; 0x69e <ButtonPress3+0x30>
			{
				while(~PINB & 0x02){}
 694:	19 9b       	sbis	0x03, 1	; 3
 696:	fe cf       	rjmp	.-4      	; 0x694 <ButtonPress3+0x26>
				Press_third_level = Press3_state1;
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	80 93 0f 01 	sts	0x010F, r24
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 69e:	18 9b       	sbis	0x03, 0	; 3
 6a0:	04 c0       	rjmp	.+8      	; 0x6aa <ButtonPress3+0x3c>
 6a2:	1a 9b       	sbis	0x03, 2	; 3
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <ButtonPress3+0x3c>
 6a6:	1b 99       	sbic	0x03, 3	; 3
 6a8:	9a c0       	rjmp	.+308    	; 0x7de <ButtonPress3+0x170>
			{
				Press_third_level = Error3;
 6aa:	8a e0       	ldi	r24, 0x0A	; 10
 6ac:	80 93 0f 01 	sts	0x010F, r24
 6b0:	a1 c0       	rjmp	.+322    	; 0x7f4 <ButtonPress3+0x186>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
 6b2:	19 99       	sbic	0x03, 1	; 3
 6b4:	9f c0       	rjmp	.+318    	; 0x7f4 <ButtonPress3+0x186>
		{
			while(~PINB & 0x02){}
 6b6:	19 9b       	sbis	0x03, 1	; 3
 6b8:	fe cf       	rjmp	.-4      	; 0x6b6 <ButtonPress3+0x48>
			Press_third_level = Press3_state1;
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	80 93 0f 01 	sts	0x010F, r24
 6c0:	9c c0       	rjmp	.+312    	; 0x7fa <ButtonPress3+0x18c>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
 6c2:	1a 99       	sbic	0x03, 2	; 3
 6c4:	05 c0       	rjmp	.+10     	; 0x6d0 <ButtonPress3+0x62>
		{
			
			while(~PINB & 0x04){}
 6c6:	1a 9b       	sbis	0x03, 2	; 3
 6c8:	fe cf       	rjmp	.-4      	; 0x6c6 <ButtonPress3+0x58>
			Press_third_level = Press3_state2;
 6ca:	82 e0       	ldi	r24, 0x02	; 2
 6cc:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 6d0:	19 9b       	sbis	0x03, 1	; 3
 6d2:	04 c0       	rjmp	.+8      	; 0x6dc <ButtonPress3+0x6e>
 6d4:	18 9b       	sbis	0x03, 0	; 3
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <ButtonPress3+0x6e>
 6d8:	1b 99       	sbic	0x03, 3	; 3
 6da:	81 c0       	rjmp	.+258    	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 6dc:	8a e0       	ldi	r24, 0x0A	; 10
 6de:	80 93 0f 01 	sts	0x010F, r24
 6e2:	88 c0       	rjmp	.+272    	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
 6e4:	18 99       	sbic	0x03, 0	; 3
 6e6:	05 c0       	rjmp	.+10     	; 0x6f2 <ButtonPress3+0x84>
		{
			while(~PINB & 0x01){}
 6e8:	18 9b       	sbis	0x03, 0	; 3
 6ea:	fe cf       	rjmp	.-4      	; 0x6e8 <ButtonPress3+0x7a>
			Press_third_level = Press3_state3;
 6ec:	83 e0       	ldi	r24, 0x03	; 3
 6ee:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 6f2:	19 9b       	sbis	0x03, 1	; 3
 6f4:	04 c0       	rjmp	.+8      	; 0x6fe <ButtonPress3+0x90>
 6f6:	1a 9b       	sbis	0x03, 2	; 3
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <ButtonPress3+0x90>
 6fa:	1b 99       	sbic	0x03, 3	; 3
 6fc:	70 c0       	rjmp	.+224    	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 6fe:	8a e0       	ldi	r24, 0x0A	; 10
 700:	80 93 0f 01 	sts	0x010F, r24
 704:	77 c0       	rjmp	.+238    	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
 706:	1b 99       	sbic	0x03, 3	; 3
 708:	05 c0       	rjmp	.+10     	; 0x714 <ButtonPress3+0xa6>
		{
			while(~PINB & 0x08){}
 70a:	1b 9b       	sbis	0x03, 3	; 3
 70c:	fe cf       	rjmp	.-4      	; 0x70a <ButtonPress3+0x9c>
			Press_third_level = Press3_state4;
 70e:	84 e0       	ldi	r24, 0x04	; 4
 710:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 714:	19 9b       	sbis	0x03, 1	; 3
 716:	04 c0       	rjmp	.+8      	; 0x720 <ButtonPress3+0xb2>
 718:	1a 9b       	sbis	0x03, 2	; 3
 71a:	02 c0       	rjmp	.+4      	; 0x720 <ButtonPress3+0xb2>
 71c:	18 99       	sbic	0x03, 0	; 3
 71e:	5f c0       	rjmp	.+190    	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 720:	8a e0       	ldi	r24, 0x0A	; 10
 722:	80 93 0f 01 	sts	0x010F, r24
 726:	66 c0       	rjmp	.+204    	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
 728:	19 99       	sbic	0x03, 1	; 3
 72a:	05 c0       	rjmp	.+10     	; 0x736 <ButtonPress3+0xc8>
		{
			while(~PINB & 0x02){}
 72c:	19 9b       	sbis	0x03, 1	; 3
 72e:	fe cf       	rjmp	.-4      	; 0x72c <ButtonPress3+0xbe>
			Press_third_level = Press3_state5;
 730:	85 e0       	ldi	r24, 0x05	; 5
 732:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 736:	18 9b       	sbis	0x03, 0	; 3
 738:	04 c0       	rjmp	.+8      	; 0x742 <ButtonPress3+0xd4>
 73a:	1a 9b       	sbis	0x03, 2	; 3
 73c:	02 c0       	rjmp	.+4      	; 0x742 <ButtonPress3+0xd4>
 73e:	1b 99       	sbic	0x03, 3	; 3
 740:	4e c0       	rjmp	.+156    	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 742:	8a e0       	ldi	r24, 0x0A	; 10
 744:	80 93 0f 01 	sts	0x010F, r24
 748:	55 c0       	rjmp	.+170    	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
 74a:	1a 99       	sbic	0x03, 2	; 3
 74c:	05 c0       	rjmp	.+10     	; 0x758 <ButtonPress3+0xea>
		{
			
			while(~PINB & 0x04){}
 74e:	1a 9b       	sbis	0x03, 2	; 3
 750:	fe cf       	rjmp	.-4      	; 0x74e <ButtonPress3+0xe0>
			Press_third_level = Press3_state6;
 752:	86 e0       	ldi	r24, 0x06	; 6
 754:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 758:	19 9b       	sbis	0x03, 1	; 3
 75a:	04 c0       	rjmp	.+8      	; 0x764 <ButtonPress3+0xf6>
 75c:	18 9b       	sbis	0x03, 0	; 3
 75e:	02 c0       	rjmp	.+4      	; 0x764 <ButtonPress3+0xf6>
 760:	1b 99       	sbic	0x03, 3	; 3
 762:	3d c0       	rjmp	.+122    	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 764:	8a e0       	ldi	r24, 0x0A	; 10
 766:	80 93 0f 01 	sts	0x010F, r24
 76a:	44 c0       	rjmp	.+136    	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
 76c:	18 99       	sbic	0x03, 0	; 3
 76e:	05 c0       	rjmp	.+10     	; 0x77a <ButtonPress3+0x10c>
		{
			while(~PINB & 0x01){}
 770:	18 9b       	sbis	0x03, 0	; 3
 772:	fe cf       	rjmp	.-4      	; 0x770 <ButtonPress3+0x102>
			Press_third_level = Press3_state7;
 774:	87 e0       	ldi	r24, 0x07	; 7
 776:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 77a:	19 9b       	sbis	0x03, 1	; 3
 77c:	04 c0       	rjmp	.+8      	; 0x786 <ButtonPress3+0x118>
 77e:	1a 9b       	sbis	0x03, 2	; 3
 780:	02 c0       	rjmp	.+4      	; 0x786 <ButtonPress3+0x118>
 782:	1b 99       	sbic	0x03, 3	; 3
 784:	2c c0       	rjmp	.+88     	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 786:	8a e0       	ldi	r24, 0x0A	; 10
 788:	80 93 0f 01 	sts	0x010F, r24
 78c:	33 c0       	rjmp	.+102    	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
 78e:	19 99       	sbic	0x03, 1	; 3
 790:	05 c0       	rjmp	.+10     	; 0x79c <ButtonPress3+0x12e>
		{
			while(~PINB & 0x02){}
 792:	19 9b       	sbis	0x03, 1	; 3
 794:	fe cf       	rjmp	.-4      	; 0x792 <ButtonPress3+0x124>
			Press_third_level = Press3_state8;
 796:	88 e0       	ldi	r24, 0x08	; 8
 798:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 79c:	18 9b       	sbis	0x03, 0	; 3
 79e:	04 c0       	rjmp	.+8      	; 0x7a8 <ButtonPress3+0x13a>
 7a0:	1a 9b       	sbis	0x03, 2	; 3
 7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <ButtonPress3+0x13a>
 7a4:	1b 99       	sbic	0x03, 3	; 3
 7a6:	1b c0       	rjmp	.+54     	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 7a8:	8a e0       	ldi	r24, 0x0A	; 10
 7aa:	80 93 0f 01 	sts	0x010F, r24
 7ae:	22 c0       	rjmp	.+68     	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
 7b0:	1b 99       	sbic	0x03, 3	; 3
 7b2:	05 c0       	rjmp	.+10     	; 0x7be <ButtonPress3+0x150>
		{
			while(~PINB & 0x08){}
 7b4:	1b 9b       	sbis	0x03, 3	; 3
 7b6:	fe cf       	rjmp	.-4      	; 0x7b4 <ButtonPress3+0x146>
			Press_third_level = Press3_state9;
 7b8:	89 e0       	ldi	r24, 0x09	; 9
 7ba:	80 93 0f 01 	sts	0x010F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 7be:	19 9b       	sbis	0x03, 1	; 3
 7c0:	04 c0       	rjmp	.+8      	; 0x7ca <ButtonPress3+0x15c>
 7c2:	1a 9b       	sbis	0x03, 2	; 3
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <ButtonPress3+0x15c>
 7c6:	18 99       	sbic	0x03, 0	; 3
 7c8:	0a c0       	rjmp	.+20     	; 0x7de <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 7ca:	8a e0       	ldi	r24, 0x0A	; 10
 7cc:	80 93 0f 01 	sts	0x010F, r24
 7d0:	11 c0       	rjmp	.+34     	; 0x7f4 <ButtonPress3+0x186>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
 7d2:	1c 99       	sbic	0x03, 4	; 3
 7d4:	2a c0       	rjmp	.+84     	; 0x82a <ButtonPress3+0x1bc>
		{
			Press_third_level = Off3;
 7d6:	8b e0       	ldi	r24, 0x0B	; 11
 7d8:	80 93 0f 01 	sts	0x010F, r24
 7dc:	29 c0       	rjmp	.+82     	; 0x830 <ButtonPress3+0x1c2>
		}
		break;
	}
	switch(Press_third_level)
 7de:	80 91 0f 01 	lds	r24, 0x010F
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	fc 01       	movw	r30, r24
 7e6:	31 97       	sbiw	r30, 0x01	; 1
 7e8:	eb 30       	cpi	r30, 0x0B	; 11
 7ea:	f1 05       	cpc	r31, r1
 7ec:	28 f5       	brcc	.+74     	; 0x838 <ButtonPress3+0x1ca>
 7ee:	ee 57       	subi	r30, 0x7E	; 126
 7f0:	ff 4f       	sbci	r31, 0xFF	; 255
 7f2:	20 c1       	rjmp	.+576    	; 0xa34 <__tablejump2__>
	{
		case Error3:
		PORTA = 0x10;
 7f4:	80 e1       	ldi	r24, 0x10	; 16
 7f6:	82 b9       	out	0x02, r24	; 2
		break;
 7f8:	08 95       	ret
		case Press3_state1:
		PORTA = 0x02;
 7fa:	82 e0       	ldi	r24, 0x02	; 2
 7fc:	82 b9       	out	0x02, r24	; 2
		break;
 7fe:	08 95       	ret
		case Press3_state2:
		PORTA = 0x04;
 800:	84 e0       	ldi	r24, 0x04	; 4
 802:	82 b9       	out	0x02, r24	; 2
		break;
 804:	08 95       	ret
		case Press3_state3:
		PORTA = 0x01;
 806:	81 e0       	ldi	r24, 0x01	; 1
 808:	82 b9       	out	0x02, r24	; 2
		break;
 80a:	08 95       	ret
		case Press3_state4:
		PORTA = 0x08;
 80c:	88 e0       	ldi	r24, 0x08	; 8
 80e:	82 b9       	out	0x02, r24	; 2
		break;
 810:	08 95       	ret
		case Press3_state5:
		PORTA = 0x02;
 812:	82 e0       	ldi	r24, 0x02	; 2
 814:	82 b9       	out	0x02, r24	; 2
		break;
 816:	08 95       	ret
		case Press3_state6:
		PORTA = 0x04;
 818:	84 e0       	ldi	r24, 0x04	; 4
 81a:	82 b9       	out	0x02, r24	; 2
		break;
 81c:	08 95       	ret
		case Press3_state7:
		PORTA = 0x01;
 81e:	81 e0       	ldi	r24, 0x01	; 1
 820:	82 b9       	out	0x02, r24	; 2
		break;
 822:	08 95       	ret
		case Press3_state8:
		PORTA = 0x02;
 824:	82 e0       	ldi	r24, 0x02	; 2
 826:	82 b9       	out	0x02, r24	; 2
		break;
 828:	08 95       	ret
		case Press3_state9:
		PORTA = 0x08;
 82a:	88 e0       	ldi	r24, 0x08	; 8
 82c:	82 b9       	out	0x02, r24	; 2
		break;
 82e:	08 95       	ret
		case Off3:
		PORTA = 0x00;
 830:	12 b8       	out	0x02, r1	; 2
		global_g = 6;
 832:	86 e0       	ldi	r24, 0x06	; 6
 834:	80 93 04 01 	sts	0x0104, r24
 838:	08 95       	ret

0000083a <main>:
}



int main(void)
{
 83a:	cf 92       	push	r12
 83c:	df 92       	push	r13
 83e:	ef 92       	push	r14
 840:	ff 92       	push	r15
	DDRA = 0xff;	PORTA = 0x00;
 842:	8f ef       	ldi	r24, 0xFF	; 255
 844:	81 b9       	out	0x01, r24	; 1
 846:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;
 848:	14 b8       	out	0x04, r1	; 4
 84a:	85 b9       	out	0x05, r24	; 5
	
	if(global_g == 0)
 84c:	80 91 04 01 	lds	r24, 0x0104
 850:	81 11       	cpse	r24, r1
 852:	e9 c0       	rjmp	.+466    	; 0xa26 <main+0x1ec>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 854:	0f 2e       	mov	r0, r31
 856:	fc eb       	ldi	r31, 0xBC	; 188
 858:	cf 2e       	mov	r12, r31
 85a:	f2 e0       	ldi	r31, 0x02	; 2
 85c:	df 2e       	mov	r13, r31
 85e:	e1 2c       	mov	r14, r1
 860:	f1 2c       	mov	r15, r1
 862:	f0 2d       	mov	r31, r0
 864:	c0 92 00 01 	sts	0x0100, r12
 868:	d0 92 01 01 	sts	0x0101, r13
 86c:	e0 92 02 01 	sts	0x0102, r14
 870:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 874:	c0 92 05 01 	sts	0x0105, r12
 878:	d0 92 06 01 	sts	0x0106, r13
 87c:	e0 92 07 01 	sts	0x0107, r14
 880:	f0 92 08 01 	sts	0x0108, r15
	if(global_g == 0)
	{
		while(global_g == 0)
		{
			TimerSet(700);
			TimerOn();
 884:	68 dc       	rcall	.-1840   	; 0x156 <TimerOn>
			TickFct_State_machine_1();
 886:	c7 dc       	rcall	.-1650   	; 0x216 <TickFct_State_machine_1>
			while(!TimerFlag);
 888:	80 91 09 01 	lds	r24, 0x0109
 88c:	88 23       	and	r24, r24
 88e:	e1 f3       	breq	.-8      	; 0x888 <main+0x4e>
			TimerFlag = 0;	
 890:	10 92 09 01 	sts	0x0109, r1
	DDRA = 0xff;	PORTA = 0x00;
	DDRB = 0x00;	PORTB = 0xFF;
	
	if(global_g == 0)
	{
		while(global_g == 0)
 894:	80 91 04 01 	lds	r24, 0x0104
 898:	88 23       	and	r24, r24
 89a:	21 f3       	breq	.-56     	; 0x864 <main+0x2a>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
 89c:	81 30       	cpi	r24, 0x01	; 1
 89e:	19 f5       	brne	.+70     	; 0x8e6 <main+0xac>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 8a0:	0f 2e       	mov	r0, r31
 8a2:	f8 ec       	ldi	r31, 0xC8	; 200
 8a4:	cf 2e       	mov	r12, r31
 8a6:	d1 2c       	mov	r13, r1
 8a8:	e1 2c       	mov	r14, r1
 8aa:	f1 2c       	mov	r15, r1
 8ac:	f0 2d       	mov	r31, r0
 8ae:	c0 92 00 01 	sts	0x0100, r12
 8b2:	d0 92 01 01 	sts	0x0101, r13
 8b6:	e0 92 02 01 	sts	0x0102, r14
 8ba:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 8be:	c0 92 05 01 	sts	0x0105, r12
 8c2:	d0 92 06 01 	sts	0x0106, r13
 8c6:	e0 92 07 01 	sts	0x0107, r14
 8ca:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;	
		}
		while(global_g == 1)
		{
			TimerSet(200);
			TimerOn();
 8ce:	43 dc       	rcall	.-1914   	; 0x156 <TimerOn>
			ButtonPress();
 8d0:	e9 dc       	rcall	.-1582   	; 0x2a4 <ButtonPress>
			while(!TimerFlag);
 8d2:	80 91 09 01 	lds	r24, 0x0109
 8d6:	88 23       	and	r24, r24
 8d8:	e1 f3       	breq	.-8      	; 0x8d2 <main+0x98>
			TimerFlag = 0;
 8da:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
 8de:	80 91 04 01 	lds	r24, 0x0104
 8e2:	81 30       	cpi	r24, 0x01	; 1
 8e4:	21 f3       	breq	.-56     	; 0x8ae <main+0x74>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
 8e6:	80 91 04 01 	lds	r24, 0x0104
 8ea:	82 30       	cpi	r24, 0x02	; 2
 8ec:	21 f5       	brne	.+72     	; 0x936 <main+0xfc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 8ee:	0f 2e       	mov	r0, r31
 8f0:	f8 ee       	ldi	r31, 0xE8	; 232
 8f2:	cf 2e       	mov	r12, r31
 8f4:	f3 e0       	ldi	r31, 0x03	; 3
 8f6:	df 2e       	mov	r13, r31
 8f8:	e1 2c       	mov	r14, r1
 8fa:	f1 2c       	mov	r15, r1
 8fc:	f0 2d       	mov	r31, r0
 8fe:	c0 92 00 01 	sts	0x0100, r12
 902:	d0 92 01 01 	sts	0x0101, r13
 906:	e0 92 02 01 	sts	0x0102, r14
 90a:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 90e:	c0 92 05 01 	sts	0x0105, r12
 912:	d0 92 06 01 	sts	0x0106, r13
 916:	e0 92 07 01 	sts	0x0107, r14
 91a:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 2)
		{
			TimerSet(1000);
			TimerOn();
 91e:	1b dc       	rcall	.-1994   	; 0x156 <TimerOn>
			TickFct_Machine2();
 920:	4e dd       	rcall	.-1380   	; 0x3be <TickFct_Machine2>
			while(!TimerFlag);
 922:	80 91 09 01 	lds	r24, 0x0109
 926:	88 23       	and	r24, r24
 928:	e1 f3       	breq	.-8      	; 0x922 <main+0xe8>
			TimerFlag = 0;
 92a:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
 92e:	80 91 04 01 	lds	r24, 0x0104
 932:	82 30       	cpi	r24, 0x02	; 2
 934:	21 f3       	breq	.-56     	; 0x8fe <main+0xc4>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
 936:	80 91 04 01 	lds	r24, 0x0104
 93a:	83 30       	cpi	r24, 0x03	; 3
 93c:	21 f5       	brne	.+72     	; 0x986 <main+0x14c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 93e:	0f 2e       	mov	r0, r31
 940:	f0 e9       	ldi	r31, 0x90	; 144
 942:	cf 2e       	mov	r12, r31
 944:	dd 24       	eor	r13, r13
 946:	d3 94       	inc	r13
 948:	e1 2c       	mov	r14, r1
 94a:	f1 2c       	mov	r15, r1
 94c:	f0 2d       	mov	r31, r0
 94e:	c0 92 00 01 	sts	0x0100, r12
 952:	d0 92 01 01 	sts	0x0101, r13
 956:	e0 92 02 01 	sts	0x0102, r14
 95a:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 95e:	c0 92 05 01 	sts	0x0105, r12
 962:	d0 92 06 01 	sts	0x0106, r13
 966:	e0 92 07 01 	sts	0x0107, r14
 96a:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 3)
		{
			TimerSet(400);
			TimerOn();
 96e:	f3 db       	rcall	.-2074   	; 0x156 <TimerOn>
			ButtonPress2();
 970:	78 dd       	rcall	.-1296   	; 0x462 <ButtonPress2>
			while(!TimerFlag);
 972:	80 91 09 01 	lds	r24, 0x0109
 976:	88 23       	and	r24, r24
 978:	e1 f3       	breq	.-8      	; 0x972 <main+0x138>
			TimerFlag = 0;
 97a:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
 97e:	80 91 04 01 	lds	r24, 0x0104
 982:	83 30       	cpi	r24, 0x03	; 3
 984:	21 f3       	breq	.-56     	; 0x94e <main+0x114>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
 986:	80 91 04 01 	lds	r24, 0x0104
 98a:	84 30       	cpi	r24, 0x04	; 4
 98c:	21 f5       	brne	.+72     	; 0x9d6 <main+0x19c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 98e:	0f 2e       	mov	r0, r31
 990:	f8 ee       	ldi	r31, 0xE8	; 232
 992:	cf 2e       	mov	r12, r31
 994:	f3 e0       	ldi	r31, 0x03	; 3
 996:	df 2e       	mov	r13, r31
 998:	e1 2c       	mov	r14, r1
 99a:	f1 2c       	mov	r15, r1
 99c:	f0 2d       	mov	r31, r0
 99e:	c0 92 00 01 	sts	0x0100, r12
 9a2:	d0 92 01 01 	sts	0x0101, r13
 9a6:	e0 92 02 01 	sts	0x0102, r14
 9aa:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 9ae:	c0 92 05 01 	sts	0x0105, r12
 9b2:	d0 92 06 01 	sts	0x0106, r13
 9b6:	e0 92 07 01 	sts	0x0107, r14
 9ba:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 4)
		{
			TimerSet(1000);
			TimerOn();
 9be:	cb db       	rcall	.-2154   	; 0x156 <TimerOn>
			TickFct_Machine3();
 9c0:	ef dd       	rcall	.-1058   	; 0x5a0 <TickFct_Machine3>
			while(!TimerFlag);
 9c2:	80 91 09 01 	lds	r24, 0x0109
 9c6:	88 23       	and	r24, r24
 9c8:	e1 f3       	breq	.-8      	; 0x9c2 <main+0x188>
			TimerFlag = 0;
 9ca:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
 9ce:	80 91 04 01 	lds	r24, 0x0104
 9d2:	84 30       	cpi	r24, 0x04	; 4
 9d4:	21 f3       	breq	.-56     	; 0x99e <main+0x164>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
 9d6:	80 91 04 01 	lds	r24, 0x0104
 9da:	85 30       	cpi	r24, 0x05	; 5
 9dc:	21 f5       	brne	.+72     	; 0xa26 <main+0x1ec>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 9de:	0f 2e       	mov	r0, r31
 9e0:	f0 e9       	ldi	r31, 0x90	; 144
 9e2:	cf 2e       	mov	r12, r31
 9e4:	dd 24       	eor	r13, r13
 9e6:	d3 94       	inc	r13
 9e8:	e1 2c       	mov	r14, r1
 9ea:	f1 2c       	mov	r15, r1
 9ec:	f0 2d       	mov	r31, r0
 9ee:	c0 92 00 01 	sts	0x0100, r12
 9f2:	d0 92 01 01 	sts	0x0101, r13
 9f6:	e0 92 02 01 	sts	0x0102, r14
 9fa:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 9fe:	c0 92 05 01 	sts	0x0105, r12
 a02:	d0 92 06 01 	sts	0x0106, r13
 a06:	e0 92 07 01 	sts	0x0107, r14
 a0a:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 5)
		{
			TimerSet(400);
			TimerOn();
 a0e:	a3 db       	rcall	.-2234   	; 0x156 <TimerOn>
			ButtonPress3();
 a10:	2e de       	rcall	.-932    	; 0x66e <ButtonPress3>
			while(!TimerFlag);
 a12:	80 91 09 01 	lds	r24, 0x0109
 a16:	88 23       	and	r24, r24
 a18:	e1 f3       	breq	.-8      	; 0xa12 <main+0x1d8>
			TimerFlag = 0;
 a1a:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
 a1e:	80 91 04 01 	lds	r24, 0x0104
 a22:	85 30       	cpi	r24, 0x05	; 5
 a24:	21 f3       	breq	.-56     	; 0x9ee <main+0x1b4>
			TimerFlag = 0;
		}
	}
	return 0;
		
 a26:	80 e0       	ldi	r24, 0x00	; 0
 a28:	90 e0       	ldi	r25, 0x00	; 0
 a2a:	ff 90       	pop	r15
 a2c:	ef 90       	pop	r14
 a2e:	df 90       	pop	r13
 a30:	cf 90       	pop	r12
 a32:	08 95       	ret

00000a34 <__tablejump2__>:
 a34:	ee 0f       	add	r30, r30
 a36:	ff 1f       	adc	r31, r31

00000a38 <__tablejump__>:
 a38:	05 90       	lpm	r0, Z+
 a3a:	f4 91       	lpm	r31, Z
 a3c:	e0 2d       	mov	r30, r0
 a3e:	09 94       	ijmp

00000a40 <_exit>:
 a40:	f8 94       	cli

00000a42 <__stop_program>:
 a42:	ff cf       	rjmp	.-2      	; 0xa42 <__stop_program>
