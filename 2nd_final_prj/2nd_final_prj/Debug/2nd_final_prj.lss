
2nd_final_prj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00001c20  00001cb4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c20  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800112  00800112  00001cc6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001cc6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00001cf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000103e  00000000  00000000  00001dde  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000269  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001bd1  00000000  00000000  00003085  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000210  00000000  00000000  00004c58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000083a  00000000  00000000  00004e68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000628  00000000  00000000  000056a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00005cca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	04 c1       	rjmp	.+520    	; 0x20a <__ctors_end>
       2:	00 00       	nop
       4:	21 c1       	rjmp	.+578    	; 0x248 <__bad_interrupt>
       6:	00 00       	nop
       8:	1f c1       	rjmp	.+574    	; 0x248 <__bad_interrupt>
       a:	00 00       	nop
       c:	1d c1       	rjmp	.+570    	; 0x248 <__bad_interrupt>
       e:	00 00       	nop
      10:	1b c1       	rjmp	.+566    	; 0x248 <__bad_interrupt>
      12:	00 00       	nop
      14:	19 c1       	rjmp	.+562    	; 0x248 <__bad_interrupt>
      16:	00 00       	nop
      18:	17 c1       	rjmp	.+558    	; 0x248 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	15 c1       	rjmp	.+554    	; 0x248 <__bad_interrupt>
      1e:	00 00       	nop
      20:	13 c1       	rjmp	.+550    	; 0x248 <__bad_interrupt>
      22:	00 00       	nop
      24:	11 c1       	rjmp	.+546    	; 0x248 <__bad_interrupt>
      26:	00 00       	nop
      28:	0f c1       	rjmp	.+542    	; 0x248 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0d c1       	rjmp	.+538    	; 0x248 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0b c1       	rjmp	.+534    	; 0x248 <__bad_interrupt>
      32:	00 00       	nop
      34:	8b c1       	rjmp	.+790    	; 0x34c <__vector_13>
      36:	00 00       	nop
      38:	07 c1       	rjmp	.+526    	; 0x248 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	05 c1       	rjmp	.+522    	; 0x248 <__bad_interrupt>
      3e:	00 00       	nop
      40:	03 c1       	rjmp	.+518    	; 0x248 <__bad_interrupt>
      42:	00 00       	nop
      44:	01 c1       	rjmp	.+514    	; 0x248 <__bad_interrupt>
      46:	00 00       	nop
      48:	ff c0       	rjmp	.+510    	; 0x248 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fd c0       	rjmp	.+506    	; 0x248 <__bad_interrupt>
      4e:	00 00       	nop
      50:	fb c0       	rjmp	.+502    	; 0x248 <__bad_interrupt>
      52:	00 00       	nop
      54:	f9 c0       	rjmp	.+498    	; 0x248 <__bad_interrupt>
      56:	00 00       	nop
      58:	f7 c0       	rjmp	.+494    	; 0x248 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f5 c0       	rjmp	.+490    	; 0x248 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f3 c0       	rjmp	.+486    	; 0x248 <__bad_interrupt>
      62:	00 00       	nop
      64:	f1 c0       	rjmp	.+482    	; 0x248 <__bad_interrupt>
      66:	00 00       	nop
      68:	ef c0       	rjmp	.+478    	; 0x248 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ed c0       	rjmp	.+474    	; 0x248 <__bad_interrupt>
      6e:	00 00       	nop
      70:	eb c0       	rjmp	.+470    	; 0x248 <__bad_interrupt>
      72:	00 00       	nop
      74:	e9 c0       	rjmp	.+466    	; 0x248 <__bad_interrupt>
      76:	00 00       	nop
      78:	e7 c0       	rjmp	.+462    	; 0x248 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e5 c0       	rjmp	.+458    	; 0x248 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e3 c0       	rjmp	.+454    	; 0x248 <__bad_interrupt>
      82:	00 00       	nop
      84:	e1 c0       	rjmp	.+450    	; 0x248 <__bad_interrupt>
      86:	00 00       	nop
      88:	df c0       	rjmp	.+446    	; 0x248 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	63 03       	mulsu	r22, r19
      8e:	73 03       	mulsu	r23, r19
      90:	77 03       	mulsu	r23, r23
      92:	7b 03       	fmul	r23, r19
      94:	7f 03       	fmul	r23, r23
      96:	83 03       	fmuls	r16, r19
      98:	87 03       	fmuls	r16, r23
      9a:	98 03       	fmulsu	r17, r16
      9c:	9a 03       	fmulsu	r17, r18
      9e:	9d 03       	fmulsu	r17, r21
      a0:	a0 03       	fmuls	r18, r16
      a2:	a3 03       	fmuls	r18, r19
      a4:	a6 03       	fmuls	r18, r22
      a6:	a9 03       	fmulsu	r18, r17
      a8:	b8 03       	fmulsu	r19, r16
      aa:	d7 03       	fmuls	r21, r23
      ac:	f6 03       	fmuls	r23, r22
      ae:	15 04       	cpc	r1, r5
      b0:	34 04       	cpc	r3, r4
      b2:	53 04       	cpc	r5, r3
      b4:	72 04       	cpc	r7, r2
      b6:	8f 04       	cpc	r8, r15
      b8:	96 04       	cpc	r9, r6
      ba:	9d 04       	cpc	r9, r13
      bc:	a4 04       	cpc	r10, r4
      be:	ab 04       	cpc	r10, r11
      c0:	b2 04       	cpc	r11, r2
      c2:	88 04       	cpc	r8, r8
      c4:	b9 04       	cpc	r11, r9
      c6:	ce 04       	cpc	r12, r14
      c8:	da 04       	cpc	r13, r10
      ca:	de 04       	cpc	r13, r14
      cc:	e2 04       	cpc	r14, r2
      ce:	e6 04       	cpc	r14, r6
      d0:	ea 04       	cpc	r14, r10
      d2:	ee 04       	cpc	r14, r14
      d4:	f2 04       	cpc	r15, r2
      d6:	f6 04       	cpc	r15, r6
      d8:	fa 04       	cpc	r15, r10
      da:	07 05       	cpc	r16, r7
      dc:	09 05       	cpc	r16, r9
      de:	0c 05       	cpc	r16, r12
      e0:	0f 05       	cpc	r16, r15
      e2:	12 05       	cpc	r17, r2
      e4:	15 05       	cpc	r17, r5
      e6:	18 05       	cpc	r17, r8
      e8:	1b 05       	cpc	r17, r11
      ea:	1e 05       	cpc	r17, r14
      ec:	21 05       	cpc	r18, r1
      ee:	33 05       	cpc	r19, r3
      f0:	60 05       	cpc	r22, r0
      f2:	7f 05       	cpc	r23, r15
      f4:	9e 05       	cpc	r25, r14
      f6:	bd 05       	cpc	r27, r13
      f8:	dc 05       	cpc	r29, r12
      fa:	fb 05       	cpc	r31, r11
      fc:	1a 06       	cpc	r1, r26
      fe:	39 06       	cpc	r3, r25
     100:	58 06       	cpc	r5, r24
     102:	58 05       	cpc	r21, r8
     104:	71 06       	cpc	r7, r17
     106:	78 06       	cpc	r7, r24
     108:	7f 06       	cpc	r7, r31
     10a:	86 06       	cpc	r8, r22
     10c:	8d 06       	cpc	r8, r29
     10e:	94 06       	cpc	r9, r20
     110:	9b 06       	cpc	r9, r27
     112:	a2 06       	cpc	r10, r18
     114:	a9 06       	cpc	r10, r25
     116:	6a 06       	cpc	r6, r26
     118:	b0 06       	cpc	r11, r16
     11a:	c5 06       	cpc	r12, r21
     11c:	d2 06       	cpc	r13, r18
     11e:	d6 06       	cpc	r13, r22
     120:	da 06       	cpc	r13, r26
     122:	de 06       	cpc	r13, r30
     124:	e2 06       	cpc	r14, r18
     126:	e6 06       	cpc	r14, r22
     128:	ea 06       	cpc	r14, r26
     12a:	ee 06       	cpc	r14, r30
     12c:	f2 06       	cpc	r15, r18
     12e:	f6 06       	cpc	r15, r22
     130:	fa 06       	cpc	r15, r26
     132:	fe 06       	cpc	r15, r30
     134:	0a 07       	cpc	r16, r26
     136:	0c 07       	cpc	r16, r28
     138:	0f 07       	cpc	r16, r31
     13a:	12 07       	cpc	r17, r18
     13c:	15 07       	cpc	r17, r21
     13e:	18 07       	cpc	r17, r24
     140:	1b 07       	cpc	r17, r27
     142:	1e 07       	cpc	r17, r30
     144:	21 07       	cpc	r18, r17
     146:	24 07       	cpc	r18, r20
     148:	27 07       	cpc	r18, r23
     14a:	2a 07       	cpc	r18, r26
     14c:	2d 07       	cpc	r18, r29
     14e:	3e 07       	cpc	r19, r30
     150:	63 07       	cpc	r22, r19
     152:	82 07       	cpc	r24, r18
     154:	a1 07       	cpc	r26, r17
     156:	c0 07       	cpc	r28, r16
     158:	df 07       	cpc	r29, r31
     15a:	fe 07       	cpc	r31, r30
     15c:	1d 08       	sbc	r1, r13
     15e:	3c 08       	sbc	r3, r12
     160:	5b 08       	sbc	r5, r11
     162:	7a 08       	sbc	r7, r10
     164:	99 08       	sbc	r9, r9
     166:	b8 08       	sbc	r11, r8
     168:	be 08       	sbc	r11, r14
     16a:	d9 08       	sbc	r13, r9
     16c:	e0 08       	sbc	r14, r0
     16e:	e7 08       	sbc	r14, r7
     170:	ee 08       	sbc	r14, r14
     172:	f5 08       	sbc	r15, r5
     174:	fc 08       	sbc	r15, r12
     176:	03 09       	sbc	r16, r3
     178:	0a 09       	sbc	r16, r10
     17a:	11 09       	sbc	r17, r1
     17c:	18 09       	sbc	r17, r8
     17e:	1f 09       	sbc	r17, r15
     180:	26 09       	sbc	r18, r6
     182:	d2 08       	sbc	r13, r2
     184:	2d 09       	sbc	r18, r13
     186:	42 09       	sbc	r20, r2
     188:	4f 09       	sbc	r20, r15
     18a:	53 09       	sbc	r21, r3
     18c:	57 09       	sbc	r21, r7
     18e:	5b 09       	sbc	r21, r11
     190:	5f 09       	sbc	r21, r15
     192:	63 09       	sbc	r22, r3
     194:	67 09       	sbc	r22, r7
     196:	6b 09       	sbc	r22, r11
     198:	6f 09       	sbc	r22, r15
     19a:	73 09       	sbc	r23, r3
     19c:	77 09       	sbc	r23, r7
     19e:	7b 09       	sbc	r23, r11
     1a0:	7f 09       	sbc	r23, r15
     1a2:	83 09       	sbc	r24, r3
     1a4:	87 09       	sbc	r24, r7
     1a6:	93 09       	sbc	r25, r3
     1a8:	95 09       	sbc	r25, r5
     1aa:	98 09       	sbc	r25, r8
     1ac:	9b 09       	sbc	r25, r11
     1ae:	9e 09       	sbc	r25, r14
     1b0:	a1 09       	sbc	r26, r1
     1b2:	a4 09       	sbc	r26, r4
     1b4:	a7 09       	sbc	r26, r7
     1b6:	aa 09       	sbc	r26, r10
     1b8:	ad 09       	sbc	r26, r13
     1ba:	b0 09       	sbc	r27, r0
     1bc:	b3 09       	sbc	r27, r3
     1be:	b6 09       	sbc	r27, r6
     1c0:	b9 09       	sbc	r27, r9
     1c2:	bc 09       	sbc	r27, r12
     1c4:	bf 09       	sbc	r27, r15
     1c6:	d0 09       	sbc	r29, r0
     1c8:	f5 09       	sbc	r31, r5
     1ca:	14 0a       	sbc	r1, r20
     1cc:	33 0a       	sbc	r3, r19
     1ce:	52 0a       	sbc	r5, r18
     1d0:	71 0a       	sbc	r7, r17
     1d2:	90 0a       	sbc	r9, r16
     1d4:	af 0a       	sbc	r10, r31
     1d6:	ce 0a       	sbc	r12, r30
     1d8:	ed 0a       	sbc	r14, r29
     1da:	0c 0b       	sbc	r16, r28
     1dc:	2b 0b       	sbc	r18, r27
     1de:	4a 0b       	sbc	r20, r26
     1e0:	69 0b       	sbc	r22, r25
     1e2:	88 0b       	sbc	r24, r24
     1e4:	a7 0b       	sbc	r26, r23
     1e6:	ad 0b       	sbc	r26, r29
     1e8:	ca 0b       	sbc	r28, r26
     1ea:	d3 0b       	sbc	r29, r19
     1ec:	dc 0b       	sbc	r29, r28
     1ee:	e5 0b       	sbc	r30, r21
     1f0:	ee 0b       	sbc	r30, r30
     1f2:	f7 0b       	sbc	r31, r23
     1f4:	00 0c       	add	r0, r0
     1f6:	09 0c       	add	r0, r9
     1f8:	12 0c       	add	r1, r2
     1fa:	1b 0c       	add	r1, r11
     1fc:	24 0c       	add	r2, r4
     1fe:	2d 0c       	add	r2, r13
     200:	36 0c       	add	r3, r6
     202:	3f 0c       	add	r3, r15
     204:	48 0c       	add	r4, r8
     206:	c1 0b       	sbc	r28, r17
     208:	51 0c       	add	r5, r1

0000020a <__ctors_end>:
     20a:	11 24       	eor	r1, r1
     20c:	1f be       	out	0x3f, r1	; 63
     20e:	cf ef       	ldi	r28, 0xFF	; 255
     210:	d0 e4       	ldi	r29, 0x40	; 64
     212:	de bf       	out	0x3e, r29	; 62
     214:	cd bf       	out	0x3d, r28	; 61

00000216 <__do_copy_data>:
     216:	11 e0       	ldi	r17, 0x01	; 1
     218:	a0 e0       	ldi	r26, 0x00	; 0
     21a:	b1 e0       	ldi	r27, 0x01	; 1
     21c:	e0 e2       	ldi	r30, 0x20	; 32
     21e:	fc e1       	ldi	r31, 0x1C	; 28
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0b bf       	out	0x3b, r16	; 59
     224:	02 c0       	rjmp	.+4      	; 0x22a <__do_copy_data+0x14>
     226:	07 90       	elpm	r0, Z+
     228:	0d 92       	st	X+, r0
     22a:	a2 31       	cpi	r26, 0x12	; 18
     22c:	b1 07       	cpc	r27, r17
     22e:	d9 f7       	brne	.-10     	; 0x226 <__do_copy_data+0x10>

00000230 <__do_clear_bss>:
     230:	21 e0       	ldi	r18, 0x01	; 1
     232:	a2 e1       	ldi	r26, 0x12	; 18
     234:	b1 e0       	ldi	r27, 0x01	; 1
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	a4 32       	cpi	r26, 0x24	; 36
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <main>
     244:	0c 94 0e 0e 	jmp	0x1c1c	; 0x1c1c <_exit>

00000248 <__bad_interrupt>:
     248:	db ce       	rjmp	.-586    	; 0x0 <__vectors>

0000024a <delay_ms>:
	else {
		data = simon_SevenSeg(0);
	}
	transmit_data(data);
	PORTD = (PORTD & 0xF8) | 0x01;
}
     24a:	18 16       	cp	r1, r24
     24c:	19 06       	cpc	r1, r25
     24e:	9c f4       	brge	.+38     	; 0x276 <delay_ms+0x2c>
     250:	40 e0       	ldi	r20, 0x00	; 0
     252:	50 e0       	ldi	r21, 0x00	; 0
     254:	77 e0       	ldi	r23, 0x07	; 7
     256:	63 e0       	ldi	r22, 0x03	; 3
     258:	0b c0       	rjmp	.+22     	; 0x270 <delay_ms+0x26>
     25a:	00 00       	nop
     25c:	21 50       	subi	r18, 0x01	; 1
     25e:	31 09       	sbc	r19, r1
     260:	21 15       	cp	r18, r1
     262:	31 05       	cpc	r19, r1
     264:	d1 f7       	brne	.-12     	; 0x25a <delay_ms+0x10>
     266:	4f 5f       	subi	r20, 0xFF	; 255
     268:	5f 4f       	sbci	r21, 0xFF	; 255
     26a:	48 17       	cp	r20, r24
     26c:	59 07       	cpc	r21, r25
     26e:	19 f0       	breq	.+6      	; 0x276 <delay_ms+0x2c>
     270:	27 2f       	mov	r18, r23
     272:	36 2f       	mov	r19, r22
     274:	f2 cf       	rjmp	.-28     	; 0x25a <delay_ms+0x10>
     276:	08 95       	ret

00000278 <LCD_WriteCommand>:
     278:	5e 98       	cbi	0x0b, 6	; 11
     27a:	88 b9       	out	0x08, r24	; 8
     27c:	5f 9a       	sbi	0x0b, 7	; 11
     27e:	00 00       	nop
     280:	5f 98       	cbi	0x0b, 7	; 11
     282:	82 e0       	ldi	r24, 0x02	; 2
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	e1 cf       	rjmp	.-62     	; 0x24a <delay_ms>
     288:	08 95       	ret

0000028a <LCD_ClearScreen>:
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	f5 cf       	rjmp	.-22     	; 0x278 <LCD_WriteCommand>
     28e:	08 95       	ret

00000290 <LCD_Cursor>:
     290:	81 31       	cpi	r24, 0x11	; 17
     292:	18 f4       	brcc	.+6      	; 0x29a <LCD_Cursor+0xa>
     294:	81 58       	subi	r24, 0x81	; 129
     296:	f0 cf       	rjmp	.-32     	; 0x278 <LCD_WriteCommand>
     298:	08 95       	ret
     29a:	81 55       	subi	r24, 0x51	; 81
     29c:	ed cf       	rjmp	.-38     	; 0x278 <LCD_WriteCommand>
     29e:	08 95       	ret

000002a0 <LCD_init>:
     2a0:	84 e6       	ldi	r24, 0x64	; 100
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	d2 df       	rcall	.-92     	; 0x24a <delay_ms>
     2a6:	88 e3       	ldi	r24, 0x38	; 56
     2a8:	e7 df       	rcall	.-50     	; 0x278 <LCD_WriteCommand>
     2aa:	86 e0       	ldi	r24, 0x06	; 6
     2ac:	e5 df       	rcall	.-54     	; 0x278 <LCD_WriteCommand>
     2ae:	8f e0       	ldi	r24, 0x0F	; 15
     2b0:	e3 df       	rcall	.-58     	; 0x278 <LCD_WriteCommand>
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	e1 df       	rcall	.-62     	; 0x278 <LCD_WriteCommand>
     2b6:	8a e0       	ldi	r24, 0x0A	; 10
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	c7 cf       	rjmp	.-114    	; 0x24a <delay_ms>
     2bc:	08 95       	ret

000002be <LCD_WriteData>:
     2be:	5e 9a       	sbi	0x0b, 6	; 11
     2c0:	88 b9       	out	0x08, r24	; 8
     2c2:	5f 9a       	sbi	0x0b, 7	; 11
     2c4:	00 00       	nop
     2c6:	5f 98       	cbi	0x0b, 7	; 11
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	be cf       	rjmp	.-132    	; 0x24a <delay_ms>
     2ce:	08 95       	ret

000002d0 <LCD_DisplayString>:
     2d0:	0f 93       	push	r16
     2d2:	1f 93       	push	r17
     2d4:	cf 93       	push	r28
     2d6:	df 93       	push	r29
     2d8:	18 2f       	mov	r17, r24
     2da:	eb 01       	movw	r28, r22
     2dc:	d6 df       	rcall	.-84     	; 0x28a <LCD_ClearScreen>
     2de:	88 81       	ld	r24, Y
     2e0:	88 23       	and	r24, r24
     2e2:	59 f0       	breq	.+22     	; 0x2fa <LCD_DisplayString+0x2a>
     2e4:	01 e0       	ldi	r16, 0x01	; 1
     2e6:	01 0f       	add	r16, r17
     2e8:	81 2f       	mov	r24, r17
     2ea:	d2 df       	rcall	.-92     	; 0x290 <LCD_Cursor>
     2ec:	89 91       	ld	r24, Y+
     2ee:	e7 df       	rcall	.-50     	; 0x2be <LCD_WriteData>
     2f0:	88 81       	ld	r24, Y
     2f2:	88 23       	and	r24, r24
     2f4:	11 f0       	breq	.+4      	; 0x2fa <LCD_DisplayString+0x2a>
     2f6:	10 2f       	mov	r17, r16
     2f8:	f5 cf       	rjmp	.-22     	; 0x2e4 <LCD_DisplayString+0x14>
     2fa:	df 91       	pop	r29
     2fc:	cf 91       	pop	r28
     2fe:	1f 91       	pop	r17
     300:	0f 91       	pop	r16
     302:	08 95       	ret

00000304 <TimerOn>:
     304:	8b e0       	ldi	r24, 0x0B	; 11
     306:	80 93 81 00 	sts	0x0081, r24
     30a:	8d e7       	ldi	r24, 0x7D	; 125
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	90 93 89 00 	sts	0x0089, r25
     312:	80 93 88 00 	sts	0x0088, r24
     316:	82 e0       	ldi	r24, 0x02	; 2
     318:	80 93 6f 00 	sts	0x006F, r24
     31c:	10 92 85 00 	sts	0x0085, r1
     320:	10 92 84 00 	sts	0x0084, r1
     324:	80 91 01 01 	lds	r24, 0x0101
     328:	90 91 02 01 	lds	r25, 0x0102
     32c:	a0 91 03 01 	lds	r26, 0x0103
     330:	b0 91 04 01 	lds	r27, 0x0104
     334:	80 93 13 01 	sts	0x0113, r24
     338:	90 93 14 01 	sts	0x0114, r25
     33c:	a0 93 15 01 	sts	0x0115, r26
     340:	b0 93 16 01 	sts	0x0116, r27
     344:	8f b7       	in	r24, 0x3f	; 63
     346:	80 68       	ori	r24, 0x80	; 128
     348:	8f bf       	out	0x3f, r24	; 63
     34a:	08 95       	ret

0000034c <__vector_13>:
     34c:	1f 92       	push	r1
     34e:	0f 92       	push	r0
     350:	0f b6       	in	r0, 0x3f	; 63
     352:	0f 92       	push	r0
     354:	11 24       	eor	r1, r1
     356:	8f 93       	push	r24
     358:	9f 93       	push	r25
     35a:	af 93       	push	r26
     35c:	bf 93       	push	r27
     35e:	80 91 13 01 	lds	r24, 0x0113
     362:	90 91 14 01 	lds	r25, 0x0114
     366:	a0 91 15 01 	lds	r26, 0x0115
     36a:	b0 91 16 01 	lds	r27, 0x0116
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	a1 09       	sbc	r26, r1
     372:	b1 09       	sbc	r27, r1
     374:	80 93 13 01 	sts	0x0113, r24
     378:	90 93 14 01 	sts	0x0114, r25
     37c:	a0 93 15 01 	sts	0x0115, r26
     380:	b0 93 16 01 	sts	0x0116, r27
     384:	89 2b       	or	r24, r25
     386:	8a 2b       	or	r24, r26
     388:	8b 2b       	or	r24, r27
     38a:	99 f4       	brne	.+38     	; 0x3b2 <__vector_13+0x66>
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	80 93 17 01 	sts	0x0117, r24
     392:	80 91 01 01 	lds	r24, 0x0101
     396:	90 91 02 01 	lds	r25, 0x0102
     39a:	a0 91 03 01 	lds	r26, 0x0103
     39e:	b0 91 04 01 	lds	r27, 0x0104
     3a2:	80 93 13 01 	sts	0x0113, r24
     3a6:	90 93 14 01 	sts	0x0114, r25
     3aa:	a0 93 15 01 	sts	0x0115, r26
     3ae:	b0 93 16 01 	sts	0x0116, r27
     3b2:	bf 91       	pop	r27
     3b4:	af 91       	pop	r26
     3b6:	9f 91       	pop	r25
     3b8:	8f 91       	pop	r24
     3ba:	0f 90       	pop	r0
     3bc:	0f be       	out	0x3f, r0	; 63
     3be:	0f 90       	pop	r0
     3c0:	1f 90       	pop	r1
     3c2:	18 95       	reti

000003c4 <transmit_data>:
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	4b b1       	in	r20, 0x0b	; 11
     3cc:	40 7f       	andi	r20, 0xF0	; 240
     3ce:	48 60       	ori	r20, 0x08	; 8
     3d0:	4b b9       	out	0x0b, r20	; 11
     3d2:	6b b1       	in	r22, 0x0b	; 11
     3d4:	ac 01       	movw	r20, r24
     3d6:	02 2e       	mov	r0, r18
     3d8:	02 c0       	rjmp	.+4      	; 0x3de <transmit_data+0x1a>
     3da:	55 95       	asr	r21
     3dc:	47 95       	ror	r20
     3de:	0a 94       	dec	r0
     3e0:	e2 f7       	brpl	.-8      	; 0x3da <transmit_data+0x16>
     3e2:	41 70       	andi	r20, 0x01	; 1
     3e4:	46 2b       	or	r20, r22
     3e6:	4b b9       	out	0x0b, r20	; 11
     3e8:	59 9a       	sbi	0x0b, 1	; 11
     3ea:	2f 5f       	subi	r18, 0xFF	; 255
     3ec:	3f 4f       	sbci	r19, 0xFF	; 255
     3ee:	28 30       	cpi	r18, 0x08	; 8
     3f0:	31 05       	cpc	r19, r1
     3f2:	59 f7       	brne	.-42     	; 0x3ca <transmit_data+0x6>
     3f4:	5a 9a       	sbi	0x0b, 2	; 11
     3f6:	8b b1       	in	r24, 0x0b	; 11
     3f8:	80 7f       	andi	r24, 0xF0	; 240
     3fa:	8b b9       	out	0x0b, r24	; 11
     3fc:	08 95       	ret

000003fe <simon_SevenSeg>:
     3fe:	89 30       	cpi	r24, 0x09	; 9
     400:	a1 f0       	breq	.+40     	; 0x42a <simon_SevenSeg+0x2c>
     402:	88 30       	cpi	r24, 0x08	; 8
     404:	a1 f0       	breq	.+40     	; 0x42e <simon_SevenSeg+0x30>
     406:	87 30       	cpi	r24, 0x07	; 7
     408:	a1 f0       	breq	.+40     	; 0x432 <simon_SevenSeg+0x34>
     40a:	86 30       	cpi	r24, 0x06	; 6
     40c:	a1 f0       	breq	.+40     	; 0x436 <simon_SevenSeg+0x38>
     40e:	85 30       	cpi	r24, 0x05	; 5
     410:	a1 f0       	breq	.+40     	; 0x43a <simon_SevenSeg+0x3c>
     412:	84 30       	cpi	r24, 0x04	; 4
     414:	a1 f0       	breq	.+40     	; 0x43e <simon_SevenSeg+0x40>
     416:	83 30       	cpi	r24, 0x03	; 3
     418:	a1 f0       	breq	.+40     	; 0x442 <simon_SevenSeg+0x44>
     41a:	82 30       	cpi	r24, 0x02	; 2
     41c:	a1 f0       	breq	.+40     	; 0x446 <simon_SevenSeg+0x48>
     41e:	81 30       	cpi	r24, 0x01	; 1
     420:	a1 f0       	breq	.+40     	; 0x44a <simon_SevenSeg+0x4c>
     422:	88 23       	and	r24, r24
     424:	a1 f0       	breq	.+40     	; 0x44e <simon_SevenSeg+0x50>
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	08 95       	ret
     42a:	89 e1       	ldi	r24, 0x19	; 25
     42c:	08 95       	ret
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	08 95       	ret
     432:	8f e1       	ldi	r24, 0x1F	; 31
     434:	08 95       	ret
     436:	80 e4       	ldi	r24, 0x40	; 64
     438:	08 95       	ret
     43a:	88 e4       	ldi	r24, 0x48	; 72
     43c:	08 95       	ret
     43e:	88 e9       	ldi	r24, 0x98	; 152
     440:	08 95       	ret
     442:	8c e0       	ldi	r24, 0x0C	; 12
     444:	08 95       	ret
     446:	84 e2       	ldi	r24, 0x24	; 36
     448:	08 95       	ret
     44a:	8e e9       	ldi	r24, 0x9E	; 158
     44c:	08 95       	ret
     44e:	82 e0       	ldi	r24, 0x02	; 2
     450:	08 95       	ret

00000452 <TickFct_State_machine_1>:
//////////////////////////////////////////7 seg BCD////////////////////////////////////////////////////////////////////////////////////
enum SM1_States { SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;
void TickFct_State_machine_1() 
{
	switch(SM1_State) 
     452:	80 91 1e 01 	lds	r24, 0x011E
     456:	82 30       	cpi	r24, 0x02	; 2
     458:	c9 f0       	breq	.+50     	; 0x48c <TickFct_State_machine_1+0x3a>
     45a:	28 f4       	brcc	.+10     	; 0x466 <TickFct_State_machine_1+0x14>
     45c:	88 23       	and	r24, r24
     45e:	41 f0       	breq	.+16     	; 0x470 <TickFct_State_machine_1+0x1e>
     460:	81 30       	cpi	r24, 0x01	; 1
     462:	81 f0       	breq	.+32     	; 0x484 <TickFct_State_machine_1+0x32>
     464:	20 c0       	rjmp	.+64     	; 0x4a6 <TickFct_State_machine_1+0x54>
     466:	83 30       	cpi	r24, 0x03	; 3
     468:	a9 f0       	breq	.+42     	; 0x494 <TickFct_State_machine_1+0x42>
     46a:	84 30       	cpi	r24, 0x04	; 4
     46c:	b9 f0       	breq	.+46     	; 0x49c <TickFct_State_machine_1+0x4a>
     46e:	1b c0       	rjmp	.+54     	; 0x4a6 <TickFct_State_machine_1+0x54>
	{
		//LCD_ClearScreen();
		//LCD_DisplayString(1, "Level One");
		case SM1_off:
		if(global_g == 0)
     470:	80 91 12 01 	lds	r24, 0x0112
     474:	81 11       	cpse	r24, r1
     476:	26 c0       	rjmp	.+76     	; 0x4c4 <TickFct_State_machine_1+0x72>
		{
			if(~PINB & 0x10)
     478:	1c 99       	sbic	0x03, 4	; 3
     47a:	24 c0       	rjmp	.+72     	; 0x4c4 <TickFct_State_machine_1+0x72>
			{
				SM1_State = SM1_on1;
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	80 93 1e 01 	sts	0x011E, r24
     482:	2b c0       	rjmp	.+86     	; 0x4da <TickFct_State_machine_1+0x88>
				SM1_State = SM1_off;
			}
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
     484:	82 e0       	ldi	r24, 0x02	; 2
     486:	80 93 1e 01 	sts	0x011E, r24
     48a:	2a c0       	rjmp	.+84     	; 0x4e0 <TickFct_State_machine_1+0x8e>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
     48c:	83 e0       	ldi	r24, 0x03	; 3
     48e:	80 93 1e 01 	sts	0x011E, r24
     492:	29 c0       	rjmp	.+82     	; 0x4e6 <TickFct_State_machine_1+0x94>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
     494:	84 e0       	ldi	r24, 0x04	; 4
     496:	80 93 1e 01 	sts	0x011E, r24
     49a:	28 c0       	rjmp	.+80     	; 0x4ec <TickFct_State_machine_1+0x9a>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
     49c:	10 92 1e 01 	sts	0x011E, r1
		global_g = 1;
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	80 93 12 01 	sts	0x0112, r24
	}

	switch(SM1_State) 
     4a6:	80 91 1e 01 	lds	r24, 0x011E
     4aa:	82 30       	cpi	r24, 0x02	; 2
     4ac:	c9 f0       	breq	.+50     	; 0x4e0 <TickFct_State_machine_1+0x8e>
     4ae:	28 f4       	brcc	.+10     	; 0x4ba <TickFct_State_machine_1+0x68>
     4b0:	88 23       	and	r24, r24
     4b2:	41 f0       	breq	.+16     	; 0x4c4 <TickFct_State_machine_1+0x72>
     4b4:	81 30       	cpi	r24, 0x01	; 1
     4b6:	89 f0       	breq	.+34     	; 0x4da <TickFct_State_machine_1+0x88>
     4b8:	08 95       	ret
     4ba:	83 30       	cpi	r24, 0x03	; 3
     4bc:	a1 f0       	breq	.+40     	; 0x4e6 <TickFct_State_machine_1+0x94>
     4be:	84 30       	cpi	r24, 0x04	; 4
     4c0:	b9 f4       	brne	.+46     	; 0x4f0 <TickFct_State_machine_1+0x9e>
     4c2:	14 c0       	rjmp	.+40     	; 0x4ec <TickFct_State_machine_1+0x9a>
	{
		case SM1_off:
		LCD_init();
     4c4:	ed de       	rcall	.-550    	; 0x2a0 <LCD_init>
		LCD_DisplayString(1, "hello world");
     4c6:	65 e0       	ldi	r22, 0x05	; 5
     4c8:	71 e0       	ldi	r23, 0x01	; 1
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	01 df       	rcall	.-510    	; 0x2d0 <LCD_DisplayString>
		PORTA = 0X00;
     4ce:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     4d0:	80 91 00 01 	lds	r24, 0x0100
     4d4:	94 df       	rcall	.-216    	; 0x3fe <simon_SevenSeg>
     4d6:	76 cf       	rjmp	.-276    	; 0x3c4 <transmit_data>
		break;
     4d8:	08 95       	ret
		case SM1_on1:
		PORTA = 0x01;
     4da:	81 e0       	ldi	r24, 0x01	; 1
     4dc:	82 b9       	out	0x02, r24	; 2
		break;
     4de:	08 95       	ret
		case SM1_on2:
		PORTA = 0x02;
     4e0:	82 e0       	ldi	r24, 0x02	; 2
     4e2:	82 b9       	out	0x02, r24	; 2
		break;
     4e4:	08 95       	ret
		case SM1_on3:
		PORTA = 0x04;
     4e6:	84 e0       	ldi	r24, 0x04	; 4
     4e8:	82 b9       	out	0x02, r24	; 2
		break;
     4ea:	08 95       	ret
		case SM1_on4:
		PORTA = 0x08;
     4ec:	88 e0       	ldi	r24, 0x08	; 8
     4ee:	82 b9       	out	0x02, r24	; 2
     4f0:	08 95       	ret

000004f2 <ButtonPress>:
}

enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
     4f2:	80 91 23 01 	lds	r24, 0x0123
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	09 f4       	brne	.+2      	; 0x4fc <ButtonPress+0xa>
     4fa:	52 c0       	rjmp	.+164    	; 0x5a0 <ButtonPress+0xae>
     4fc:	28 f4       	brcc	.+10     	; 0x508 <ButtonPress+0x16>
     4fe:	88 23       	and	r24, r24
     500:	61 f0       	breq	.+24     	; 0x51a <ButtonPress+0x28>
     502:	81 30       	cpi	r24, 0x01	; 1
     504:	71 f1       	breq	.+92     	; 0x562 <ButtonPress+0x70>
     506:	98 c0       	rjmp	.+304    	; 0x638 <ButtonPress+0x146>
     508:	84 30       	cpi	r24, 0x04	; 4
     50a:	09 f4       	brne	.+2      	; 0x50e <ButtonPress+0x1c>
     50c:	87 c0       	rjmp	.+270    	; 0x61c <ButtonPress+0x12a>
     50e:	08 f4       	brcc	.+2      	; 0x512 <ButtonPress+0x20>
     510:	66 c0       	rjmp	.+204    	; 0x5de <ButtonPress+0xec>
     512:	85 30       	cpi	r24, 0x05	; 5
     514:	09 f4       	brne	.+2      	; 0x518 <ButtonPress+0x26>
     516:	88 c0       	rjmp	.+272    	; 0x628 <ButtonPress+0x136>
     518:	8f c0       	rjmp	.+286    	; 0x638 <ButtonPress+0x146>
	{
		case Init:
		if(global_g == 1)
     51a:	80 91 12 01 	lds	r24, 0x0112
     51e:	81 30       	cpi	r24, 0x01	; 1
     520:	09 f0       	breq	.+2      	; 0x524 <ButtonPress+0x32>
     522:	c5 c0       	rjmp	.+394    	; 0x6ae <ButtonPress+0x1bc>
		{
			if(~PINB & 0x01)
     524:	18 99       	sbic	0x03, 0	; 3
     526:	05 c0       	rjmp	.+10     	; 0x532 <ButtonPress+0x40>
			{
				while(~PINB & 0x01){}
     528:	18 9b       	sbis	0x03, 0	; 3
     52a:	fe cf       	rjmp	.-4      	; 0x528 <ButtonPress+0x36>
				Press_States = Press1;	
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	80 93 23 01 	sts	0x0123, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     532:	19 9b       	sbis	0x03, 1	; 3
     534:	04 c0       	rjmp	.+8      	; 0x53e <ButtonPress+0x4c>
     536:	1a 9b       	sbis	0x03, 2	; 3
     538:	02 c0       	rjmp	.+4      	; 0x53e <ButtonPress+0x4c>
     53a:	1b 99       	sbic	0x03, 3	; 3
     53c:	7d c0       	rjmp	.+250    	; 0x638 <ButtonPress+0x146>
			{
				if(lives - 1 > -1)
     53e:	20 91 00 01 	lds	r18, 0x0100
     542:	82 2f       	mov	r24, r18
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	01 97       	sbiw	r24, 0x01	; 1
     548:	99 23       	and	r25, r25
     54a:	24 f0       	brlt	.+8      	; 0x554 <ButtonPress+0x62>
				{
					lives--;
     54c:	21 50       	subi	r18, 0x01	; 1
     54e:	20 93 00 01 	sts	0x0100, r18
     552:	03 c0       	rjmp	.+6      	; 0x55a <ButtonPress+0x68>
				}
				else
				{
					global_g = 20;
     554:	84 e1       	ldi	r24, 0x14	; 20
     556:	80 93 12 01 	sts	0x0112, r24
				}
				Press_States = Error;
     55a:	85 e0       	ldi	r24, 0x05	; 5
     55c:	80 93 23 01 	sts	0x0123, r24
     560:	7b c0       	rjmp	.+246    	; 0x658 <ButtonPress+0x166>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
     562:	19 99       	sbic	0x03, 1	; 3
     564:	05 c0       	rjmp	.+10     	; 0x570 <ButtonPress+0x7e>
		{
			while(~PINB & 0x02){}
     566:	19 9b       	sbis	0x03, 1	; 3
     568:	fe cf       	rjmp	.-4      	; 0x566 <ButtonPress+0x74>
			Press_States = Press2;
     56a:	82 e0       	ldi	r24, 0x02	; 2
     56c:	80 93 23 01 	sts	0x0123, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     570:	18 9b       	sbis	0x03, 0	; 3
     572:	04 c0       	rjmp	.+8      	; 0x57c <ButtonPress+0x8a>
     574:	1a 9b       	sbis	0x03, 2	; 3
     576:	02 c0       	rjmp	.+4      	; 0x57c <ButtonPress+0x8a>
     578:	1b 99       	sbic	0x03, 3	; 3
     57a:	5e c0       	rjmp	.+188    	; 0x638 <ButtonPress+0x146>
		{
			if(lives - 1 > -1)
     57c:	20 91 00 01 	lds	r18, 0x0100
     580:	82 2f       	mov	r24, r18
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	01 97       	sbiw	r24, 0x01	; 1
     586:	99 23       	and	r25, r25
     588:	24 f0       	brlt	.+8      	; 0x592 <ButtonPress+0xa0>
			{
				lives--;
     58a:	21 50       	subi	r18, 0x01	; 1
     58c:	20 93 00 01 	sts	0x0100, r18
     590:	03 c0       	rjmp	.+6      	; 0x598 <ButtonPress+0xa6>
			}
			else
			{
				global_g = 20;
     592:	84 e1       	ldi	r24, 0x14	; 20
     594:	80 93 12 01 	sts	0x0112, r24
			}
			Press_States = Error;
     598:	85 e0       	ldi	r24, 0x05	; 5
     59a:	80 93 23 01 	sts	0x0123, r24
     59e:	5c c0       	rjmp	.+184    	; 0x658 <ButtonPress+0x166>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
     5a0:	1a 99       	sbic	0x03, 2	; 3
     5a2:	05 c0       	rjmp	.+10     	; 0x5ae <ButtonPress+0xbc>
		{
			while(~PINB & 0x04){}
     5a4:	1a 9b       	sbis	0x03, 2	; 3
     5a6:	fe cf       	rjmp	.-4      	; 0x5a4 <ButtonPress+0xb2>
			Press_States = Press3;
     5a8:	83 e0       	ldi	r24, 0x03	; 3
     5aa:	80 93 23 01 	sts	0x0123, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     5ae:	19 9b       	sbis	0x03, 1	; 3
     5b0:	04 c0       	rjmp	.+8      	; 0x5ba <ButtonPress+0xc8>
     5b2:	18 9b       	sbis	0x03, 0	; 3
     5b4:	02 c0       	rjmp	.+4      	; 0x5ba <ButtonPress+0xc8>
     5b6:	1b 99       	sbic	0x03, 3	; 3
     5b8:	3f c0       	rjmp	.+126    	; 0x638 <ButtonPress+0x146>
		{
			if(lives - 1 > -1)
     5ba:	20 91 00 01 	lds	r18, 0x0100
     5be:	82 2f       	mov	r24, r18
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	01 97       	sbiw	r24, 0x01	; 1
     5c4:	99 23       	and	r25, r25
     5c6:	24 f0       	brlt	.+8      	; 0x5d0 <ButtonPress+0xde>
			{
				lives--;
     5c8:	21 50       	subi	r18, 0x01	; 1
     5ca:	20 93 00 01 	sts	0x0100, r18
     5ce:	03 c0       	rjmp	.+6      	; 0x5d6 <ButtonPress+0xe4>
			}
			else
			{
				global_g = 20;
     5d0:	84 e1       	ldi	r24, 0x14	; 20
     5d2:	80 93 12 01 	sts	0x0112, r24
			}
			Press_States = Error;
     5d6:	85 e0       	ldi	r24, 0x05	; 5
     5d8:	80 93 23 01 	sts	0x0123, r24
     5dc:	3d c0       	rjmp	.+122    	; 0x658 <ButtonPress+0x166>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
     5de:	1b 99       	sbic	0x03, 3	; 3
     5e0:	05 c0       	rjmp	.+10     	; 0x5ec <ButtonPress+0xfa>
		{
			while(~PINB & 0x08){}
     5e2:	1b 9b       	sbis	0x03, 3	; 3
     5e4:	fe cf       	rjmp	.-4      	; 0x5e2 <ButtonPress+0xf0>
			Press_States = Press4;
     5e6:	84 e0       	ldi	r24, 0x04	; 4
     5e8:	80 93 23 01 	sts	0x0123, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     5ec:	19 9b       	sbis	0x03, 1	; 3
     5ee:	04 c0       	rjmp	.+8      	; 0x5f8 <ButtonPress+0x106>
     5f0:	1a 9b       	sbis	0x03, 2	; 3
     5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <ButtonPress+0x106>
     5f4:	18 99       	sbic	0x03, 0	; 3
     5f6:	20 c0       	rjmp	.+64     	; 0x638 <ButtonPress+0x146>
		{
			if(lives - 1 > -1)
     5f8:	20 91 00 01 	lds	r18, 0x0100
     5fc:	82 2f       	mov	r24, r18
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	01 97       	sbiw	r24, 0x01	; 1
     602:	99 23       	and	r25, r25
     604:	24 f0       	brlt	.+8      	; 0x60e <ButtonPress+0x11c>
			{
				lives--;
     606:	21 50       	subi	r18, 0x01	; 1
     608:	20 93 00 01 	sts	0x0100, r18
     60c:	03 c0       	rjmp	.+6      	; 0x614 <ButtonPress+0x122>
			}
			else
			{
				global_g = 20;
     60e:	84 e1       	ldi	r24, 0x14	; 20
     610:	80 93 12 01 	sts	0x0112, r24
			}
			Press_States = Error;
     614:	85 e0       	ldi	r24, 0x05	; 5
     616:	80 93 23 01 	sts	0x0123, r24
     61a:	1e c0       	rjmp	.+60     	; 0x658 <ButtonPress+0x166>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
     61c:	1c 99       	sbic	0x03, 4	; 3
     61e:	38 c0       	rjmp	.+112    	; 0x690 <ButtonPress+0x19e>
		{
			Press_States = Off;	
     620:	86 e0       	ldi	r24, 0x06	; 6
     622:	80 93 23 01 	sts	0x0123, r24
     626:	3b c0       	rjmp	.+118    	; 0x69e <ButtonPress+0x1ac>
		}
		break;
		case Error:
		if(~PINB & 0x01)
     628:	18 99       	sbic	0x03, 0	; 3
     62a:	16 c0       	rjmp	.+44     	; 0x658 <ButtonPress+0x166>
		{
			while(~PINB & 0x01){}
     62c:	18 9b       	sbis	0x03, 0	; 3
     62e:	fe cf       	rjmp	.-4      	; 0x62c <ButtonPress+0x13a>
			Press_States = Press1;
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	80 93 23 01 	sts	0x0123, r24
     636:	17 c0       	rjmp	.+46     	; 0x666 <ButtonPress+0x174>
		}
		break;
	}
	switch(Press_States)
     638:	80 91 23 01 	lds	r24, 0x0123
     63c:	83 30       	cpi	r24, 0x03	; 3
     63e:	09 f1       	breq	.+66     	; 0x682 <ButtonPress+0x190>
     640:	28 f4       	brcc	.+10     	; 0x64c <ButtonPress+0x15a>
     642:	81 30       	cpi	r24, 0x01	; 1
     644:	81 f0       	breq	.+32     	; 0x666 <ButtonPress+0x174>
     646:	82 30       	cpi	r24, 0x02	; 2
     648:	a9 f0       	breq	.+42     	; 0x674 <ButtonPress+0x182>
     64a:	08 95       	ret
     64c:	85 30       	cpi	r24, 0x05	; 5
     64e:	21 f0       	breq	.+8      	; 0x658 <ButtonPress+0x166>
     650:	f8 f0       	brcs	.+62     	; 0x690 <ButtonPress+0x19e>
     652:	86 30       	cpi	r24, 0x06	; 6
     654:	21 f1       	breq	.+72     	; 0x69e <ButtonPress+0x1ac>
     656:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
     658:	80 e1       	ldi	r24, 0x10	; 16
     65a:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     65c:	80 91 00 01 	lds	r24, 0x0100
     660:	ce de       	rcall	.-612    	; 0x3fe <simon_SevenSeg>
     662:	b0 ce       	rjmp	.-672    	; 0x3c4 <transmit_data>
		break;
     664:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     66a:	80 91 00 01 	lds	r24, 0x0100
     66e:	c7 de       	rcall	.-626    	; 0x3fe <simon_SevenSeg>
     670:	a9 ce       	rjmp	.-686    	; 0x3c4 <transmit_data>
		break;
     672:	08 95       	ret
		
		case Press2:
		PORTA = 0x02;
     674:	82 e0       	ldi	r24, 0x02	; 2
     676:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     678:	80 91 00 01 	lds	r24, 0x0100
     67c:	c0 de       	rcall	.-640    	; 0x3fe <simon_SevenSeg>
     67e:	a2 ce       	rjmp	.-700    	; 0x3c4 <transmit_data>
		break;
     680:	08 95       	ret
		
		case Press3:
		PORTA = 0x04;
     682:	84 e0       	ldi	r24, 0x04	; 4
     684:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     686:	80 91 00 01 	lds	r24, 0x0100
     68a:	b9 de       	rcall	.-654    	; 0x3fe <simon_SevenSeg>
     68c:	9b ce       	rjmp	.-714    	; 0x3c4 <transmit_data>
		break;
     68e:	08 95       	ret
		
		case Press4:
		PORTA = 0x08;
     690:	88 e0       	ldi	r24, 0x08	; 8
     692:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     694:	80 91 00 01 	lds	r24, 0x0100
     698:	b2 de       	rcall	.-668    	; 0x3fe <simon_SevenSeg>
     69a:	94 ce       	rjmp	.-728    	; 0x3c4 <transmit_data>
		break;
     69c:	08 95       	ret
		case Off:
		PORTA = 0x00;
     69e:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     6a0:	80 91 00 01 	lds	r24, 0x0100
     6a4:	ac de       	rcall	.-680    	; 0x3fe <simon_SevenSeg>
     6a6:	8e de       	rcall	.-740    	; 0x3c4 <transmit_data>
		global_g = 2;
     6a8:	82 e0       	ldi	r24, 0x02	; 2
     6aa:	80 93 12 01 	sts	0x0112, r24
     6ae:	08 95       	ret

000006b0 <TickFct_Machine2>:
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
     6b0:	80 91 1d 01 	lds	r24, 0x011D
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	87 30       	cpi	r24, 0x07	; 7
     6b8:	91 05       	cpc	r25, r1
     6ba:	78 f5       	brcc	.+94     	; 0x71a <TickFct_Machine2+0x6a>
     6bc:	fc 01       	movw	r30, r24
     6be:	ea 5b       	subi	r30, 0xBA	; 186
     6c0:	ff 4f       	sbci	r31, 0xFF	; 255
     6c2:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__tablejump2__>
	{
		LCD_init();
		LCD_DisplayString(1, "Level Two");
		case SM2_off:
		if(global_g == 2)
     6c6:	80 91 12 01 	lds	r24, 0x0112
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	89 f5       	brne	.+98     	; 0x730 <TickFct_Machine2+0x80>
		{
			if(~PINB & 0x01)
     6ce:	18 99       	sbic	0x03, 0	; 3
     6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <TickFct_Machine2+0x28>
			{
				SM2_States = SM2_on1;
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	80 93 1d 01 	sts	0x011D, r24
			}
			while(!(~PINB & 0x01))
     6d8:	18 9b       	sbis	0x03, 0	; 3
     6da:	1f c0       	rjmp	.+62     	; 0x71a <TickFct_Machine2+0x6a>
			{
				SM2_States = SM2_off;
     6dc:	10 92 1d 01 	sts	0x011D, r1
		{
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
     6e0:	18 99       	sbic	0x03, 0	; 3
     6e2:	fc cf       	rjmp	.-8      	; 0x6dc <TickFct_Machine2+0x2c>
     6e4:	25 c0       	rjmp	.+74     	; 0x730 <TickFct_Machine2+0x80>
		{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
     6e6:	82 e0       	ldi	r24, 0x02	; 2
     6e8:	80 93 1d 01 	sts	0x011D, r24
     6ec:	26 c0       	rjmp	.+76     	; 0x73a <TickFct_Machine2+0x8a>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
     6ee:	83 e0       	ldi	r24, 0x03	; 3
     6f0:	80 93 1d 01 	sts	0x011D, r24
     6f4:	25 c0       	rjmp	.+74     	; 0x740 <TickFct_Machine2+0x90>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
     6f6:	84 e0       	ldi	r24, 0x04	; 4
     6f8:	80 93 1d 01 	sts	0x011D, r24
     6fc:	24 c0       	rjmp	.+72     	; 0x746 <TickFct_Machine2+0x96>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
     6fe:	85 e0       	ldi	r24, 0x05	; 5
     700:	80 93 1d 01 	sts	0x011D, r24
     704:	23 c0       	rjmp	.+70     	; 0x74c <TickFct_Machine2+0x9c>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
     706:	86 e0       	ldi	r24, 0x06	; 6
     708:	80 93 1d 01 	sts	0x011D, r24
     70c:	22 c0       	rjmp	.+68     	; 0x752 <TickFct_Machine2+0xa2>
		break;
		case SM2_on6:
		global_g = 3;
     70e:	83 e0       	ldi	r24, 0x03	; 3
     710:	80 93 12 01 	sts	0x0112, r24
		SM2_States = SM2_off;
     714:	10 92 1d 01 	sts	0x011D, r1
		break;
     718:	0b c0       	rjmp	.+22     	; 0x730 <TickFct_Machine2+0x80>
	}

	switch(SM2_States)
     71a:	80 91 1d 01 	lds	r24, 0x011D
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	87 30       	cpi	r24, 0x07	; 7
     722:	91 05       	cpc	r25, r1
     724:	c0 f4       	brcc	.+48     	; 0x756 <TickFct_Machine2+0xa6>
     726:	fc 01       	movw	r30, r24
     728:	e3 5b       	subi	r30, 0xB3	; 179
     72a:	ff 4f       	sbci	r31, 0xFF	; 255
     72c:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
     730:	12 b8       	out	0x02, r1	; 2
		break;
     732:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
     734:	81 e0       	ldi	r24, 0x01	; 1
     736:	82 b9       	out	0x02, r24	; 2
		break;
     738:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
     73a:	84 e0       	ldi	r24, 0x04	; 4
     73c:	82 b9       	out	0x02, r24	; 2
		break;
     73e:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
     740:	88 e0       	ldi	r24, 0x08	; 8
     742:	82 b9       	out	0x02, r24	; 2
		break;
     744:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
     746:	81 e0       	ldi	r24, 0x01	; 1
     748:	82 b9       	out	0x02, r24	; 2
		break;
     74a:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
     74c:	82 e0       	ldi	r24, 0x02	; 2
     74e:	82 b9       	out	0x02, r24	; 2
		break;
     750:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	82 b9       	out	0x02, r24	; 2
     756:	08 95       	ret

00000758 <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
     758:	80 91 18 01 	lds	r24, 0x0118
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	87 30       	cpi	r24, 0x07	; 7
     760:	91 05       	cpc	r25, r1
     762:	08 f0       	brcs	.+2      	; 0x766 <ButtonPress2+0xe>
     764:	c5 c0       	rjmp	.+394    	; 0x8f0 <ButtonPress2+0x198>
     766:	fc 01       	movw	r30, r24
     768:	ec 5a       	subi	r30, 0xAC	; 172
     76a:	ff 4f       	sbci	r31, 0xFF	; 255
     76c:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
     770:	18 99       	sbic	0x03, 0	; 3
     772:	05 c0       	rjmp	.+10     	; 0x77e <ButtonPress2+0x26>
		{
			while(~PINB & 0x01){}
     774:	18 9b       	sbis	0x03, 0	; 3
     776:	fe cf       	rjmp	.-4      	; 0x774 <ButtonPress2+0x1c>
			Press_sec_level = Press_state1;
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	80 93 18 01 	sts	0x0118, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     77e:	19 9b       	sbis	0x03, 1	; 3
     780:	04 c0       	rjmp	.+8      	; 0x78a <ButtonPress2+0x32>
     782:	1a 9b       	sbis	0x03, 2	; 3
     784:	02 c0       	rjmp	.+4      	; 0x78a <ButtonPress2+0x32>
     786:	1b 99       	sbic	0x03, 3	; 3
     788:	b6 c0       	rjmp	.+364    	; 0x8f6 <ButtonPress2+0x19e>
		{
			if(lives - 1 > -1)
     78a:	20 91 00 01 	lds	r18, 0x0100
     78e:	82 2f       	mov	r24, r18
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	01 97       	sbiw	r24, 0x01	; 1
     794:	99 23       	and	r25, r25
     796:	24 f0       	brlt	.+8      	; 0x7a0 <ButtonPress2+0x48>
			{
				lives--;
     798:	21 50       	subi	r18, 0x01	; 1
     79a:	20 93 00 01 	sts	0x0100, r18
     79e:	03 c0       	rjmp	.+6      	; 0x7a6 <ButtonPress2+0x4e>
			}
			else
			{
				global_g = 20;
     7a0:	84 e1       	ldi	r24, 0x14	; 20
     7a2:	80 93 12 01 	sts	0x0112, r24
			}
			Press_sec_level = Error2;
     7a6:	87 e0       	ldi	r24, 0x07	; 7
     7a8:	80 93 18 01 	sts	0x0118, r24
     7ac:	b1 c0       	rjmp	.+354    	; 0x910 <ButtonPress2+0x1b8>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
     7ae:	1a 99       	sbic	0x03, 2	; 3
     7b0:	05 c0       	rjmp	.+10     	; 0x7bc <ButtonPress2+0x64>
		{
			while(~PINB & 0x04){}
     7b2:	1a 9b       	sbis	0x03, 2	; 3
     7b4:	fe cf       	rjmp	.-4      	; 0x7b2 <ButtonPress2+0x5a>
			Press_sec_level = Press_state2;
     7b6:	82 e0       	ldi	r24, 0x02	; 2
     7b8:	80 93 18 01 	sts	0x0118, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     7bc:	19 9b       	sbis	0x03, 1	; 3
     7be:	04 c0       	rjmp	.+8      	; 0x7c8 <ButtonPress2+0x70>
     7c0:	18 9b       	sbis	0x03, 0	; 3
     7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <ButtonPress2+0x70>
     7c4:	1b 99       	sbic	0x03, 3	; 3
     7c6:	97 c0       	rjmp	.+302    	; 0x8f6 <ButtonPress2+0x19e>
		{
			if(lives - 1 > -1)
     7c8:	20 91 00 01 	lds	r18, 0x0100
     7cc:	82 2f       	mov	r24, r18
     7ce:	90 e0       	ldi	r25, 0x00	; 0
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	99 23       	and	r25, r25
     7d4:	24 f0       	brlt	.+8      	; 0x7de <ButtonPress2+0x86>
			{
				lives--;
     7d6:	21 50       	subi	r18, 0x01	; 1
     7d8:	20 93 00 01 	sts	0x0100, r18
     7dc:	03 c0       	rjmp	.+6      	; 0x7e4 <ButtonPress2+0x8c>
			}
			else
			{
				global_g = 20;
     7de:	84 e1       	ldi	r24, 0x14	; 20
     7e0:	80 93 12 01 	sts	0x0112, r24
			}
			Press_sec_level = Error2;
     7e4:	87 e0       	ldi	r24, 0x07	; 7
     7e6:	80 93 18 01 	sts	0x0118, r24
     7ea:	92 c0       	rjmp	.+292    	; 0x910 <ButtonPress2+0x1b8>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
     7ec:	1b 99       	sbic	0x03, 3	; 3
     7ee:	05 c0       	rjmp	.+10     	; 0x7fa <ButtonPress2+0xa2>
		{
			while(~PINB & 0x08){}
     7f0:	1b 9b       	sbis	0x03, 3	; 3
     7f2:	fe cf       	rjmp	.-4      	; 0x7f0 <ButtonPress2+0x98>
			Press_sec_level = Press_state3;
     7f4:	83 e0       	ldi	r24, 0x03	; 3
     7f6:	80 93 18 01 	sts	0x0118, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     7fa:	19 9b       	sbis	0x03, 1	; 3
     7fc:	04 c0       	rjmp	.+8      	; 0x806 <ButtonPress2+0xae>
     7fe:	1a 9b       	sbis	0x03, 2	; 3
     800:	02 c0       	rjmp	.+4      	; 0x806 <ButtonPress2+0xae>
     802:	18 99       	sbic	0x03, 0	; 3
     804:	78 c0       	rjmp	.+240    	; 0x8f6 <ButtonPress2+0x19e>
		{
			if(lives - 1 > -1)
     806:	20 91 00 01 	lds	r18, 0x0100
     80a:	82 2f       	mov	r24, r18
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	01 97       	sbiw	r24, 0x01	; 1
     810:	99 23       	and	r25, r25
     812:	24 f0       	brlt	.+8      	; 0x81c <ButtonPress2+0xc4>
			{
				lives--;
     814:	21 50       	subi	r18, 0x01	; 1
     816:	20 93 00 01 	sts	0x0100, r18
     81a:	03 c0       	rjmp	.+6      	; 0x822 <ButtonPress2+0xca>
			}
			else
			{
				global_g = 20;
     81c:	84 e1       	ldi	r24, 0x14	; 20
     81e:	80 93 12 01 	sts	0x0112, r24
			}
			Press_sec_level = Error2;
     822:	87 e0       	ldi	r24, 0x07	; 7
     824:	80 93 18 01 	sts	0x0118, r24
     828:	73 c0       	rjmp	.+230    	; 0x910 <ButtonPress2+0x1b8>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
     82a:	18 99       	sbic	0x03, 0	; 3
     82c:	05 c0       	rjmp	.+10     	; 0x838 <ButtonPress2+0xe0>
		{
			while(~PINB & 0x01){}
     82e:	18 9b       	sbis	0x03, 0	; 3
     830:	fe cf       	rjmp	.-4      	; 0x82e <ButtonPress2+0xd6>
			Press_sec_level = Press_state4;
     832:	84 e0       	ldi	r24, 0x04	; 4
     834:	80 93 18 01 	sts	0x0118, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     838:	19 9b       	sbis	0x03, 1	; 3
     83a:	04 c0       	rjmp	.+8      	; 0x844 <ButtonPress2+0xec>
     83c:	1a 9b       	sbis	0x03, 2	; 3
     83e:	02 c0       	rjmp	.+4      	; 0x844 <ButtonPress2+0xec>
     840:	1b 99       	sbic	0x03, 3	; 3
     842:	59 c0       	rjmp	.+178    	; 0x8f6 <ButtonPress2+0x19e>
		{
			if(lives - 1 > -1)
     844:	20 91 00 01 	lds	r18, 0x0100
     848:	82 2f       	mov	r24, r18
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	01 97       	sbiw	r24, 0x01	; 1
     84e:	99 23       	and	r25, r25
     850:	24 f0       	brlt	.+8      	; 0x85a <ButtonPress2+0x102>
			{
				lives--;
     852:	21 50       	subi	r18, 0x01	; 1
     854:	20 93 00 01 	sts	0x0100, r18
     858:	03 c0       	rjmp	.+6      	; 0x860 <ButtonPress2+0x108>
			}
			else
			{
				global_g = 20;
     85a:	84 e1       	ldi	r24, 0x14	; 20
     85c:	80 93 12 01 	sts	0x0112, r24
			}
			Press_sec_level = Error2;
     860:	87 e0       	ldi	r24, 0x07	; 7
     862:	80 93 18 01 	sts	0x0118, r24
     866:	54 c0       	rjmp	.+168    	; 0x910 <ButtonPress2+0x1b8>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
     868:	19 99       	sbic	0x03, 1	; 3
     86a:	05 c0       	rjmp	.+10     	; 0x876 <ButtonPress2+0x11e>
		{
			while(~PINB & 0x02){}
     86c:	19 9b       	sbis	0x03, 1	; 3
     86e:	fe cf       	rjmp	.-4      	; 0x86c <ButtonPress2+0x114>
			Press_sec_level = Press_state5;
     870:	85 e0       	ldi	r24, 0x05	; 5
     872:	80 93 18 01 	sts	0x0118, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     876:	18 9b       	sbis	0x03, 0	; 3
     878:	04 c0       	rjmp	.+8      	; 0x882 <ButtonPress2+0x12a>
     87a:	1a 9b       	sbis	0x03, 2	; 3
     87c:	02 c0       	rjmp	.+4      	; 0x882 <ButtonPress2+0x12a>
     87e:	1b 99       	sbic	0x03, 3	; 3
     880:	3a c0       	rjmp	.+116    	; 0x8f6 <ButtonPress2+0x19e>
		{
			if(lives - 1 > -1)
     882:	20 91 00 01 	lds	r18, 0x0100
     886:	82 2f       	mov	r24, r18
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	99 23       	and	r25, r25
     88e:	24 f0       	brlt	.+8      	; 0x898 <ButtonPress2+0x140>
			{
				lives--;
     890:	21 50       	subi	r18, 0x01	; 1
     892:	20 93 00 01 	sts	0x0100, r18
     896:	03 c0       	rjmp	.+6      	; 0x89e <ButtonPress2+0x146>
			}
			else
			{
				global_g = 20;
     898:	84 e1       	ldi	r24, 0x14	; 20
     89a:	80 93 12 01 	sts	0x0112, r24
			}
			Press_sec_level = Error2;
     89e:	87 e0       	ldi	r24, 0x07	; 7
     8a0:	80 93 18 01 	sts	0x0118, r24
     8a4:	35 c0       	rjmp	.+106    	; 0x910 <ButtonPress2+0x1b8>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
     8a6:	18 99       	sbic	0x03, 0	; 3
     8a8:	05 c0       	rjmp	.+10     	; 0x8b4 <ButtonPress2+0x15c>
		{
			while(~PINB & 0x01){}
     8aa:	18 9b       	sbis	0x03, 0	; 3
     8ac:	fe cf       	rjmp	.-4      	; 0x8aa <ButtonPress2+0x152>
			Press_sec_level = Press_state6;
     8ae:	86 e0       	ldi	r24, 0x06	; 6
     8b0:	80 93 18 01 	sts	0x0118, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     8b4:	19 9b       	sbis	0x03, 1	; 3
     8b6:	04 c0       	rjmp	.+8      	; 0x8c0 <ButtonPress2+0x168>
     8b8:	1a 9b       	sbis	0x03, 2	; 3
     8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <ButtonPress2+0x168>
     8bc:	1b 99       	sbic	0x03, 3	; 3
     8be:	1b c0       	rjmp	.+54     	; 0x8f6 <ButtonPress2+0x19e>
		{
			if(lives - 1 > -1)
     8c0:	20 91 00 01 	lds	r18, 0x0100
     8c4:	82 2f       	mov	r24, r18
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	01 97       	sbiw	r24, 0x01	; 1
     8ca:	99 23       	and	r25, r25
     8cc:	24 f0       	brlt	.+8      	; 0x8d6 <ButtonPress2+0x17e>
			{
				lives--;
     8ce:	21 50       	subi	r18, 0x01	; 1
     8d0:	20 93 00 01 	sts	0x0100, r18
     8d4:	03 c0       	rjmp	.+6      	; 0x8dc <ButtonPress2+0x184>
			}
			else
			{
				global_g = 20;
     8d6:	84 e1       	ldi	r24, 0x14	; 20
     8d8:	80 93 12 01 	sts	0x0112, r24
			}
			Press_sec_level = Error2;
     8dc:	87 e0       	ldi	r24, 0x07	; 7
     8de:	80 93 18 01 	sts	0x0118, r24
     8e2:	16 c0       	rjmp	.+44     	; 0x910 <ButtonPress2+0x1b8>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
     8e4:	1c 99       	sbic	0x03, 4	; 3
     8e6:	3e c0       	rjmp	.+124    	; 0x964 <ButtonPress2+0x20c>
		{
			Press_sec_level = Off2;
     8e8:	88 e0       	ldi	r24, 0x08	; 8
     8ea:	80 93 18 01 	sts	0x0118, r24
     8ee:	41 c0       	rjmp	.+130    	; 0x972 <ButtonPress2+0x21a>
		}
		break;
		default:
		Press_sec_level = Init2;
     8f0:	10 92 18 01 	sts	0x0118, r1
     8f4:	08 95       	ret
	}
	switch(Press_sec_level)
     8f6:	80 91 18 01 	lds	r24, 0x0118
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	fc 01       	movw	r30, r24
     8fe:	31 97       	sbiw	r30, 0x01	; 1
     900:	e8 30       	cpi	r30, 0x08	; 8
     902:	f1 05       	cpc	r31, r1
     904:	08 f0       	brcs	.+2      	; 0x908 <ButtonPress2+0x1b0>
     906:	3d c0       	rjmp	.+122    	; 0x982 <ButtonPress2+0x22a>
     908:	e5 5a       	subi	r30, 0xA5	; 165
     90a:	ff 4f       	sbci	r31, 0xFF	; 255
     90c:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__tablejump2__>
	{
		case Error2:
		PORTA = 0x10;
     910:	80 e1       	ldi	r24, 0x10	; 16
     912:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     914:	80 91 00 01 	lds	r24, 0x0100
     918:	72 dd       	rcall	.-1308   	; 0x3fe <simon_SevenSeg>
     91a:	54 cd       	rjmp	.-1368   	; 0x3c4 <transmit_data>
		break;
     91c:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     922:	80 91 00 01 	lds	r24, 0x0100
     926:	6b dd       	rcall	.-1322   	; 0x3fe <simon_SevenSeg>
     928:	4d cd       	rjmp	.-1382   	; 0x3c4 <transmit_data>
		break;
     92a:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
     92c:	84 e0       	ldi	r24, 0x04	; 4
     92e:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     930:	80 91 00 01 	lds	r24, 0x0100
     934:	64 dd       	rcall	.-1336   	; 0x3fe <simon_SevenSeg>
     936:	46 cd       	rjmp	.-1396   	; 0x3c4 <transmit_data>
		break;
     938:	08 95       	ret

		case Press_state3:
		PORTA = 0x08;
     93a:	88 e0       	ldi	r24, 0x08	; 8
     93c:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     93e:	80 91 00 01 	lds	r24, 0x0100
     942:	5d dd       	rcall	.-1350   	; 0x3fe <simon_SevenSeg>
     944:	3f cd       	rjmp	.-1410   	; 0x3c4 <transmit_data>
		break;
     946:	08 95       	ret

		case Press_state4:
		PORTA = 0x01;
     948:	81 e0       	ldi	r24, 0x01	; 1
     94a:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     94c:	80 91 00 01 	lds	r24, 0x0100
     950:	56 dd       	rcall	.-1364   	; 0x3fe <simon_SevenSeg>
     952:	38 cd       	rjmp	.-1424   	; 0x3c4 <transmit_data>
		break;
     954:	08 95       	ret

		case Press_state5:
		PORTA = 0x02;
     956:	82 e0       	ldi	r24, 0x02	; 2
     958:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     95a:	80 91 00 01 	lds	r24, 0x0100
     95e:	4f dd       	rcall	.-1378   	; 0x3fe <simon_SevenSeg>
     960:	31 cd       	rjmp	.-1438   	; 0x3c4 <transmit_data>
		break;
     962:	08 95       	ret

		case Press_state6:
		PORTA = 0x01;
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     968:	80 91 00 01 	lds	r24, 0x0100
     96c:	48 dd       	rcall	.-1392   	; 0x3fe <simon_SevenSeg>
     96e:	2a cd       	rjmp	.-1452   	; 0x3c4 <transmit_data>
		break;
     970:	08 95       	ret

		case Off2:
		PORTA = 0x00;
     972:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     974:	80 91 00 01 	lds	r24, 0x0100
     978:	42 dd       	rcall	.-1404   	; 0x3fe <simon_SevenSeg>
     97a:	24 dd       	rcall	.-1464   	; 0x3c4 <transmit_data>
		global_g = 4;
     97c:	84 e0       	ldi	r24, 0x04	; 4
     97e:	80 93 12 01 	sts	0x0112, r24
     982:	08 95       	ret

00000984 <TickFct_Machine3>:
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
     984:	20 91 19 01 	lds	r18, 0x0119
     988:	82 2f       	mov	r24, r18
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	8a 30       	cpi	r24, 0x0A	; 10
     98e:	91 05       	cpc	r25, r1
     990:	a0 f5       	brcc	.+104    	; 0x9fa <TickFct_Machine3+0x76>
     992:	fc 01       	movw	r30, r24
     994:	ed 59       	subi	r30, 0x9D	; 157
     996:	ff 4f       	sbci	r31, 0xFF	; 255
     998:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__tablejump2__>
	{
		LCD_init();
		LCD_DisplayString(1, "Level Three");
		case SM3_off:
		if(global_g == 4)
     99c:	80 91 12 01 	lds	r24, 0x0112
     9a0:	84 30       	cpi	r24, 0x04	; 4
     9a2:	a9 f5       	brne	.+106    	; 0xa0e <TickFct_Machine3+0x8a>
		{
			if(~PINB & 0x01)
     9a4:	18 99       	sbic	0x03, 0	; 3
     9a6:	33 c0       	rjmp	.+102    	; 0xa0e <TickFct_Machine3+0x8a>
			{
				while(~PINB & 0x01){}
     9a8:	18 9b       	sbis	0x03, 0	; 3
     9aa:	fe cf       	rjmp	.-4      	; 0x9a8 <TickFct_Machine3+0x24>
				SM3_State = SM3_on1;
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	80 93 19 01 	sts	0x0119, r24
     9b2:	2f c0       	rjmp	.+94     	; 0xa12 <TickFct_Machine3+0x8e>
				SM3_State = SM3_off;
			}	
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
     9b4:	82 e0       	ldi	r24, 0x02	; 2
     9b6:	80 93 19 01 	sts	0x0119, r24
     9ba:	2e c0       	rjmp	.+92     	; 0xa18 <TickFct_Machine3+0x94>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
     9bc:	83 e0       	ldi	r24, 0x03	; 3
     9be:	80 93 19 01 	sts	0x0119, r24
     9c2:	2d c0       	rjmp	.+90     	; 0xa1e <TickFct_Machine3+0x9a>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
     9c4:	84 e0       	ldi	r24, 0x04	; 4
     9c6:	80 93 19 01 	sts	0x0119, r24
     9ca:	2c c0       	rjmp	.+88     	; 0xa24 <TickFct_Machine3+0xa0>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
     9cc:	85 e0       	ldi	r24, 0x05	; 5
     9ce:	80 93 19 01 	sts	0x0119, r24
     9d2:	2b c0       	rjmp	.+86     	; 0xa2a <TickFct_Machine3+0xa6>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
     9d4:	86 e0       	ldi	r24, 0x06	; 6
     9d6:	80 93 19 01 	sts	0x0119, r24
     9da:	2a c0       	rjmp	.+84     	; 0xa30 <TickFct_Machine3+0xac>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
     9dc:	87 e0       	ldi	r24, 0x07	; 7
     9de:	80 93 19 01 	sts	0x0119, r24
     9e2:	29 c0       	rjmp	.+82     	; 0xa36 <TickFct_Machine3+0xb2>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
     9e4:	88 e0       	ldi	r24, 0x08	; 8
     9e6:	80 93 19 01 	sts	0x0119, r24
     9ea:	28 c0       	rjmp	.+80     	; 0xa3c <TickFct_Machine3+0xb8>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
     9ec:	89 e0       	ldi	r24, 0x09	; 9
     9ee:	80 93 19 01 	sts	0x0119, r24
     9f2:	27 c0       	rjmp	.+78     	; 0xa42 <TickFct_Machine3+0xbe>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
     9f4:	10 92 19 01 	sts	0x0119, r1
     9f8:	0a c0       	rjmp	.+20     	; 0xa0e <TickFct_Machine3+0x8a>
	}
	switch(SM3_State)
     9fa:	82 2f       	mov	r24, r18
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	8a 30       	cpi	r24, 0x0A	; 10
     a00:	91 05       	cpc	r25, r1
     a02:	20 f5       	brcc	.+72     	; 0xa4c <TickFct_Machine3+0xc8>
     a04:	fc 01       	movw	r30, r24
     a06:	e3 59       	subi	r30, 0x93	; 147
     a08:	ff 4f       	sbci	r31, 0xFF	; 255
     a0a:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
     a0e:	12 b8       	out	0x02, r1	; 2
		break;
     a10:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	82 b9       	out	0x02, r24	; 2
		break;
     a16:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
     a18:	84 e0       	ldi	r24, 0x04	; 4
     a1a:	82 b9       	out	0x02, r24	; 2
		break;
     a1c:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	82 b9       	out	0x02, r24	; 2
		break;
     a22:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
     a24:	88 e0       	ldi	r24, 0x08	; 8
     a26:	82 b9       	out	0x02, r24	; 2
		break;
     a28:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
     a2a:	82 e0       	ldi	r24, 0x02	; 2
     a2c:	82 b9       	out	0x02, r24	; 2
		break;
     a2e:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
     a30:	84 e0       	ldi	r24, 0x04	; 4
     a32:	82 b9       	out	0x02, r24	; 2
		break;
     a34:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
     a36:	81 e0       	ldi	r24, 0x01	; 1
     a38:	82 b9       	out	0x02, r24	; 2
		break;
     a3a:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
     a3c:	82 e0       	ldi	r24, 0x02	; 2
     a3e:	82 b9       	out	0x02, r24	; 2
		break;
     a40:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
     a42:	88 e0       	ldi	r24, 0x08	; 8
     a44:	82 b9       	out	0x02, r24	; 2
		global_g = 5;
     a46:	85 e0       	ldi	r24, 0x05	; 5
     a48:	80 93 12 01 	sts	0x0112, r24
     a4c:	08 95       	ret

00000a4e <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
     a4e:	80 91 1f 01 	lds	r24, 0x011F
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	8b 30       	cpi	r24, 0x0B	; 11
     a56:	91 05       	cpc	r25, r1
     a58:	08 f0       	brcs	.+2      	; 0xa5c <ButtonPress3+0xe>
     a5a:	30 c1       	rjmp	.+608    	; 0xcbc <ButtonPress3+0x26e>
     a5c:	fc 01       	movw	r30, r24
     a5e:	e9 58       	subi	r30, 0x89	; 137
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	0c 94 08 0e 	jmp	0x1c10	; 0x1c10 <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
     a66:	80 91 12 01 	lds	r24, 0x0112
     a6a:	85 30       	cpi	r24, 0x05	; 5
     a6c:	09 f0       	breq	.+2      	; 0xa70 <ButtonPress3+0x22>
     a6e:	80 c1       	rjmp	.+768    	; 0xd70 <ButtonPress3+0x322>
		{
			PORTA = 0x00;
     a70:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
     a72:	19 99       	sbic	0x03, 1	; 3
     a74:	05 c0       	rjmp	.+10     	; 0xa80 <ButtonPress3+0x32>
			{
				while(~PINB & 0x02){}
     a76:	19 9b       	sbis	0x03, 1	; 3
     a78:	fe cf       	rjmp	.-4      	; 0xa76 <ButtonPress3+0x28>
				Press_third_level = Press3_state1;
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	80 93 1f 01 	sts	0x011F, r24
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     a80:	18 9b       	sbis	0x03, 0	; 3
     a82:	04 c0       	rjmp	.+8      	; 0xa8c <ButtonPress3+0x3e>
     a84:	1a 9b       	sbis	0x03, 2	; 3
     a86:	02 c0       	rjmp	.+4      	; 0xa8c <ButtonPress3+0x3e>
     a88:	1b 99       	sbic	0x03, 3	; 3
     a8a:	18 c1       	rjmp	.+560    	; 0xcbc <ButtonPress3+0x26e>
			{
				if(lives - 1 > -1)
     a8c:	20 91 00 01 	lds	r18, 0x0100
     a90:	82 2f       	mov	r24, r18
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	01 97       	sbiw	r24, 0x01	; 1
     a96:	99 23       	and	r25, r25
     a98:	24 f0       	brlt	.+8      	; 0xaa2 <ButtonPress3+0x54>
				{
					lives--;
     a9a:	21 50       	subi	r18, 0x01	; 1
     a9c:	20 93 00 01 	sts	0x0100, r18
     aa0:	03 c0       	rjmp	.+6      	; 0xaa8 <ButtonPress3+0x5a>
				}
				else
				{
					global_g = 20;
     aa2:	84 e1       	ldi	r24, 0x14	; 20
     aa4:	80 93 12 01 	sts	0x0112, r24
				}
				Press_third_level = Error3;
     aa8:	8a e0       	ldi	r24, 0x0A	; 10
     aaa:	80 93 1f 01 	sts	0x011F, r24
     aae:	12 c1       	rjmp	.+548    	; 0xcd4 <ButtonPress3+0x286>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
     ab0:	19 99       	sbic	0x03, 1	; 3
     ab2:	10 c1       	rjmp	.+544    	; 0xcd4 <ButtonPress3+0x286>
		{
			while(~PINB & 0x02){}
     ab4:	19 9b       	sbis	0x03, 1	; 3
     ab6:	fe cf       	rjmp	.-4      	; 0xab4 <ButtonPress3+0x66>
			Press_third_level = Press3_state1;
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	80 93 1f 01 	sts	0x011F, r24
     abe:	11 c1       	rjmp	.+546    	; 0xce2 <ButtonPress3+0x294>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
     ac0:	1a 99       	sbic	0x03, 2	; 3
     ac2:	05 c0       	rjmp	.+10     	; 0xace <ButtonPress3+0x80>
		{
			
			while(~PINB & 0x04){}
     ac4:	1a 9b       	sbis	0x03, 2	; 3
     ac6:	fe cf       	rjmp	.-4      	; 0xac4 <ButtonPress3+0x76>
			Press_third_level = Press3_state2;
     ac8:	82 e0       	ldi	r24, 0x02	; 2
     aca:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     ace:	19 9b       	sbis	0x03, 1	; 3
     ad0:	04 c0       	rjmp	.+8      	; 0xada <ButtonPress3+0x8c>
     ad2:	18 9b       	sbis	0x03, 0	; 3
     ad4:	02 c0       	rjmp	.+4      	; 0xada <ButtonPress3+0x8c>
     ad6:	1b 99       	sbic	0x03, 3	; 3
     ad8:	f1 c0       	rjmp	.+482    	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     ada:	20 91 00 01 	lds	r18, 0x0100
     ade:	82 2f       	mov	r24, r18
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	01 97       	sbiw	r24, 0x01	; 1
     ae4:	99 23       	and	r25, r25
     ae6:	24 f0       	brlt	.+8      	; 0xaf0 <ButtonPress3+0xa2>
			{
				lives--;
     ae8:	21 50       	subi	r18, 0x01	; 1
     aea:	20 93 00 01 	sts	0x0100, r18
     aee:	03 c0       	rjmp	.+6      	; 0xaf6 <ButtonPress3+0xa8>
			}
			else
			{
				global_g = 20;
     af0:	84 e1       	ldi	r24, 0x14	; 20
     af2:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     af6:	8a e0       	ldi	r24, 0x0A	; 10
     af8:	80 93 1f 01 	sts	0x011F, r24
     afc:	eb c0       	rjmp	.+470    	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
     afe:	18 99       	sbic	0x03, 0	; 3
     b00:	05 c0       	rjmp	.+10     	; 0xb0c <ButtonPress3+0xbe>
		{
			while(~PINB & 0x01){}
     b02:	18 9b       	sbis	0x03, 0	; 3
     b04:	fe cf       	rjmp	.-4      	; 0xb02 <ButtonPress3+0xb4>
			Press_third_level = Press3_state3;
     b06:	83 e0       	ldi	r24, 0x03	; 3
     b08:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     b0c:	19 9b       	sbis	0x03, 1	; 3
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <ButtonPress3+0xca>
     b10:	1a 9b       	sbis	0x03, 2	; 3
     b12:	02 c0       	rjmp	.+4      	; 0xb18 <ButtonPress3+0xca>
     b14:	1b 99       	sbic	0x03, 3	; 3
     b16:	d2 c0       	rjmp	.+420    	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     b18:	20 91 00 01 	lds	r18, 0x0100
     b1c:	82 2f       	mov	r24, r18
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	01 97       	sbiw	r24, 0x01	; 1
     b22:	99 23       	and	r25, r25
     b24:	24 f0       	brlt	.+8      	; 0xb2e <ButtonPress3+0xe0>
			{
				lives--;
     b26:	21 50       	subi	r18, 0x01	; 1
     b28:	20 93 00 01 	sts	0x0100, r18
     b2c:	03 c0       	rjmp	.+6      	; 0xb34 <ButtonPress3+0xe6>
			}
			else
			{
				global_g = 20;
     b2e:	84 e1       	ldi	r24, 0x14	; 20
     b30:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     b34:	8a e0       	ldi	r24, 0x0A	; 10
     b36:	80 93 1f 01 	sts	0x011F, r24
     b3a:	cc c0       	rjmp	.+408    	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
     b3c:	1b 99       	sbic	0x03, 3	; 3
     b3e:	05 c0       	rjmp	.+10     	; 0xb4a <ButtonPress3+0xfc>
		{
			while(~PINB & 0x08){}
     b40:	1b 9b       	sbis	0x03, 3	; 3
     b42:	fe cf       	rjmp	.-4      	; 0xb40 <ButtonPress3+0xf2>
			Press_third_level = Press3_state4;
     b44:	84 e0       	ldi	r24, 0x04	; 4
     b46:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     b4a:	19 9b       	sbis	0x03, 1	; 3
     b4c:	04 c0       	rjmp	.+8      	; 0xb56 <ButtonPress3+0x108>
     b4e:	1a 9b       	sbis	0x03, 2	; 3
     b50:	02 c0       	rjmp	.+4      	; 0xb56 <ButtonPress3+0x108>
     b52:	18 99       	sbic	0x03, 0	; 3
     b54:	b3 c0       	rjmp	.+358    	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     b56:	20 91 00 01 	lds	r18, 0x0100
     b5a:	82 2f       	mov	r24, r18
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	01 97       	sbiw	r24, 0x01	; 1
     b60:	99 23       	and	r25, r25
     b62:	24 f0       	brlt	.+8      	; 0xb6c <ButtonPress3+0x11e>
			{
				lives--;
     b64:	21 50       	subi	r18, 0x01	; 1
     b66:	20 93 00 01 	sts	0x0100, r18
     b6a:	03 c0       	rjmp	.+6      	; 0xb72 <ButtonPress3+0x124>
			}
			else
			{
				global_g = 20;
     b6c:	84 e1       	ldi	r24, 0x14	; 20
     b6e:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     b72:	8a e0       	ldi	r24, 0x0A	; 10
     b74:	80 93 1f 01 	sts	0x011F, r24
     b78:	ad c0       	rjmp	.+346    	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
     b7a:	19 99       	sbic	0x03, 1	; 3
     b7c:	05 c0       	rjmp	.+10     	; 0xb88 <ButtonPress3+0x13a>
		{
			while(~PINB & 0x02){}
     b7e:	19 9b       	sbis	0x03, 1	; 3
     b80:	fe cf       	rjmp	.-4      	; 0xb7e <ButtonPress3+0x130>
			Press_third_level = Press3_state5;
     b82:	85 e0       	ldi	r24, 0x05	; 5
     b84:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     b88:	18 9b       	sbis	0x03, 0	; 3
     b8a:	04 c0       	rjmp	.+8      	; 0xb94 <ButtonPress3+0x146>
     b8c:	1a 9b       	sbis	0x03, 2	; 3
     b8e:	02 c0       	rjmp	.+4      	; 0xb94 <ButtonPress3+0x146>
     b90:	1b 99       	sbic	0x03, 3	; 3
     b92:	94 c0       	rjmp	.+296    	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     b94:	20 91 00 01 	lds	r18, 0x0100
     b98:	82 2f       	mov	r24, r18
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	01 97       	sbiw	r24, 0x01	; 1
     b9e:	99 23       	and	r25, r25
     ba0:	24 f0       	brlt	.+8      	; 0xbaa <ButtonPress3+0x15c>
			{
				lives--;
     ba2:	21 50       	subi	r18, 0x01	; 1
     ba4:	20 93 00 01 	sts	0x0100, r18
     ba8:	03 c0       	rjmp	.+6      	; 0xbb0 <ButtonPress3+0x162>
			}
			else
			{
				global_g = 20;
     baa:	84 e1       	ldi	r24, 0x14	; 20
     bac:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     bb0:	8a e0       	ldi	r24, 0x0A	; 10
     bb2:	80 93 1f 01 	sts	0x011F, r24
     bb6:	8e c0       	rjmp	.+284    	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
     bb8:	1a 99       	sbic	0x03, 2	; 3
     bba:	05 c0       	rjmp	.+10     	; 0xbc6 <ButtonPress3+0x178>
		{
			
			while(~PINB & 0x04){}
     bbc:	1a 9b       	sbis	0x03, 2	; 3
     bbe:	fe cf       	rjmp	.-4      	; 0xbbc <ButtonPress3+0x16e>
			Press_third_level = Press3_state6;
     bc0:	86 e0       	ldi	r24, 0x06	; 6
     bc2:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     bc6:	19 9b       	sbis	0x03, 1	; 3
     bc8:	04 c0       	rjmp	.+8      	; 0xbd2 <ButtonPress3+0x184>
     bca:	18 9b       	sbis	0x03, 0	; 3
     bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <ButtonPress3+0x184>
     bce:	1b 99       	sbic	0x03, 3	; 3
     bd0:	75 c0       	rjmp	.+234    	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     bd2:	20 91 00 01 	lds	r18, 0x0100
     bd6:	82 2f       	mov	r24, r18
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	01 97       	sbiw	r24, 0x01	; 1
     bdc:	99 23       	and	r25, r25
     bde:	24 f0       	brlt	.+8      	; 0xbe8 <ButtonPress3+0x19a>
			{
				lives--;
     be0:	21 50       	subi	r18, 0x01	; 1
     be2:	20 93 00 01 	sts	0x0100, r18
     be6:	03 c0       	rjmp	.+6      	; 0xbee <ButtonPress3+0x1a0>
			}
			else
			{
				global_g = 20;
     be8:	84 e1       	ldi	r24, 0x14	; 20
     bea:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     bee:	8a e0       	ldi	r24, 0x0A	; 10
     bf0:	80 93 1f 01 	sts	0x011F, r24
     bf4:	6f c0       	rjmp	.+222    	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
     bf6:	18 99       	sbic	0x03, 0	; 3
     bf8:	05 c0       	rjmp	.+10     	; 0xc04 <ButtonPress3+0x1b6>
		{
			while(~PINB & 0x01){}
     bfa:	18 9b       	sbis	0x03, 0	; 3
     bfc:	fe cf       	rjmp	.-4      	; 0xbfa <ButtonPress3+0x1ac>
			Press_third_level = Press3_state7;
     bfe:	87 e0       	ldi	r24, 0x07	; 7
     c00:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     c04:	19 9b       	sbis	0x03, 1	; 3
     c06:	04 c0       	rjmp	.+8      	; 0xc10 <ButtonPress3+0x1c2>
     c08:	1a 9b       	sbis	0x03, 2	; 3
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <ButtonPress3+0x1c2>
     c0c:	1b 99       	sbic	0x03, 3	; 3
     c0e:	56 c0       	rjmp	.+172    	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     c10:	20 91 00 01 	lds	r18, 0x0100
     c14:	82 2f       	mov	r24, r18
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	99 23       	and	r25, r25
     c1c:	24 f0       	brlt	.+8      	; 0xc26 <ButtonPress3+0x1d8>
			{
				lives--;
     c1e:	21 50       	subi	r18, 0x01	; 1
     c20:	20 93 00 01 	sts	0x0100, r18
     c24:	03 c0       	rjmp	.+6      	; 0xc2c <ButtonPress3+0x1de>
			}
			else
			{
				global_g = 20;
     c26:	84 e1       	ldi	r24, 0x14	; 20
     c28:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     c2c:	8a e0       	ldi	r24, 0x0A	; 10
     c2e:	80 93 1f 01 	sts	0x011F, r24
     c32:	50 c0       	rjmp	.+160    	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
     c34:	19 99       	sbic	0x03, 1	; 3
     c36:	05 c0       	rjmp	.+10     	; 0xc42 <ButtonPress3+0x1f4>
		{
			while(~PINB & 0x02){}
     c38:	19 9b       	sbis	0x03, 1	; 3
     c3a:	fe cf       	rjmp	.-4      	; 0xc38 <ButtonPress3+0x1ea>
			Press_third_level = Press3_state8;
     c3c:	88 e0       	ldi	r24, 0x08	; 8
     c3e:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     c42:	18 9b       	sbis	0x03, 0	; 3
     c44:	04 c0       	rjmp	.+8      	; 0xc4e <ButtonPress3+0x200>
     c46:	1a 9b       	sbis	0x03, 2	; 3
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <ButtonPress3+0x200>
     c4a:	1b 99       	sbic	0x03, 3	; 3
     c4c:	37 c0       	rjmp	.+110    	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     c4e:	20 91 00 01 	lds	r18, 0x0100
     c52:	82 2f       	mov	r24, r18
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	99 23       	and	r25, r25
     c5a:	24 f0       	brlt	.+8      	; 0xc64 <ButtonPress3+0x216>
			{
				lives--;
     c5c:	21 50       	subi	r18, 0x01	; 1
     c5e:	20 93 00 01 	sts	0x0100, r18
     c62:	03 c0       	rjmp	.+6      	; 0xc6a <ButtonPress3+0x21c>
			}
			else
			{
				global_g = 20;
     c64:	84 e1       	ldi	r24, 0x14	; 20
     c66:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     c6a:	8a e0       	ldi	r24, 0x0A	; 10
     c6c:	80 93 1f 01 	sts	0x011F, r24
     c70:	31 c0       	rjmp	.+98     	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
     c72:	1b 99       	sbic	0x03, 3	; 3
     c74:	05 c0       	rjmp	.+10     	; 0xc80 <ButtonPress3+0x232>
		{
			while(~PINB & 0x08){}
     c76:	1b 9b       	sbis	0x03, 3	; 3
     c78:	fe cf       	rjmp	.-4      	; 0xc76 <ButtonPress3+0x228>
			Press_third_level = Press3_state9;
     c7a:	89 e0       	ldi	r24, 0x09	; 9
     c7c:	80 93 1f 01 	sts	0x011F, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     c80:	19 9b       	sbis	0x03, 1	; 3
     c82:	04 c0       	rjmp	.+8      	; 0xc8c <ButtonPress3+0x23e>
     c84:	1a 9b       	sbis	0x03, 2	; 3
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <ButtonPress3+0x23e>
     c88:	18 99       	sbic	0x03, 0	; 3
     c8a:	18 c0       	rjmp	.+48     	; 0xcbc <ButtonPress3+0x26e>
		{
			if(lives - 1 > -1)
     c8c:	20 91 00 01 	lds	r18, 0x0100
     c90:	82 2f       	mov	r24, r18
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	01 97       	sbiw	r24, 0x01	; 1
     c96:	99 23       	and	r25, r25
     c98:	24 f0       	brlt	.+8      	; 0xca2 <ButtonPress3+0x254>
			{
				lives--;
     c9a:	21 50       	subi	r18, 0x01	; 1
     c9c:	20 93 00 01 	sts	0x0100, r18
     ca0:	03 c0       	rjmp	.+6      	; 0xca8 <ButtonPress3+0x25a>
			}
			else
			{
				global_g = 20;
     ca2:	84 e1       	ldi	r24, 0x14	; 20
     ca4:	80 93 12 01 	sts	0x0112, r24
			}
			Press_third_level = Error3;
     ca8:	8a e0       	ldi	r24, 0x0A	; 10
     caa:	80 93 1f 01 	sts	0x011F, r24
     cae:	12 c0       	rjmp	.+36     	; 0xcd4 <ButtonPress3+0x286>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
     cb0:	1c 99       	sbic	0x03, 4	; 3
     cb2:	4f c0       	rjmp	.+158    	; 0xd52 <ButtonPress3+0x304>
		{
			Press_third_level = Off3;
     cb4:	8b e0       	ldi	r24, 0x0B	; 11
     cb6:	80 93 1f 01 	sts	0x011F, r24
     cba:	52 c0       	rjmp	.+164    	; 0xd60 <ButtonPress3+0x312>
		}
		break;
	}
	switch(Press_third_level)
     cbc:	80 91 1f 01 	lds	r24, 0x011F
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	fc 01       	movw	r30, r24
     cc4:	31 97       	sbiw	r30, 0x01	; 1
     cc6:	eb 30       	cpi	r30, 0x0B	; 11
     cc8:	f1 05       	cpc	r31, r1
     cca:	08 f0       	brcs	.+2      	; 0xcce <ButtonPress3+0x280>
     ccc:	51 c0       	rjmp	.+162    	; 0xd70 <ButtonPress3+0x322>
     cce:	ee 57       	subi	r30, 0x7E	; 126
     cd0:	ff 4f       	sbci	r31, 0xFF	; 255
     cd2:	9e c7       	rjmp	.+3900   	; 0x1c10 <__tablejump2__>
	{
		case Error3:
		transmit_data(simon_SevenSeg(lives));
     cd4:	80 91 00 01 	lds	r24, 0x0100
     cd8:	92 db       	rcall	.-2268   	; 0x3fe <simon_SevenSeg>
     cda:	74 db       	rcall	.-2328   	; 0x3c4 <transmit_data>
		PORTA = 0x10;
     cdc:	80 e1       	ldi	r24, 0x10	; 16
     cde:	82 b9       	out	0x02, r24	; 2
		break;
     ce0:	08 95       	ret
		case Press3_state1:
		transmit_data(simon_SevenSeg(lives));
     ce2:	80 91 00 01 	lds	r24, 0x0100
     ce6:	8b db       	rcall	.-2282   	; 0x3fe <simon_SevenSeg>
     ce8:	6d db       	rcall	.-2342   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
     cea:	82 e0       	ldi	r24, 0x02	; 2
     cec:	82 b9       	out	0x02, r24	; 2
		break;
     cee:	08 95       	ret
		case Press3_state2:
		transmit_data(simon_SevenSeg(lives));
     cf0:	80 91 00 01 	lds	r24, 0x0100
     cf4:	84 db       	rcall	.-2296   	; 0x3fe <simon_SevenSeg>
     cf6:	66 db       	rcall	.-2356   	; 0x3c4 <transmit_data>
		PORTA = 0x04;
     cf8:	84 e0       	ldi	r24, 0x04	; 4
     cfa:	82 b9       	out	0x02, r24	; 2
		break;
     cfc:	08 95       	ret
		case Press3_state3:
		transmit_data(simon_SevenSeg(lives));
     cfe:	80 91 00 01 	lds	r24, 0x0100
     d02:	7d db       	rcall	.-2310   	; 0x3fe <simon_SevenSeg>
     d04:	5f db       	rcall	.-2370   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	82 b9       	out	0x02, r24	; 2
		break;
     d0a:	08 95       	ret
		case Press3_state4:
		transmit_data(simon_SevenSeg(lives));
     d0c:	80 91 00 01 	lds	r24, 0x0100
     d10:	76 db       	rcall	.-2324   	; 0x3fe <simon_SevenSeg>
     d12:	58 db       	rcall	.-2384   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
     d14:	88 e0       	ldi	r24, 0x08	; 8
     d16:	82 b9       	out	0x02, r24	; 2
		break;
     d18:	08 95       	ret
		case Press3_state5:
		transmit_data(simon_SevenSeg(lives));
     d1a:	80 91 00 01 	lds	r24, 0x0100
     d1e:	6f db       	rcall	.-2338   	; 0x3fe <simon_SevenSeg>
     d20:	51 db       	rcall	.-2398   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
     d22:	82 e0       	ldi	r24, 0x02	; 2
     d24:	82 b9       	out	0x02, r24	; 2
		break;
     d26:	08 95       	ret
		case Press3_state6:
		transmit_data(simon_SevenSeg(lives));
     d28:	80 91 00 01 	lds	r24, 0x0100
     d2c:	68 db       	rcall	.-2352   	; 0x3fe <simon_SevenSeg>
     d2e:	4a db       	rcall	.-2412   	; 0x3c4 <transmit_data>
		PORTA = 0x04;
     d30:	84 e0       	ldi	r24, 0x04	; 4
     d32:	82 b9       	out	0x02, r24	; 2
		break;
     d34:	08 95       	ret
		case Press3_state7:
		transmit_data(simon_SevenSeg(lives));
     d36:	80 91 00 01 	lds	r24, 0x0100
     d3a:	61 db       	rcall	.-2366   	; 0x3fe <simon_SevenSeg>
     d3c:	43 db       	rcall	.-2426   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
     d3e:	81 e0       	ldi	r24, 0x01	; 1
     d40:	82 b9       	out	0x02, r24	; 2
		break;
     d42:	08 95       	ret
		case Press3_state8:
		transmit_data(simon_SevenSeg(lives));
     d44:	80 91 00 01 	lds	r24, 0x0100
     d48:	5a db       	rcall	.-2380   	; 0x3fe <simon_SevenSeg>
     d4a:	3c db       	rcall	.-2440   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
     d4c:	82 e0       	ldi	r24, 0x02	; 2
     d4e:	82 b9       	out	0x02, r24	; 2
		break;
     d50:	08 95       	ret
		case Press3_state9:
		transmit_data(simon_SevenSeg(lives));
     d52:	80 91 00 01 	lds	r24, 0x0100
     d56:	53 db       	rcall	.-2394   	; 0x3fe <simon_SevenSeg>
     d58:	35 db       	rcall	.-2454   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
     d5a:	88 e0       	ldi	r24, 0x08	; 8
     d5c:	82 b9       	out	0x02, r24	; 2
		break;
     d5e:	08 95       	ret
		case Off3:
		PORTA = 0x00;
     d60:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     d62:	80 91 00 01 	lds	r24, 0x0100
     d66:	4b db       	rcall	.-2410   	; 0x3fe <simon_SevenSeg>
     d68:	2d db       	rcall	.-2470   	; 0x3c4 <transmit_data>
		global_g = 6;
     d6a:	86 e0       	ldi	r24, 0x06	; 6
     d6c:	80 93 12 01 	sts	0x0112, r24
     d70:	08 95       	ret

00000d72 <TickFct_Machine4>:
}

enum SM4_States {SM4_off, SM4_on1, SM4_on2, SM4_on3, SM4_on4, SM4_on5, SM4_on6, SM4_on7, SM4_on8, SM4_on9, SM4_on10, SM4_on11, SM4_on12} SM4_States;
void TickFct_Machine4()
{
	switch(SM4_States)
     d72:	20 91 1a 01 	lds	r18, 0x011A
     d76:	82 2f       	mov	r24, r18
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	8d 30       	cpi	r24, 0x0D	; 13
     d7c:	91 05       	cpc	r25, r1
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <TickFct_Machine4+0x10>
     d80:	40 c0       	rjmp	.+128    	; 0xe02 <TickFct_Machine4+0x90>
     d82:	fc 01       	movw	r30, r24
     d84:	e3 57       	subi	r30, 0x73	; 115
     d86:	ff 4f       	sbci	r31, 0xFF	; 255
     d88:	43 c7       	rjmp	.+3718   	; 0x1c10 <__tablejump2__>
	{
		LCD_init();
		LCD_DisplayString(1, "Level Four");
		case SM4_off:
		if(global_g == 6)
     d8a:	80 91 12 01 	lds	r24, 0x0112
     d8e:	86 30       	cpi	r24, 0x06	; 6
     d90:	09 f0       	breq	.+2      	; 0xd94 <TickFct_Machine4+0x22>
     d92:	40 c0       	rjmp	.+128    	; 0xe14 <TickFct_Machine4+0xa2>
		{
			if(~PINB & 0x01)
     d94:	18 99       	sbic	0x03, 0	; 3
     d96:	3e c0       	rjmp	.+124    	; 0xe14 <TickFct_Machine4+0xa2>
			{
				while(~PINB & 0x01){}
     d98:	18 9b       	sbis	0x03, 0	; 3
     d9a:	fe cf       	rjmp	.-4      	; 0xd98 <TickFct_Machine4+0x26>
				SM4_States = SM4_on1;
     d9c:	81 e0       	ldi	r24, 0x01	; 1
     d9e:	80 93 1a 01 	sts	0x011A, r24
     da2:	3a c0       	rjmp	.+116    	; 0xe18 <TickFct_Machine4+0xa6>
				SM4_States = SM4_off;
			}
		}
		break;
		case SM4_on1:
		SM4_States = SM4_on2;
     da4:	82 e0       	ldi	r24, 0x02	; 2
     da6:	80 93 1a 01 	sts	0x011A, r24
     daa:	39 c0       	rjmp	.+114    	; 0xe1e <TickFct_Machine4+0xac>
		break;
		case SM4_on2:
		SM4_States = SM4_on3;
     dac:	83 e0       	ldi	r24, 0x03	; 3
     dae:	80 93 1a 01 	sts	0x011A, r24
     db2:	38 c0       	rjmp	.+112    	; 0xe24 <TickFct_Machine4+0xb2>
		break;
		case SM4_on3:
		SM4_States = SM4_on4;
     db4:	84 e0       	ldi	r24, 0x04	; 4
     db6:	80 93 1a 01 	sts	0x011A, r24
     dba:	37 c0       	rjmp	.+110    	; 0xe2a <TickFct_Machine4+0xb8>
		break;
		case SM4_on4:
		SM4_States = SM4_on5;
     dbc:	85 e0       	ldi	r24, 0x05	; 5
     dbe:	80 93 1a 01 	sts	0x011A, r24
     dc2:	36 c0       	rjmp	.+108    	; 0xe30 <TickFct_Machine4+0xbe>
		break;
		case SM4_on5:
		SM4_States = SM4_on6;
     dc4:	86 e0       	ldi	r24, 0x06	; 6
     dc6:	80 93 1a 01 	sts	0x011A, r24
     dca:	35 c0       	rjmp	.+106    	; 0xe36 <TickFct_Machine4+0xc4>
		break;
		case SM4_on6:
		SM4_States = SM4_on7;
     dcc:	87 e0       	ldi	r24, 0x07	; 7
     dce:	80 93 1a 01 	sts	0x011A, r24
     dd2:	34 c0       	rjmp	.+104    	; 0xe3c <TickFct_Machine4+0xca>
		break;
		case SM4_on7:
		SM4_States = SM4_on8;
     dd4:	88 e0       	ldi	r24, 0x08	; 8
     dd6:	80 93 1a 01 	sts	0x011A, r24
     dda:	33 c0       	rjmp	.+102    	; 0xe42 <TickFct_Machine4+0xd0>
		break;
		case SM4_on8:
		SM4_States = SM4_on9;
     ddc:	89 e0       	ldi	r24, 0x09	; 9
     dde:	80 93 1a 01 	sts	0x011A, r24
     de2:	32 c0       	rjmp	.+100    	; 0xe48 <TickFct_Machine4+0xd6>
		break;
		case SM4_on9:
		SM4_States = SM4_on10;
     de4:	8a e0       	ldi	r24, 0x0A	; 10
     de6:	80 93 1a 01 	sts	0x011A, r24
     dea:	31 c0       	rjmp	.+98     	; 0xe4e <TickFct_Machine4+0xdc>
		break;
		case SM4_on10:
		SM4_States = SM4_on11;
     dec:	8b e0       	ldi	r24, 0x0B	; 11
     dee:	80 93 1a 01 	sts	0x011A, r24
     df2:	30 c0       	rjmp	.+96     	; 0xe54 <TickFct_Machine4+0xe2>
		break;
		case SM4_on11:
		SM4_States = SM4_on12;
     df4:	8c e0       	ldi	r24, 0x0C	; 12
     df6:	80 93 1a 01 	sts	0x011A, r24
     dfa:	2f c0       	rjmp	.+94     	; 0xe5a <TickFct_Machine4+0xe8>
		break;
		case SM4_on12:
		SM4_States = SM4_off;
     dfc:	10 92 1a 01 	sts	0x011A, r1
		break;
     e00:	09 c0       	rjmp	.+18     	; 0xe14 <TickFct_Machine4+0xa2>
	}
	switch(SM4_States)
     e02:	82 2f       	mov	r24, r18
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	8d 30       	cpi	r24, 0x0D	; 13
     e08:	91 05       	cpc	r25, r1
     e0a:	60 f5       	brcc	.+88     	; 0xe64 <TickFct_Machine4+0xf2>
     e0c:	fc 01       	movw	r30, r24
     e0e:	e6 56       	subi	r30, 0x66	; 102
     e10:	ff 4f       	sbci	r31, 0xFF	; 255
     e12:	fe c6       	rjmp	.+3580   	; 0x1c10 <__tablejump2__>
	{
		case SM4_off:
		PORTA = 0x00;
     e14:	12 b8       	out	0x02, r1	; 2
		break;
     e16:	08 95       	ret
		case SM4_on1:
		PORTA = 0x01;
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	82 b9       	out	0x02, r24	; 2
		break;
     e1c:	08 95       	ret
		case SM4_on2:
		PORTA = 0x08;
     e1e:	88 e0       	ldi	r24, 0x08	; 8
     e20:	82 b9       	out	0x02, r24	; 2
		break;
     e22:	08 95       	ret
		case SM4_on3:
		PORTA = 0x02;
     e24:	82 e0       	ldi	r24, 0x02	; 2
     e26:	82 b9       	out	0x02, r24	; 2
		break;
     e28:	08 95       	ret
		case SM4_on4:
		PORTA = 0x01;
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	82 b9       	out	0x02, r24	; 2
		break;
     e2e:	08 95       	ret
		case SM4_on5:
		PORTA = 0x02;
     e30:	82 e0       	ldi	r24, 0x02	; 2
     e32:	82 b9       	out	0x02, r24	; 2
		break;
     e34:	08 95       	ret
		case SM4_on6:
		PORTA = 0x08;
     e36:	88 e0       	ldi	r24, 0x08	; 8
     e38:	82 b9       	out	0x02, r24	; 2
		break;
     e3a:	08 95       	ret
		case SM4_on7:
		PORTA = 0x02;
     e3c:	82 e0       	ldi	r24, 0x02	; 2
     e3e:	82 b9       	out	0x02, r24	; 2
		break;
     e40:	08 95       	ret
		case SM4_on8:
		PORTA = 0x01;
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	82 b9       	out	0x02, r24	; 2
		break;
     e46:	08 95       	ret
		case SM4_on9:
		PORTA = 0x08;
     e48:	88 e0       	ldi	r24, 0x08	; 8
     e4a:	82 b9       	out	0x02, r24	; 2
		break;
     e4c:	08 95       	ret
		case SM4_on10:
		PORTA = 0x01;
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	82 b9       	out	0x02, r24	; 2
		break;
     e52:	08 95       	ret
		case SM4_on11:
		PORTA = 0x02;
     e54:	82 e0       	ldi	r24, 0x02	; 2
     e56:	82 b9       	out	0x02, r24	; 2
		break;
     e58:	08 95       	ret
		case SM4_on12:
		PORTA = 0x01;
     e5a:	81 e0       	ldi	r24, 0x01	; 1
     e5c:	82 b9       	out	0x02, r24	; 2
		global_g = 7;
     e5e:	87 e0       	ldi	r24, 0x07	; 7
     e60:	80 93 12 01 	sts	0x0112, r24
     e64:	08 95       	ret

00000e66 <ButtonPress4>:
}

enum Press_fourth_level{Init4, Press4_state1, Press4_state2, Press4_state3, Press4_state4, Press4_state5, Press4_state6, Press4_state7, Press4_state8, Press4_state9, Press4_state10, Press4_state11, Press4_state12, Error4, Off4} Press_fourth_level;
void ButtonPress4()
{
	switch(Press_fourth_level)
     e66:	80 91 1c 01 	lds	r24, 0x011C
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	8e 30       	cpi	r24, 0x0E	; 14
     e6e:	91 05       	cpc	r25, r1
     e70:	08 f0       	brcs	.+2      	; 0xe74 <ButtonPress4+0xe>
     e72:	8c c1       	rjmp	.+792    	; 0x118c <ButtonPress4+0x326>
     e74:	fc 01       	movw	r30, r24
     e76:	e9 55       	subi	r30, 0x59	; 89
     e78:	ff 4f       	sbci	r31, 0xFF	; 255
     e7a:	ca c6       	rjmp	.+3476   	; 0x1c10 <__tablejump2__>
	{
		case Init4:
		if(global_g == 7)
     e7c:	80 91 12 01 	lds	r24, 0x0112
     e80:	87 30       	cpi	r24, 0x07	; 7
     e82:	09 f0       	breq	.+2      	; 0xe86 <ButtonPress4+0x20>
     e84:	f2 c1       	rjmp	.+996    	; 0x126a <ButtonPress4+0x404>
		{
			PORTA = 0x00;
     e86:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x01)
     e88:	18 99       	sbic	0x03, 0	; 3
     e8a:	05 c0       	rjmp	.+10     	; 0xe96 <ButtonPress4+0x30>
			{
				while(~PINB & 0x01){}
     e8c:	18 9b       	sbis	0x03, 0	; 3
     e8e:	fe cf       	rjmp	.-4      	; 0xe8c <ButtonPress4+0x26>
				Press_fourth_level = Press4_state1; 
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	80 93 1c 01 	sts	0x011C, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     e96:	19 9b       	sbis	0x03, 1	; 3
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <ButtonPress4+0x3c>
     e9a:	1a 9b       	sbis	0x03, 2	; 3
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <ButtonPress4+0x3c>
     e9e:	1b 99       	sbic	0x03, 3	; 3
     ea0:	75 c1       	rjmp	.+746    	; 0x118c <ButtonPress4+0x326>
			{
				if(lives - 1 > -1)
     ea2:	20 91 00 01 	lds	r18, 0x0100
     ea6:	82 2f       	mov	r24, r18
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	01 97       	sbiw	r24, 0x01	; 1
     eac:	99 23       	and	r25, r25
     eae:	24 f0       	brlt	.+8      	; 0xeb8 <ButtonPress4+0x52>
				{
					lives--;
     eb0:	21 50       	subi	r18, 0x01	; 1
     eb2:	20 93 00 01 	sts	0x0100, r18
     eb6:	03 c0       	rjmp	.+6      	; 0xebe <ButtonPress4+0x58>
				}
				else
				{
					global_g = 20;
     eb8:	84 e1       	ldi	r24, 0x14	; 20
     eba:	80 93 12 01 	sts	0x0112, r24
				}
				Press_fourth_level = Error4;
     ebe:	8d e0       	ldi	r24, 0x0D	; 13
     ec0:	80 93 1c 01 	sts	0x011C, r24
     ec4:	6f c1       	rjmp	.+734    	; 0x11a4 <ButtonPress4+0x33e>
			}
		}
		break;
		case Press4_state1:
		if(~PINB & 0x08)
     ec6:	1b 99       	sbic	0x03, 3	; 3
     ec8:	05 c0       	rjmp	.+10     	; 0xed4 <ButtonPress4+0x6e>
		{
			while(~PINB & 0x08){}
     eca:	1b 9b       	sbis	0x03, 3	; 3
     ecc:	fe cf       	rjmp	.-4      	; 0xeca <ButtonPress4+0x64>
			Press_fourth_level = Press4_state2;
     ece:	82 e0       	ldi	r24, 0x02	; 2
     ed0:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     ed4:	19 9b       	sbis	0x03, 1	; 3
     ed6:	04 c0       	rjmp	.+8      	; 0xee0 <ButtonPress4+0x7a>
     ed8:	1a 9b       	sbis	0x03, 2	; 3
     eda:	02 c0       	rjmp	.+4      	; 0xee0 <ButtonPress4+0x7a>
     edc:	18 99       	sbic	0x03, 0	; 3
     ede:	56 c1       	rjmp	.+684    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
     ee0:	20 91 00 01 	lds	r18, 0x0100
     ee4:	82 2f       	mov	r24, r18
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	01 97       	sbiw	r24, 0x01	; 1
     eea:	99 23       	and	r25, r25
     eec:	24 f0       	brlt	.+8      	; 0xef6 <ButtonPress4+0x90>
			{
				lives--;
     eee:	21 50       	subi	r18, 0x01	; 1
     ef0:	20 93 00 01 	sts	0x0100, r18
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <ButtonPress4+0x96>
			}
			else
			{
				global_g = 20;
     ef6:	84 e1       	ldi	r24, 0x14	; 20
     ef8:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
     efc:	8d e0       	ldi	r24, 0x0D	; 13
     efe:	80 93 1c 01 	sts	0x011C, r24
     f02:	50 c1       	rjmp	.+672    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state2:
		if(~PINB & 0x02)
     f04:	19 99       	sbic	0x03, 1	; 3
     f06:	05 c0       	rjmp	.+10     	; 0xf12 <ButtonPress4+0xac>
		{
			while(~PINB & 0x02){}
     f08:	19 9b       	sbis	0x03, 1	; 3
     f0a:	fe cf       	rjmp	.-4      	; 0xf08 <ButtonPress4+0xa2>
			Press_fourth_level = Press4_state3;
     f0c:	83 e0       	ldi	r24, 0x03	; 3
     f0e:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     f12:	18 9b       	sbis	0x03, 0	; 3
     f14:	04 c0       	rjmp	.+8      	; 0xf1e <ButtonPress4+0xb8>
     f16:	1a 9b       	sbis	0x03, 2	; 3
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <ButtonPress4+0xb8>
     f1a:	1b 99       	sbic	0x03, 3	; 3
     f1c:	37 c1       	rjmp	.+622    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
     f1e:	20 91 00 01 	lds	r18, 0x0100
     f22:	82 2f       	mov	r24, r18
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	01 97       	sbiw	r24, 0x01	; 1
     f28:	99 23       	and	r25, r25
     f2a:	24 f0       	brlt	.+8      	; 0xf34 <ButtonPress4+0xce>
			{
				lives--;
     f2c:	21 50       	subi	r18, 0x01	; 1
     f2e:	20 93 00 01 	sts	0x0100, r18
     f32:	03 c0       	rjmp	.+6      	; 0xf3a <ButtonPress4+0xd4>
			}
			else
			{
				global_g = 20;
     f34:	84 e1       	ldi	r24, 0x14	; 20
     f36:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
     f3a:	8d e0       	ldi	r24, 0x0D	; 13
     f3c:	80 93 1c 01 	sts	0x011C, r24
     f40:	31 c1       	rjmp	.+610    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state3:
		if(~PINB & 0x01)
     f42:	18 99       	sbic	0x03, 0	; 3
     f44:	05 c0       	rjmp	.+10     	; 0xf50 <ButtonPress4+0xea>
		{
			while(~PINB & 0x01){}
     f46:	18 9b       	sbis	0x03, 0	; 3
     f48:	fe cf       	rjmp	.-4      	; 0xf46 <ButtonPress4+0xe0>
			Press_fourth_level = Press4_state4;
     f4a:	84 e0       	ldi	r24, 0x04	; 4
     f4c:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     f50:	19 9b       	sbis	0x03, 1	; 3
     f52:	04 c0       	rjmp	.+8      	; 0xf5c <ButtonPress4+0xf6>
     f54:	1a 9b       	sbis	0x03, 2	; 3
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <ButtonPress4+0xf6>
     f58:	1b 99       	sbic	0x03, 3	; 3
     f5a:	18 c1       	rjmp	.+560    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
     f5c:	20 91 00 01 	lds	r18, 0x0100
     f60:	82 2f       	mov	r24, r18
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	01 97       	sbiw	r24, 0x01	; 1
     f66:	99 23       	and	r25, r25
     f68:	24 f0       	brlt	.+8      	; 0xf72 <ButtonPress4+0x10c>
			{
				lives--;
     f6a:	21 50       	subi	r18, 0x01	; 1
     f6c:	20 93 00 01 	sts	0x0100, r18
     f70:	03 c0       	rjmp	.+6      	; 0xf78 <ButtonPress4+0x112>
			}
			else
			{
				global_g = 20;
     f72:	84 e1       	ldi	r24, 0x14	; 20
     f74:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
     f78:	8d e0       	ldi	r24, 0x0D	; 13
     f7a:	80 93 1c 01 	sts	0x011C, r24
     f7e:	12 c1       	rjmp	.+548    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state4:
		if(~PINB & 0x02)
     f80:	19 99       	sbic	0x03, 1	; 3
     f82:	05 c0       	rjmp	.+10     	; 0xf8e <ButtonPress4+0x128>
		{
			while(~PINB & 0x02){}
     f84:	19 9b       	sbis	0x03, 1	; 3
     f86:	fe cf       	rjmp	.-4      	; 0xf84 <ButtonPress4+0x11e>
			Press_fourth_level = Press4_state5;
     f88:	85 e0       	ldi	r24, 0x05	; 5
     f8a:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     f8e:	18 9b       	sbis	0x03, 0	; 3
     f90:	04 c0       	rjmp	.+8      	; 0xf9a <ButtonPress4+0x134>
     f92:	1a 9b       	sbis	0x03, 2	; 3
     f94:	02 c0       	rjmp	.+4      	; 0xf9a <ButtonPress4+0x134>
     f96:	1b 99       	sbic	0x03, 3	; 3
     f98:	f9 c0       	rjmp	.+498    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
     f9a:	20 91 00 01 	lds	r18, 0x0100
     f9e:	82 2f       	mov	r24, r18
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	01 97       	sbiw	r24, 0x01	; 1
     fa4:	99 23       	and	r25, r25
     fa6:	24 f0       	brlt	.+8      	; 0xfb0 <ButtonPress4+0x14a>
			{
				lives--;
     fa8:	21 50       	subi	r18, 0x01	; 1
     faa:	20 93 00 01 	sts	0x0100, r18
     fae:	03 c0       	rjmp	.+6      	; 0xfb6 <ButtonPress4+0x150>
			}
			else
			{
				global_g = 20;
     fb0:	84 e1       	ldi	r24, 0x14	; 20
     fb2:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
     fb6:	8d e0       	ldi	r24, 0x0D	; 13
     fb8:	80 93 1c 01 	sts	0x011C, r24
     fbc:	f3 c0       	rjmp	.+486    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state5:
		if(~PINB & 0x08)
     fbe:	1b 99       	sbic	0x03, 3	; 3
     fc0:	05 c0       	rjmp	.+10     	; 0xfcc <ButtonPress4+0x166>
		{
			while(~PINB & 0x08){}
     fc2:	1b 9b       	sbis	0x03, 3	; 3
     fc4:	fe cf       	rjmp	.-4      	; 0xfc2 <ButtonPress4+0x15c>
			Press_fourth_level = Press4_state6;
     fc6:	86 e0       	ldi	r24, 0x06	; 6
     fc8:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     fcc:	19 9b       	sbis	0x03, 1	; 3
     fce:	04 c0       	rjmp	.+8      	; 0xfd8 <ButtonPress4+0x172>
     fd0:	1a 9b       	sbis	0x03, 2	; 3
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <ButtonPress4+0x172>
     fd4:	18 99       	sbic	0x03, 0	; 3
     fd6:	da c0       	rjmp	.+436    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
     fd8:	20 91 00 01 	lds	r18, 0x0100
     fdc:	82 2f       	mov	r24, r18
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	01 97       	sbiw	r24, 0x01	; 1
     fe2:	99 23       	and	r25, r25
     fe4:	24 f0       	brlt	.+8      	; 0xfee <ButtonPress4+0x188>
			{
				lives--;
     fe6:	21 50       	subi	r18, 0x01	; 1
     fe8:	20 93 00 01 	sts	0x0100, r18
     fec:	03 c0       	rjmp	.+6      	; 0xff4 <ButtonPress4+0x18e>
			}
			else
			{
				global_g = 20;
     fee:	84 e1       	ldi	r24, 0x14	; 20
     ff0:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
     ff4:	8d e0       	ldi	r24, 0x0D	; 13
     ff6:	80 93 1c 01 	sts	0x011C, r24
     ffa:	d4 c0       	rjmp	.+424    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state6:
		if(~PINB & 0x02)
     ffc:	19 99       	sbic	0x03, 1	; 3
     ffe:	05 c0       	rjmp	.+10     	; 0x100a <ButtonPress4+0x1a4>
		{
			while(~PINB & 0x02){}
    1000:	19 9b       	sbis	0x03, 1	; 3
    1002:	fe cf       	rjmp	.-4      	; 0x1000 <ButtonPress4+0x19a>
			Press_fourth_level = Press4_state7;
    1004:	87 e0       	ldi	r24, 0x07	; 7
    1006:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    100a:	18 9b       	sbis	0x03, 0	; 3
    100c:	04 c0       	rjmp	.+8      	; 0x1016 <ButtonPress4+0x1b0>
    100e:	1a 9b       	sbis	0x03, 2	; 3
    1010:	02 c0       	rjmp	.+4      	; 0x1016 <ButtonPress4+0x1b0>
    1012:	1b 99       	sbic	0x03, 3	; 3
    1014:	bb c0       	rjmp	.+374    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
    1016:	20 91 00 01 	lds	r18, 0x0100
    101a:	82 2f       	mov	r24, r18
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	01 97       	sbiw	r24, 0x01	; 1
    1020:	99 23       	and	r25, r25
    1022:	24 f0       	brlt	.+8      	; 0x102c <ButtonPress4+0x1c6>
			{
				lives--;
    1024:	21 50       	subi	r18, 0x01	; 1
    1026:	20 93 00 01 	sts	0x0100, r18
    102a:	03 c0       	rjmp	.+6      	; 0x1032 <ButtonPress4+0x1cc>
			}
			else
			{
				global_g = 20;
    102c:	84 e1       	ldi	r24, 0x14	; 20
    102e:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
    1032:	8d e0       	ldi	r24, 0x0D	; 13
    1034:	80 93 1c 01 	sts	0x011C, r24
    1038:	b5 c0       	rjmp	.+362    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state7:
		if(~PINB & 0x01)
    103a:	18 99       	sbic	0x03, 0	; 3
    103c:	05 c0       	rjmp	.+10     	; 0x1048 <ButtonPress4+0x1e2>
		{
			while(~PINB & 0x01){}
    103e:	18 9b       	sbis	0x03, 0	; 3
    1040:	fe cf       	rjmp	.-4      	; 0x103e <ButtonPress4+0x1d8>
			Press_fourth_level = Press4_state8;
    1042:	88 e0       	ldi	r24, 0x08	; 8
    1044:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1048:	19 9b       	sbis	0x03, 1	; 3
    104a:	04 c0       	rjmp	.+8      	; 0x1054 <ButtonPress4+0x1ee>
    104c:	1a 9b       	sbis	0x03, 2	; 3
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <ButtonPress4+0x1ee>
    1050:	1b 99       	sbic	0x03, 3	; 3
    1052:	9c c0       	rjmp	.+312    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
    1054:	20 91 00 01 	lds	r18, 0x0100
    1058:	82 2f       	mov	r24, r18
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	99 23       	and	r25, r25
    1060:	24 f0       	brlt	.+8      	; 0x106a <ButtonPress4+0x204>
			{
				lives--;
    1062:	21 50       	subi	r18, 0x01	; 1
    1064:	20 93 00 01 	sts	0x0100, r18
    1068:	03 c0       	rjmp	.+6      	; 0x1070 <ButtonPress4+0x20a>
			}
			else
			{
				global_g = 20;
    106a:	84 e1       	ldi	r24, 0x14	; 20
    106c:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
    1070:	8d e0       	ldi	r24, 0x0D	; 13
    1072:	80 93 1c 01 	sts	0x011C, r24
    1076:	96 c0       	rjmp	.+300    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state8:
		if(~PINB & 0x08)
    1078:	1b 99       	sbic	0x03, 3	; 3
    107a:	05 c0       	rjmp	.+10     	; 0x1086 <ButtonPress4+0x220>
		{
			while(~PINB & 0x08){}
    107c:	1b 9b       	sbis	0x03, 3	; 3
    107e:	fe cf       	rjmp	.-4      	; 0x107c <ButtonPress4+0x216>
			Press_fourth_level = Press4_state9;
    1080:	89 e0       	ldi	r24, 0x09	; 9
    1082:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1086:	19 9b       	sbis	0x03, 1	; 3
    1088:	04 c0       	rjmp	.+8      	; 0x1092 <ButtonPress4+0x22c>
    108a:	1a 9b       	sbis	0x03, 2	; 3
    108c:	02 c0       	rjmp	.+4      	; 0x1092 <ButtonPress4+0x22c>
    108e:	18 99       	sbic	0x03, 0	; 3
    1090:	7d c0       	rjmp	.+250    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
    1092:	20 91 00 01 	lds	r18, 0x0100
    1096:	82 2f       	mov	r24, r18
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	01 97       	sbiw	r24, 0x01	; 1
    109c:	99 23       	and	r25, r25
    109e:	24 f0       	brlt	.+8      	; 0x10a8 <ButtonPress4+0x242>
			{
				lives--;
    10a0:	21 50       	subi	r18, 0x01	; 1
    10a2:	20 93 00 01 	sts	0x0100, r18
    10a6:	03 c0       	rjmp	.+6      	; 0x10ae <ButtonPress4+0x248>
			}
			else
			{
				global_g = 20;
    10a8:	84 e1       	ldi	r24, 0x14	; 20
    10aa:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
    10ae:	8d e0       	ldi	r24, 0x0D	; 13
    10b0:	80 93 1c 01 	sts	0x011C, r24
    10b4:	77 c0       	rjmp	.+238    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state9:
		if(~PINB & 0x01)
    10b6:	18 99       	sbic	0x03, 0	; 3
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <ButtonPress4+0x25e>
		{
			while(~PINB & 0x01){}
    10ba:	18 9b       	sbis	0x03, 0	; 3
    10bc:	fe cf       	rjmp	.-4      	; 0x10ba <ButtonPress4+0x254>
			Press_fourth_level = Press4_state10;
    10be:	8a e0       	ldi	r24, 0x0A	; 10
    10c0:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    10c4:	19 9b       	sbis	0x03, 1	; 3
    10c6:	04 c0       	rjmp	.+8      	; 0x10d0 <ButtonPress4+0x26a>
    10c8:	1a 9b       	sbis	0x03, 2	; 3
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <ButtonPress4+0x26a>
    10cc:	1b 99       	sbic	0x03, 3	; 3
    10ce:	5e c0       	rjmp	.+188    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
    10d0:	20 91 00 01 	lds	r18, 0x0100
    10d4:	82 2f       	mov	r24, r18
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	01 97       	sbiw	r24, 0x01	; 1
    10da:	99 23       	and	r25, r25
    10dc:	24 f0       	brlt	.+8      	; 0x10e6 <ButtonPress4+0x280>
			{
				lives--;
    10de:	21 50       	subi	r18, 0x01	; 1
    10e0:	20 93 00 01 	sts	0x0100, r18
    10e4:	03 c0       	rjmp	.+6      	; 0x10ec <ButtonPress4+0x286>
			}
			else
			{
				global_g = 20;
    10e6:	84 e1       	ldi	r24, 0x14	; 20
    10e8:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
    10ec:	8d e0       	ldi	r24, 0x0D	; 13
    10ee:	80 93 1c 01 	sts	0x011C, r24
    10f2:	58 c0       	rjmp	.+176    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state10:
		if(~PINB & 0x02)
    10f4:	19 99       	sbic	0x03, 1	; 3
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <ButtonPress4+0x29c>
		{
			while(~PINB & 0x02){}
    10f8:	19 9b       	sbis	0x03, 1	; 3
    10fa:	fe cf       	rjmp	.-4      	; 0x10f8 <ButtonPress4+0x292>
			Press_fourth_level = Press4_state11;
    10fc:	8b e0       	ldi	r24, 0x0B	; 11
    10fe:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1102:	18 9b       	sbis	0x03, 0	; 3
    1104:	04 c0       	rjmp	.+8      	; 0x110e <ButtonPress4+0x2a8>
    1106:	1a 9b       	sbis	0x03, 2	; 3
    1108:	02 c0       	rjmp	.+4      	; 0x110e <ButtonPress4+0x2a8>
    110a:	1b 99       	sbic	0x03, 3	; 3
    110c:	3f c0       	rjmp	.+126    	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
    110e:	20 91 00 01 	lds	r18, 0x0100
    1112:	82 2f       	mov	r24, r18
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	01 97       	sbiw	r24, 0x01	; 1
    1118:	99 23       	and	r25, r25
    111a:	24 f0       	brlt	.+8      	; 0x1124 <ButtonPress4+0x2be>
			{
				lives--;
    111c:	21 50       	subi	r18, 0x01	; 1
    111e:	20 93 00 01 	sts	0x0100, r18
    1122:	03 c0       	rjmp	.+6      	; 0x112a <ButtonPress4+0x2c4>
			}
			else
			{
				global_g = 20;
    1124:	84 e1       	ldi	r24, 0x14	; 20
    1126:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
    112a:	8d e0       	ldi	r24, 0x0D	; 13
    112c:	80 93 1c 01 	sts	0x011C, r24
    1130:	39 c0       	rjmp	.+114    	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		
		case Press4_state11:
		if(~PINB & 0x01)
    1132:	18 99       	sbic	0x03, 0	; 3
    1134:	05 c0       	rjmp	.+10     	; 0x1140 <ButtonPress4+0x2da>
		{
			while(~PINB & 0x01){}
    1136:	18 9b       	sbis	0x03, 0	; 3
    1138:	fe cf       	rjmp	.-4      	; 0x1136 <ButtonPress4+0x2d0>
			Press_fourth_level = Press4_state12;
    113a:	8c e0       	ldi	r24, 0x0C	; 12
    113c:	80 93 1c 01 	sts	0x011C, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1140:	19 9b       	sbis	0x03, 1	; 3
    1142:	04 c0       	rjmp	.+8      	; 0x114c <ButtonPress4+0x2e6>
    1144:	1a 9b       	sbis	0x03, 2	; 3
    1146:	02 c0       	rjmp	.+4      	; 0x114c <ButtonPress4+0x2e6>
    1148:	1b 99       	sbic	0x03, 3	; 3
    114a:	20 c0       	rjmp	.+64     	; 0x118c <ButtonPress4+0x326>
		{
			if(lives - 1 > -1)
    114c:	20 91 00 01 	lds	r18, 0x0100
    1150:	82 2f       	mov	r24, r18
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	99 23       	and	r25, r25
    1158:	24 f0       	brlt	.+8      	; 0x1162 <ButtonPress4+0x2fc>
			{
				lives--;
    115a:	21 50       	subi	r18, 0x01	; 1
    115c:	20 93 00 01 	sts	0x0100, r18
    1160:	03 c0       	rjmp	.+6      	; 0x1168 <ButtonPress4+0x302>
			}
			else
			{
				global_g = 20;
    1162:	84 e1       	ldi	r24, 0x14	; 20
    1164:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fourth_level = Error4;
    1168:	8d e0       	ldi	r24, 0x0D	; 13
    116a:	80 93 1c 01 	sts	0x011C, r24
    116e:	1a c0       	rjmp	.+52     	; 0x11a4 <ButtonPress4+0x33e>
		}
		break;
		case Press4_state12:
		if(~PINB & 0x10)
    1170:	1c 99       	sbic	0x03, 4	; 3
    1172:	6c c0       	rjmp	.+216    	; 0x124c <ButtonPress4+0x3e6>
		{
			Press_fourth_level = Off4;
    1174:	8e e0       	ldi	r24, 0x0E	; 14
    1176:	80 93 1c 01 	sts	0x011C, r24
    117a:	6f c0       	rjmp	.+222    	; 0x125a <ButtonPress4+0x3f4>
		}
		break;
		case Error4:
		if(~PINB & 0x01)
    117c:	18 99       	sbic	0x03, 0	; 3
    117e:	12 c0       	rjmp	.+36     	; 0x11a4 <ButtonPress4+0x33e>
		{
			while(~PINB & 0x01){}
    1180:	18 9b       	sbis	0x03, 0	; 3
    1182:	fe cf       	rjmp	.-4      	; 0x1180 <ButtonPress4+0x31a>
			Press_fourth_level = Press4_state1;
    1184:	81 e0       	ldi	r24, 0x01	; 1
    1186:	80 93 1c 01 	sts	0x011C, r24
    118a:	13 c0       	rjmp	.+38     	; 0x11b2 <ButtonPress4+0x34c>
		}
	}
	switch(Press_fourth_level)
    118c:	80 91 1c 01 	lds	r24, 0x011C
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	fc 01       	movw	r30, r24
    1194:	31 97       	sbiw	r30, 0x01	; 1
    1196:	ee 30       	cpi	r30, 0x0E	; 14
    1198:	f1 05       	cpc	r31, r1
    119a:	08 f0       	brcs	.+2      	; 0x119e <ButtonPress4+0x338>
    119c:	66 c0       	rjmp	.+204    	; 0x126a <ButtonPress4+0x404>
    119e:	eb 54       	subi	r30, 0x4B	; 75
    11a0:	ff 4f       	sbci	r31, 0xFF	; 255
    11a2:	36 c5       	rjmp	.+2668   	; 0x1c10 <__tablejump2__>
	{
		case Error4:
		transmit_data(simon_SevenSeg(lives));
    11a4:	80 91 00 01 	lds	r24, 0x0100
    11a8:	2a d9       	rcall	.-3500   	; 0x3fe <simon_SevenSeg>
    11aa:	0c d9       	rcall	.-3560   	; 0x3c4 <transmit_data>
		PORTA = 0x10;
    11ac:	80 e1       	ldi	r24, 0x10	; 16
    11ae:	82 b9       	out	0x02, r24	; 2
		break;
    11b0:	08 95       	ret
		case Press4_state1:
		transmit_data(simon_SevenSeg(lives));
    11b2:	80 91 00 01 	lds	r24, 0x0100
    11b6:	23 d9       	rcall	.-3514   	; 0x3fe <simon_SevenSeg>
    11b8:	05 d9       	rcall	.-3574   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    11ba:	81 e0       	ldi	r24, 0x01	; 1
    11bc:	82 b9       	out	0x02, r24	; 2
		break;
    11be:	08 95       	ret
		case Press4_state2:
		transmit_data(simon_SevenSeg(lives));
    11c0:	80 91 00 01 	lds	r24, 0x0100
    11c4:	1c d9       	rcall	.-3528   	; 0x3fe <simon_SevenSeg>
    11c6:	fe d8       	rcall	.-3588   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    11c8:	88 e0       	ldi	r24, 0x08	; 8
    11ca:	82 b9       	out	0x02, r24	; 2
		break;
    11cc:	08 95       	ret
		case Press4_state3:
		transmit_data(simon_SevenSeg(lives));
    11ce:	80 91 00 01 	lds	r24, 0x0100
    11d2:	15 d9       	rcall	.-3542   	; 0x3fe <simon_SevenSeg>
    11d4:	f7 d8       	rcall	.-3602   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    11d6:	82 e0       	ldi	r24, 0x02	; 2
    11d8:	82 b9       	out	0x02, r24	; 2
		break;
    11da:	08 95       	ret
		case Press4_state4:
		transmit_data(simon_SevenSeg(lives));
    11dc:	80 91 00 01 	lds	r24, 0x0100
    11e0:	0e d9       	rcall	.-3556   	; 0x3fe <simon_SevenSeg>
    11e2:	f0 d8       	rcall	.-3616   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    11e4:	81 e0       	ldi	r24, 0x01	; 1
    11e6:	82 b9       	out	0x02, r24	; 2
		break;
    11e8:	08 95       	ret
		case Press4_state5:
		transmit_data(simon_SevenSeg(lives));
    11ea:	80 91 00 01 	lds	r24, 0x0100
    11ee:	07 d9       	rcall	.-3570   	; 0x3fe <simon_SevenSeg>
    11f0:	e9 d8       	rcall	.-3630   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    11f2:	82 e0       	ldi	r24, 0x02	; 2
    11f4:	82 b9       	out	0x02, r24	; 2
		break;
    11f6:	08 95       	ret
		case Press4_state6:
		transmit_data(simon_SevenSeg(lives));
    11f8:	80 91 00 01 	lds	r24, 0x0100
    11fc:	00 d9       	rcall	.-3584   	; 0x3fe <simon_SevenSeg>
    11fe:	e2 d8       	rcall	.-3644   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    1200:	88 e0       	ldi	r24, 0x08	; 8
    1202:	82 b9       	out	0x02, r24	; 2
		break;
    1204:	08 95       	ret
		case Press4_state7:
		transmit_data(simon_SevenSeg(lives));
    1206:	80 91 00 01 	lds	r24, 0x0100
    120a:	f9 d8       	rcall	.-3598   	; 0x3fe <simon_SevenSeg>
    120c:	db d8       	rcall	.-3658   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    120e:	82 e0       	ldi	r24, 0x02	; 2
    1210:	82 b9       	out	0x02, r24	; 2
		break;
    1212:	08 95       	ret
		case Press4_state8:
		transmit_data(simon_SevenSeg(lives));
    1214:	80 91 00 01 	lds	r24, 0x0100
    1218:	f2 d8       	rcall	.-3612   	; 0x3fe <simon_SevenSeg>
    121a:	d4 d8       	rcall	.-3672   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    121c:	81 e0       	ldi	r24, 0x01	; 1
    121e:	82 b9       	out	0x02, r24	; 2
		break;
    1220:	08 95       	ret
		case Press4_state9:
		transmit_data(simon_SevenSeg(lives));
    1222:	80 91 00 01 	lds	r24, 0x0100
    1226:	eb d8       	rcall	.-3626   	; 0x3fe <simon_SevenSeg>
    1228:	cd d8       	rcall	.-3686   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    122a:	88 e0       	ldi	r24, 0x08	; 8
    122c:	82 b9       	out	0x02, r24	; 2
		break;
    122e:	08 95       	ret
		case Press4_state10:
		transmit_data(simon_SevenSeg(lives));
    1230:	80 91 00 01 	lds	r24, 0x0100
    1234:	e4 d8       	rcall	.-3640   	; 0x3fe <simon_SevenSeg>
    1236:	c6 d8       	rcall	.-3700   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	82 b9       	out	0x02, r24	; 2
		break;
    123c:	08 95       	ret
		case Press4_state11:
		transmit_data(simon_SevenSeg(lives));
    123e:	80 91 00 01 	lds	r24, 0x0100
    1242:	dd d8       	rcall	.-3654   	; 0x3fe <simon_SevenSeg>
    1244:	bf d8       	rcall	.-3714   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    1246:	82 e0       	ldi	r24, 0x02	; 2
    1248:	82 b9       	out	0x02, r24	; 2
		break;
    124a:	08 95       	ret
		case Press4_state12:
		transmit_data(simon_SevenSeg(lives));
    124c:	80 91 00 01 	lds	r24, 0x0100
    1250:	d6 d8       	rcall	.-3668   	; 0x3fe <simon_SevenSeg>
    1252:	b8 d8       	rcall	.-3728   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1254:	81 e0       	ldi	r24, 0x01	; 1
    1256:	82 b9       	out	0x02, r24	; 2
		break;
    1258:	08 95       	ret
		case Off4:
		transmit_data(simon_SevenSeg(lives));
    125a:	80 91 00 01 	lds	r24, 0x0100
    125e:	cf d8       	rcall	.-3682   	; 0x3fe <simon_SevenSeg>
    1260:	b1 d8       	rcall	.-3742   	; 0x3c4 <transmit_data>
		PORTA = 0x00;
    1262:	12 b8       	out	0x02, r1	; 2
		global_g = 8;
    1264:	88 e0       	ldi	r24, 0x08	; 8
    1266:	80 93 12 01 	sts	0x0112, r24
    126a:	08 95       	ret

0000126c <TickFct_Machine5>:
}	

enum SM5_States{SM5_off, SM5_on1, SM5_on2, SM5_on3, SM5_on4, SM5_on5, SM5_on6, SM5_on7, SM5_on8, SM5_on9, SM5_on10, SM5_on11, SM5_on12, SM5_on13, SM5_on14, SM5_on15} SM5_States;
void TickFct_Machine5()
{
	switch(SM5_States)
    126c:	20 91 20 01 	lds	r18, 0x0120
    1270:	82 2f       	mov	r24, r18
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	80 31       	cpi	r24, 0x10	; 16
    1276:	91 05       	cpc	r25, r1
    1278:	08 f0       	brcs	.+2      	; 0x127c <TickFct_Machine5+0x10>
    127a:	4c c0       	rjmp	.+152    	; 0x1314 <TickFct_Machine5+0xa8>
    127c:	fc 01       	movw	r30, r24
    127e:	ed 53       	subi	r30, 0x3D	; 61
    1280:	ff 4f       	sbci	r31, 0xFF	; 255
    1282:	c6 c4       	rjmp	.+2444   	; 0x1c10 <__tablejump2__>
	{
		LCD_init();
		LCD_DisplayString(1, "Level Five");
		case SM5_off:
		if(global_g == 8)
    1284:	80 91 12 01 	lds	r24, 0x0112
    1288:	88 30       	cpi	r24, 0x08	; 8
    128a:	09 f0       	breq	.+2      	; 0x128e <TickFct_Machine5+0x22>
    128c:	4c c0       	rjmp	.+152    	; 0x1326 <TickFct_Machine5+0xba>
		{
			if(~PINB & 0x01)
    128e:	18 99       	sbic	0x03, 0	; 3
    1290:	4a c0       	rjmp	.+148    	; 0x1326 <TickFct_Machine5+0xba>
			{
				while(~PINB & 0x01){}
    1292:	18 9b       	sbis	0x03, 0	; 3
    1294:	fe cf       	rjmp	.-4      	; 0x1292 <TickFct_Machine5+0x26>
				SM5_States = SM5_on1;
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	80 93 20 01 	sts	0x0120, r24
    129c:	46 c0       	rjmp	.+140    	; 0x132a <TickFct_Machine5+0xbe>
				SM5_States = SM5_off;
			}
		}
		break;
		case SM5_on1:
		SM5_States = SM5_on2;
    129e:	82 e0       	ldi	r24, 0x02	; 2
    12a0:	80 93 20 01 	sts	0x0120, r24
    12a4:	45 c0       	rjmp	.+138    	; 0x1330 <TickFct_Machine5+0xc4>
		break;
		case SM5_on2:
		SM5_States = SM5_on3;
    12a6:	83 e0       	ldi	r24, 0x03	; 3
    12a8:	80 93 20 01 	sts	0x0120, r24
    12ac:	44 c0       	rjmp	.+136    	; 0x1336 <TickFct_Machine5+0xca>
		break;
		case SM5_on3:
		SM5_States = SM5_on4;
    12ae:	84 e0       	ldi	r24, 0x04	; 4
    12b0:	80 93 20 01 	sts	0x0120, r24
    12b4:	43 c0       	rjmp	.+134    	; 0x133c <TickFct_Machine5+0xd0>
		break;
		case SM5_on4:
		SM5_States = SM5_on5;
    12b6:	85 e0       	ldi	r24, 0x05	; 5
    12b8:	80 93 20 01 	sts	0x0120, r24
    12bc:	42 c0       	rjmp	.+132    	; 0x1342 <TickFct_Machine5+0xd6>
		break;
		case SM5_on5:
		SM5_States = SM5_on6;
    12be:	86 e0       	ldi	r24, 0x06	; 6
    12c0:	80 93 20 01 	sts	0x0120, r24
    12c4:	41 c0       	rjmp	.+130    	; 0x1348 <TickFct_Machine5+0xdc>
		break;
		case SM5_on6:
		SM5_States = SM5_on7;
    12c6:	87 e0       	ldi	r24, 0x07	; 7
    12c8:	80 93 20 01 	sts	0x0120, r24
    12cc:	40 c0       	rjmp	.+128    	; 0x134e <TickFct_Machine5+0xe2>
		break;
		case SM5_on7:
		SM5_States = SM5_on8;
    12ce:	88 e0       	ldi	r24, 0x08	; 8
    12d0:	80 93 20 01 	sts	0x0120, r24
    12d4:	3f c0       	rjmp	.+126    	; 0x1354 <TickFct_Machine5+0xe8>
		break;
		case SM5_on8:
		SM5_States = SM5_on9;
    12d6:	89 e0       	ldi	r24, 0x09	; 9
    12d8:	80 93 20 01 	sts	0x0120, r24
    12dc:	3e c0       	rjmp	.+124    	; 0x135a <TickFct_Machine5+0xee>
		break;
		case SM5_on9:
		SM5_States = SM5_on10;
    12de:	8a e0       	ldi	r24, 0x0A	; 10
    12e0:	80 93 20 01 	sts	0x0120, r24
    12e4:	3d c0       	rjmp	.+122    	; 0x1360 <TickFct_Machine5+0xf4>
		break;
		case SM5_on10:
		SM5_States = SM5_on11;
    12e6:	8b e0       	ldi	r24, 0x0B	; 11
    12e8:	80 93 20 01 	sts	0x0120, r24
    12ec:	3c c0       	rjmp	.+120    	; 0x1366 <TickFct_Machine5+0xfa>
		break;
		case SM5_on11:
		SM5_States = SM5_on12;
    12ee:	8c e0       	ldi	r24, 0x0C	; 12
    12f0:	80 93 20 01 	sts	0x0120, r24
    12f4:	3b c0       	rjmp	.+118    	; 0x136c <TickFct_Machine5+0x100>
		break;
		case SM5_on12:
		SM5_States = SM5_on13;
    12f6:	8d e0       	ldi	r24, 0x0D	; 13
    12f8:	80 93 20 01 	sts	0x0120, r24
    12fc:	3a c0       	rjmp	.+116    	; 0x1372 <TickFct_Machine5+0x106>
		break;
		case SM5_on13:
		SM5_States = SM5_on14;
    12fe:	8e e0       	ldi	r24, 0x0E	; 14
    1300:	80 93 20 01 	sts	0x0120, r24
    1304:	39 c0       	rjmp	.+114    	; 0x1378 <TickFct_Machine5+0x10c>
		break;
		case SM5_on14:
		SM5_States = SM5_on15;
    1306:	8f e0       	ldi	r24, 0x0F	; 15
    1308:	80 93 20 01 	sts	0x0120, r24
    130c:	38 c0       	rjmp	.+112    	; 0x137e <TickFct_Machine5+0x112>
		break;
		case SM5_on15:
		SM5_States = SM5_off;
    130e:	10 92 20 01 	sts	0x0120, r1
		break;
    1312:	09 c0       	rjmp	.+18     	; 0x1326 <TickFct_Machine5+0xba>
	}
	switch(SM5_States)
    1314:	82 2f       	mov	r24, r18
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	80 31       	cpi	r24, 0x10	; 16
    131a:	91 05       	cpc	r25, r1
    131c:	a8 f5       	brcc	.+106    	; 0x1388 <TickFct_Machine5+0x11c>
    131e:	fc 01       	movw	r30, r24
    1320:	ed 52       	subi	r30, 0x2D	; 45
    1322:	ff 4f       	sbci	r31, 0xFF	; 255
    1324:	75 c4       	rjmp	.+2282   	; 0x1c10 <__tablejump2__>
	{
		case SM5_off:
		PORTA = 0x00;
    1326:	12 b8       	out	0x02, r1	; 2
		break;
    1328:	08 95       	ret
		case SM5_on1:
		PORTA = 0x08;
    132a:	88 e0       	ldi	r24, 0x08	; 8
    132c:	82 b9       	out	0x02, r24	; 2
		break;
    132e:	08 95       	ret
		case SM5_on2:
		PORTA = 0x04;
    1330:	84 e0       	ldi	r24, 0x04	; 4
    1332:	82 b9       	out	0x02, r24	; 2
		break;
    1334:	08 95       	ret
		case SM5_on3:
		PORTA = 0x02;
    1336:	82 e0       	ldi	r24, 0x02	; 2
    1338:	82 b9       	out	0x02, r24	; 2
		break;
    133a:	08 95       	ret
		case SM5_on4:
		PORTA = 0x01;
    133c:	81 e0       	ldi	r24, 0x01	; 1
    133e:	82 b9       	out	0x02, r24	; 2
		break;
    1340:	08 95       	ret
		case SM5_on5:
		PORTA = 0x02;
    1342:	82 e0       	ldi	r24, 0x02	; 2
    1344:	82 b9       	out	0x02, r24	; 2
		break;
    1346:	08 95       	ret
		case SM5_on6:
		PORTA = 0x01;
    1348:	81 e0       	ldi	r24, 0x01	; 1
    134a:	82 b9       	out	0x02, r24	; 2
		break;
    134c:	08 95       	ret
		case SM5_on7:
		PORTA = 0x04;
    134e:	84 e0       	ldi	r24, 0x04	; 4
    1350:	82 b9       	out	0x02, r24	; 2
		break;
    1352:	08 95       	ret
		case SM5_on8:
		PORTA = 0x08;
    1354:	88 e0       	ldi	r24, 0x08	; 8
    1356:	82 b9       	out	0x02, r24	; 2
		break;
    1358:	08 95       	ret
		case SM5_on9:
		PORTA = 0x02;
    135a:	82 e0       	ldi	r24, 0x02	; 2
    135c:	82 b9       	out	0x02, r24	; 2
		break;
    135e:	08 95       	ret
		case SM5_on10:
		PORTA = 0x01;
    1360:	81 e0       	ldi	r24, 0x01	; 1
    1362:	82 b9       	out	0x02, r24	; 2
		break;
    1364:	08 95       	ret
		case SM5_on11:
		PORTA = 0x02;
    1366:	82 e0       	ldi	r24, 0x02	; 2
    1368:	82 b9       	out	0x02, r24	; 2
		break;
    136a:	08 95       	ret
		case SM5_on12:
		PORTA = 0x01;
    136c:	81 e0       	ldi	r24, 0x01	; 1
    136e:	82 b9       	out	0x02, r24	; 2
		break;
    1370:	08 95       	ret
		case SM5_on13:
		PORTA = 0x04;
    1372:	84 e0       	ldi	r24, 0x04	; 4
    1374:	82 b9       	out	0x02, r24	; 2
		break;
    1376:	08 95       	ret
		case SM5_on14:
		PORTA = 0x08;
    1378:	88 e0       	ldi	r24, 0x08	; 8
    137a:	82 b9       	out	0x02, r24	; 2
		break;
    137c:	08 95       	ret
		case SM5_on15:
		PORTA = 0x01;
    137e:	81 e0       	ldi	r24, 0x01	; 1
    1380:	82 b9       	out	0x02, r24	; 2
		global_g = 9;
    1382:	89 e0       	ldi	r24, 0x09	; 9
    1384:	80 93 12 01 	sts	0x0112, r24
    1388:	08 95       	ret

0000138a <ButtonPress5>:
}

enum Press_fifth_level{Init5, Press5_state1, Press5_state2, Press5_state3, Press5_state4, Press5_state5, Press5_state6, Press5_state7, Press5_state8, Press5_state9, Press5_state10, Press5_state11, Press5_state12, Press5_state13, Press5_state14, Press5_state15, Error5, Off5} Press_fifth_level;
void ButtonPress5()
{
	switch(Press_fifth_level)
    138a:	80 91 21 01 	lds	r24, 0x0121
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	81 31       	cpi	r24, 0x11	; 17
    1392:	91 05       	cpc	r25, r1
    1394:	08 f0       	brcs	.+2      	; 0x1398 <ButtonPress5+0xe>
    1396:	e9 c1       	rjmp	.+978    	; 0x176a <ButtonPress5+0x3e0>
    1398:	fc 01       	movw	r30, r24
    139a:	ed 51       	subi	r30, 0x1D	; 29
    139c:	ff 4f       	sbci	r31, 0xFF	; 255
    139e:	38 c4       	rjmp	.+2160   	; 0x1c10 <__tablejump2__>
	{
		case Init5:
		if(global_g == 9)
    13a0:	80 91 12 01 	lds	r24, 0x0112
    13a4:	89 30       	cpi	r24, 0x09	; 9
    13a6:	09 f0       	breq	.+2      	; 0x13aa <ButtonPress5+0x20>
    13a8:	7d c2       	rjmp	.+1274   	; 0x18a4 <ButtonPress5+0x51a>
		{
			PORTA = 0x00;
    13aa:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x08)
    13ac:	1b 99       	sbic	0x03, 3	; 3
    13ae:	05 c0       	rjmp	.+10     	; 0x13ba <ButtonPress5+0x30>
			{
				while(~PINB & 0x08){}
    13b0:	1b 9b       	sbis	0x03, 3	; 3
    13b2:	fe cf       	rjmp	.-4      	; 0x13b0 <ButtonPress5+0x26>
				Press_fifth_level = Press5_state1;
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	80 93 21 01 	sts	0x0121, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    13ba:	19 9b       	sbis	0x03, 1	; 3
    13bc:	04 c0       	rjmp	.+8      	; 0x13c6 <ButtonPress5+0x3c>
    13be:	1a 9b       	sbis	0x03, 2	; 3
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <ButtonPress5+0x3c>
    13c2:	18 99       	sbic	0x03, 0	; 3
    13c4:	d2 c1       	rjmp	.+932    	; 0x176a <ButtonPress5+0x3e0>
			{
				if(lives - 1 > -1)
    13c6:	20 91 00 01 	lds	r18, 0x0100
    13ca:	82 2f       	mov	r24, r18
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	01 97       	sbiw	r24, 0x01	; 1
    13d0:	99 23       	and	r25, r25
    13d2:	24 f0       	brlt	.+8      	; 0x13dc <ButtonPress5+0x52>
				{
					lives--;
    13d4:	21 50       	subi	r18, 0x01	; 1
    13d6:	20 93 00 01 	sts	0x0100, r18
    13da:	03 c0       	rjmp	.+6      	; 0x13e2 <ButtonPress5+0x58>
				}
				else
				{
					global_g = 20;
    13dc:	84 e1       	ldi	r24, 0x14	; 20
    13de:	80 93 12 01 	sts	0x0112, r24
				}
				Press_fifth_level = Error5;
    13e2:	80 e1       	ldi	r24, 0x10	; 16
    13e4:	80 93 21 01 	sts	0x0121, r24
    13e8:	cc c1       	rjmp	.+920    	; 0x1782 <ButtonPress5+0x3f8>
			}
		}
		break;
		case Press5_state1:
		if(~PINB & 0x04)
    13ea:	1a 99       	sbic	0x03, 2	; 3
    13ec:	05 c0       	rjmp	.+10     	; 0x13f8 <ButtonPress5+0x6e>
		{
			while(~PINB & 0x04){}
    13ee:	1a 9b       	sbis	0x03, 2	; 3
    13f0:	fe cf       	rjmp	.-4      	; 0x13ee <ButtonPress5+0x64>
			Press_fifth_level = Press5_state2;
    13f2:	82 e0       	ldi	r24, 0x02	; 2
    13f4:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    13f8:	19 9b       	sbis	0x03, 1	; 3
    13fa:	04 c0       	rjmp	.+8      	; 0x1404 <ButtonPress5+0x7a>
    13fc:	18 9b       	sbis	0x03, 0	; 3
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <ButtonPress5+0x7a>
    1400:	1b 99       	sbic	0x03, 3	; 3
    1402:	b3 c1       	rjmp	.+870    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    1404:	20 91 00 01 	lds	r18, 0x0100
    1408:	82 2f       	mov	r24, r18
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	01 97       	sbiw	r24, 0x01	; 1
    140e:	99 23       	and	r25, r25
    1410:	24 f0       	brlt	.+8      	; 0x141a <ButtonPress5+0x90>
			{
				lives--;
    1412:	21 50       	subi	r18, 0x01	; 1
    1414:	20 93 00 01 	sts	0x0100, r18
    1418:	03 c0       	rjmp	.+6      	; 0x1420 <ButtonPress5+0x96>
			}
			else
			{
				global_g = 20;
    141a:	84 e1       	ldi	r24, 0x14	; 20
    141c:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    1420:	80 e1       	ldi	r24, 0x10	; 16
    1422:	80 93 21 01 	sts	0x0121, r24
    1426:	ad c1       	rjmp	.+858    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state2:
		if(~PINB & 0x02)
    1428:	19 99       	sbic	0x03, 1	; 3
    142a:	05 c0       	rjmp	.+10     	; 0x1436 <ButtonPress5+0xac>
		{
			while(~PINB & 0x02){}
    142c:	19 9b       	sbis	0x03, 1	; 3
    142e:	fe cf       	rjmp	.-4      	; 0x142c <ButtonPress5+0xa2>
			Press_fifth_level = Press5_state3;
    1430:	83 e0       	ldi	r24, 0x03	; 3
    1432:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1436:	18 9b       	sbis	0x03, 0	; 3
    1438:	04 c0       	rjmp	.+8      	; 0x1442 <ButtonPress5+0xb8>
    143a:	1a 9b       	sbis	0x03, 2	; 3
    143c:	02 c0       	rjmp	.+4      	; 0x1442 <ButtonPress5+0xb8>
    143e:	1b 99       	sbic	0x03, 3	; 3
    1440:	94 c1       	rjmp	.+808    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    1442:	20 91 00 01 	lds	r18, 0x0100
    1446:	82 2f       	mov	r24, r18
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	01 97       	sbiw	r24, 0x01	; 1
    144c:	99 23       	and	r25, r25
    144e:	24 f0       	brlt	.+8      	; 0x1458 <ButtonPress5+0xce>
			{
				lives--;
    1450:	21 50       	subi	r18, 0x01	; 1
    1452:	20 93 00 01 	sts	0x0100, r18
    1456:	03 c0       	rjmp	.+6      	; 0x145e <ButtonPress5+0xd4>
			}
			else
			{
				global_g = 20;
    1458:	84 e1       	ldi	r24, 0x14	; 20
    145a:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    145e:	80 e1       	ldi	r24, 0x10	; 16
    1460:	80 93 21 01 	sts	0x0121, r24
    1464:	8e c1       	rjmp	.+796    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state3:
		if(~PINB & 0x01)
    1466:	18 99       	sbic	0x03, 0	; 3
    1468:	05 c0       	rjmp	.+10     	; 0x1474 <ButtonPress5+0xea>
		{
			while(~PINB & 0x01){}
    146a:	18 9b       	sbis	0x03, 0	; 3
    146c:	fe cf       	rjmp	.-4      	; 0x146a <ButtonPress5+0xe0>
			Press_fifth_level = Press5_state4;
    146e:	84 e0       	ldi	r24, 0x04	; 4
    1470:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1474:	19 9b       	sbis	0x03, 1	; 3
    1476:	04 c0       	rjmp	.+8      	; 0x1480 <ButtonPress5+0xf6>
    1478:	1a 9b       	sbis	0x03, 2	; 3
    147a:	02 c0       	rjmp	.+4      	; 0x1480 <ButtonPress5+0xf6>
    147c:	1b 99       	sbic	0x03, 3	; 3
    147e:	75 c1       	rjmp	.+746    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    1480:	20 91 00 01 	lds	r18, 0x0100
    1484:	82 2f       	mov	r24, r18
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	01 97       	sbiw	r24, 0x01	; 1
    148a:	99 23       	and	r25, r25
    148c:	24 f0       	brlt	.+8      	; 0x1496 <ButtonPress5+0x10c>
			{
				lives--;
    148e:	21 50       	subi	r18, 0x01	; 1
    1490:	20 93 00 01 	sts	0x0100, r18
    1494:	03 c0       	rjmp	.+6      	; 0x149c <ButtonPress5+0x112>
			}
			else
			{
				global_g = 20;
    1496:	84 e1       	ldi	r24, 0x14	; 20
    1498:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    149c:	80 e1       	ldi	r24, 0x10	; 16
    149e:	80 93 21 01 	sts	0x0121, r24
    14a2:	6f c1       	rjmp	.+734    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state4:
		if(~PINB & 0x02)
    14a4:	19 99       	sbic	0x03, 1	; 3
    14a6:	05 c0       	rjmp	.+10     	; 0x14b2 <ButtonPress5+0x128>
		{
			while(~PINB & 0x02){}
    14a8:	19 9b       	sbis	0x03, 1	; 3
    14aa:	fe cf       	rjmp	.-4      	; 0x14a8 <ButtonPress5+0x11e>
			Press_fifth_level = Press5_state5;
    14ac:	85 e0       	ldi	r24, 0x05	; 5
    14ae:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    14b2:	18 9b       	sbis	0x03, 0	; 3
    14b4:	04 c0       	rjmp	.+8      	; 0x14be <ButtonPress5+0x134>
    14b6:	1a 9b       	sbis	0x03, 2	; 3
    14b8:	02 c0       	rjmp	.+4      	; 0x14be <ButtonPress5+0x134>
    14ba:	1b 99       	sbic	0x03, 3	; 3
    14bc:	56 c1       	rjmp	.+684    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    14be:	20 91 00 01 	lds	r18, 0x0100
    14c2:	82 2f       	mov	r24, r18
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	01 97       	sbiw	r24, 0x01	; 1
    14c8:	99 23       	and	r25, r25
    14ca:	24 f0       	brlt	.+8      	; 0x14d4 <ButtonPress5+0x14a>
			{
				lives--;
    14cc:	21 50       	subi	r18, 0x01	; 1
    14ce:	20 93 00 01 	sts	0x0100, r18
    14d2:	03 c0       	rjmp	.+6      	; 0x14da <ButtonPress5+0x150>
			}
			else
			{
				global_g = 20;
    14d4:	84 e1       	ldi	r24, 0x14	; 20
    14d6:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    14da:	80 e1       	ldi	r24, 0x10	; 16
    14dc:	80 93 21 01 	sts	0x0121, r24
    14e0:	50 c1       	rjmp	.+672    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state5:
		if(~PINB & 0x01)
    14e2:	18 99       	sbic	0x03, 0	; 3
    14e4:	05 c0       	rjmp	.+10     	; 0x14f0 <ButtonPress5+0x166>
		{
			while(~PINB & 0x01){}
    14e6:	18 9b       	sbis	0x03, 0	; 3
    14e8:	fe cf       	rjmp	.-4      	; 0x14e6 <ButtonPress5+0x15c>
			Press_fifth_level = Press5_state6;
    14ea:	86 e0       	ldi	r24, 0x06	; 6
    14ec:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    14f0:	19 9b       	sbis	0x03, 1	; 3
    14f2:	04 c0       	rjmp	.+8      	; 0x14fc <ButtonPress5+0x172>
    14f4:	1a 9b       	sbis	0x03, 2	; 3
    14f6:	02 c0       	rjmp	.+4      	; 0x14fc <ButtonPress5+0x172>
    14f8:	1b 99       	sbic	0x03, 3	; 3
    14fa:	37 c1       	rjmp	.+622    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    14fc:	20 91 00 01 	lds	r18, 0x0100
    1500:	82 2f       	mov	r24, r18
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	01 97       	sbiw	r24, 0x01	; 1
    1506:	99 23       	and	r25, r25
    1508:	24 f0       	brlt	.+8      	; 0x1512 <ButtonPress5+0x188>
			{
				lives--;
    150a:	21 50       	subi	r18, 0x01	; 1
    150c:	20 93 00 01 	sts	0x0100, r18
    1510:	03 c0       	rjmp	.+6      	; 0x1518 <ButtonPress5+0x18e>
			}
			else
			{
				global_g = 20;
    1512:	84 e1       	ldi	r24, 0x14	; 20
    1514:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    1518:	80 e1       	ldi	r24, 0x10	; 16
    151a:	80 93 21 01 	sts	0x0121, r24
    151e:	31 c1       	rjmp	.+610    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state6:
		if(~PINB & 0x04)
    1520:	1a 99       	sbic	0x03, 2	; 3
    1522:	05 c0       	rjmp	.+10     	; 0x152e <ButtonPress5+0x1a4>
		{
			
			while(~PINB & 0x04){}
    1524:	1a 9b       	sbis	0x03, 2	; 3
    1526:	fe cf       	rjmp	.-4      	; 0x1524 <ButtonPress5+0x19a>
			Press_fifth_level = Press5_state7;
    1528:	87 e0       	ldi	r24, 0x07	; 7
    152a:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    152e:	19 9b       	sbis	0x03, 1	; 3
    1530:	04 c0       	rjmp	.+8      	; 0x153a <ButtonPress5+0x1b0>
    1532:	18 9b       	sbis	0x03, 0	; 3
    1534:	02 c0       	rjmp	.+4      	; 0x153a <ButtonPress5+0x1b0>
    1536:	1b 99       	sbic	0x03, 3	; 3
    1538:	18 c1       	rjmp	.+560    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    153a:	20 91 00 01 	lds	r18, 0x0100
    153e:	82 2f       	mov	r24, r18
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	01 97       	sbiw	r24, 0x01	; 1
    1544:	99 23       	and	r25, r25
    1546:	24 f0       	brlt	.+8      	; 0x1550 <ButtonPress5+0x1c6>
			{
				lives--;
    1548:	21 50       	subi	r18, 0x01	; 1
    154a:	20 93 00 01 	sts	0x0100, r18
    154e:	03 c0       	rjmp	.+6      	; 0x1556 <ButtonPress5+0x1cc>
			}
			else
			{
				global_g = 20;
    1550:	84 e1       	ldi	r24, 0x14	; 20
    1552:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    1556:	80 e1       	ldi	r24, 0x10	; 16
    1558:	80 93 21 01 	sts	0x0121, r24
    155c:	12 c1       	rjmp	.+548    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state7:
		if(~PINB & 0x08)
    155e:	1b 99       	sbic	0x03, 3	; 3
    1560:	05 c0       	rjmp	.+10     	; 0x156c <ButtonPress5+0x1e2>
		{
			while(~PINB & 0x08){}
    1562:	1b 9b       	sbis	0x03, 3	; 3
    1564:	fe cf       	rjmp	.-4      	; 0x1562 <ButtonPress5+0x1d8>
			Press_fifth_level = Press5_state8;
    1566:	88 e0       	ldi	r24, 0x08	; 8
    1568:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    156c:	19 9b       	sbis	0x03, 1	; 3
    156e:	04 c0       	rjmp	.+8      	; 0x1578 <ButtonPress5+0x1ee>
    1570:	1a 9b       	sbis	0x03, 2	; 3
    1572:	02 c0       	rjmp	.+4      	; 0x1578 <ButtonPress5+0x1ee>
    1574:	18 99       	sbic	0x03, 0	; 3
    1576:	f9 c0       	rjmp	.+498    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    1578:	20 91 00 01 	lds	r18, 0x0100
    157c:	82 2f       	mov	r24, r18
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	01 97       	sbiw	r24, 0x01	; 1
    1582:	99 23       	and	r25, r25
    1584:	24 f0       	brlt	.+8      	; 0x158e <ButtonPress5+0x204>
			{
				lives--;
    1586:	21 50       	subi	r18, 0x01	; 1
    1588:	20 93 00 01 	sts	0x0100, r18
    158c:	03 c0       	rjmp	.+6      	; 0x1594 <ButtonPress5+0x20a>
			}
			else
			{
				global_g = 20;
    158e:	84 e1       	ldi	r24, 0x14	; 20
    1590:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    1594:	80 e1       	ldi	r24, 0x10	; 16
    1596:	80 93 21 01 	sts	0x0121, r24
    159a:	f3 c0       	rjmp	.+486    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state8:
		if(~PINB & 0x02)
    159c:	19 99       	sbic	0x03, 1	; 3
    159e:	05 c0       	rjmp	.+10     	; 0x15aa <ButtonPress5+0x220>
		{
			while(~PINB & 0x02){}
    15a0:	19 9b       	sbis	0x03, 1	; 3
    15a2:	fe cf       	rjmp	.-4      	; 0x15a0 <ButtonPress5+0x216>
			Press_fifth_level = Press5_state9;
    15a4:	89 e0       	ldi	r24, 0x09	; 9
    15a6:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    15aa:	18 9b       	sbis	0x03, 0	; 3
    15ac:	04 c0       	rjmp	.+8      	; 0x15b6 <ButtonPress5+0x22c>
    15ae:	1a 9b       	sbis	0x03, 2	; 3
    15b0:	02 c0       	rjmp	.+4      	; 0x15b6 <ButtonPress5+0x22c>
    15b2:	1b 99       	sbic	0x03, 3	; 3
    15b4:	da c0       	rjmp	.+436    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    15b6:	20 91 00 01 	lds	r18, 0x0100
    15ba:	82 2f       	mov	r24, r18
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	01 97       	sbiw	r24, 0x01	; 1
    15c0:	99 23       	and	r25, r25
    15c2:	24 f0       	brlt	.+8      	; 0x15cc <ButtonPress5+0x242>
			{
				lives--;
    15c4:	21 50       	subi	r18, 0x01	; 1
    15c6:	20 93 00 01 	sts	0x0100, r18
    15ca:	03 c0       	rjmp	.+6      	; 0x15d2 <ButtonPress5+0x248>
			}
			else
			{
				global_g = 20;
    15cc:	84 e1       	ldi	r24, 0x14	; 20
    15ce:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    15d2:	80 e1       	ldi	r24, 0x10	; 16
    15d4:	80 93 21 01 	sts	0x0121, r24
    15d8:	d4 c0       	rjmp	.+424    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state9:
		if(~PINB & 0x01)
    15da:	18 99       	sbic	0x03, 0	; 3
    15dc:	05 c0       	rjmp	.+10     	; 0x15e8 <ButtonPress5+0x25e>
		{
			while(~PINB & 0x01){}
    15de:	18 9b       	sbis	0x03, 0	; 3
    15e0:	fe cf       	rjmp	.-4      	; 0x15de <ButtonPress5+0x254>
			Press_fifth_level = Press5_state10;
    15e2:	8a e0       	ldi	r24, 0x0A	; 10
    15e4:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    15e8:	19 9b       	sbis	0x03, 1	; 3
    15ea:	04 c0       	rjmp	.+8      	; 0x15f4 <ButtonPress5+0x26a>
    15ec:	1a 9b       	sbis	0x03, 2	; 3
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <ButtonPress5+0x26a>
    15f0:	1b 99       	sbic	0x03, 3	; 3
    15f2:	bb c0       	rjmp	.+374    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    15f4:	20 91 00 01 	lds	r18, 0x0100
    15f8:	82 2f       	mov	r24, r18
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	99 23       	and	r25, r25
    1600:	24 f0       	brlt	.+8      	; 0x160a <ButtonPress5+0x280>
			{
				lives--;
    1602:	21 50       	subi	r18, 0x01	; 1
    1604:	20 93 00 01 	sts	0x0100, r18
    1608:	03 c0       	rjmp	.+6      	; 0x1610 <ButtonPress5+0x286>
			}
			else
			{
				global_g = 20;
    160a:	84 e1       	ldi	r24, 0x14	; 20
    160c:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    1610:	80 e1       	ldi	r24, 0x10	; 16
    1612:	80 93 21 01 	sts	0x0121, r24
    1616:	b5 c0       	rjmp	.+362    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state10:
		if(~PINB & 0x02)
    1618:	19 99       	sbic	0x03, 1	; 3
    161a:	05 c0       	rjmp	.+10     	; 0x1626 <ButtonPress5+0x29c>
		{
			while(~PINB & 0x02){}
    161c:	19 9b       	sbis	0x03, 1	; 3
    161e:	fe cf       	rjmp	.-4      	; 0x161c <ButtonPress5+0x292>
			Press_fifth_level = Press5_state11;
    1620:	8b e0       	ldi	r24, 0x0B	; 11
    1622:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1626:	18 9b       	sbis	0x03, 0	; 3
    1628:	04 c0       	rjmp	.+8      	; 0x1632 <ButtonPress5+0x2a8>
    162a:	1a 9b       	sbis	0x03, 2	; 3
    162c:	02 c0       	rjmp	.+4      	; 0x1632 <ButtonPress5+0x2a8>
    162e:	1b 99       	sbic	0x03, 3	; 3
    1630:	9c c0       	rjmp	.+312    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    1632:	20 91 00 01 	lds	r18, 0x0100
    1636:	82 2f       	mov	r24, r18
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	01 97       	sbiw	r24, 0x01	; 1
    163c:	99 23       	and	r25, r25
    163e:	24 f0       	brlt	.+8      	; 0x1648 <ButtonPress5+0x2be>
			{
				lives--;
    1640:	21 50       	subi	r18, 0x01	; 1
    1642:	20 93 00 01 	sts	0x0100, r18
    1646:	03 c0       	rjmp	.+6      	; 0x164e <ButtonPress5+0x2c4>
			}
			else
			{
				global_g = 20;
    1648:	84 e1       	ldi	r24, 0x14	; 20
    164a:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    164e:	80 e1       	ldi	r24, 0x10	; 16
    1650:	80 93 21 01 	sts	0x0121, r24
    1654:	96 c0       	rjmp	.+300    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state11:
		if(~PINB & 0x01)
    1656:	18 99       	sbic	0x03, 0	; 3
    1658:	05 c0       	rjmp	.+10     	; 0x1664 <ButtonPress5+0x2da>
		{
			while(~PINB & 0x01){}
    165a:	18 9b       	sbis	0x03, 0	; 3
    165c:	fe cf       	rjmp	.-4      	; 0x165a <ButtonPress5+0x2d0>
			Press_fifth_level = Press5_state12;
    165e:	8c e0       	ldi	r24, 0x0C	; 12
    1660:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1664:	19 9b       	sbis	0x03, 1	; 3
    1666:	04 c0       	rjmp	.+8      	; 0x1670 <ButtonPress5+0x2e6>
    1668:	1a 9b       	sbis	0x03, 2	; 3
    166a:	02 c0       	rjmp	.+4      	; 0x1670 <ButtonPress5+0x2e6>
    166c:	1b 99       	sbic	0x03, 3	; 3
    166e:	7d c0       	rjmp	.+250    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    1670:	20 91 00 01 	lds	r18, 0x0100
    1674:	82 2f       	mov	r24, r18
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	01 97       	sbiw	r24, 0x01	; 1
    167a:	99 23       	and	r25, r25
    167c:	24 f0       	brlt	.+8      	; 0x1686 <ButtonPress5+0x2fc>
			{
				lives--;
    167e:	21 50       	subi	r18, 0x01	; 1
    1680:	20 93 00 01 	sts	0x0100, r18
    1684:	03 c0       	rjmp	.+6      	; 0x168c <ButtonPress5+0x302>
			}
			else
			{
				global_g = 20;
    1686:	84 e1       	ldi	r24, 0x14	; 20
    1688:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    168c:	80 e1       	ldi	r24, 0x10	; 16
    168e:	80 93 21 01 	sts	0x0121, r24
    1692:	77 c0       	rjmp	.+238    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state12:
		if(~PINB & 0x04)
    1694:	1a 99       	sbic	0x03, 2	; 3
    1696:	05 c0       	rjmp	.+10     	; 0x16a2 <ButtonPress5+0x318>
		{
			while(~PINB & 0x04){}
    1698:	1a 9b       	sbis	0x03, 2	; 3
    169a:	fe cf       	rjmp	.-4      	; 0x1698 <ButtonPress5+0x30e>
			Press_fifth_level = Press5_state13;
    169c:	8d e0       	ldi	r24, 0x0D	; 13
    169e:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    16a2:	19 9b       	sbis	0x03, 1	; 3
    16a4:	04 c0       	rjmp	.+8      	; 0x16ae <ButtonPress5+0x324>
    16a6:	18 9b       	sbis	0x03, 0	; 3
    16a8:	02 c0       	rjmp	.+4      	; 0x16ae <ButtonPress5+0x324>
    16aa:	1b 99       	sbic	0x03, 3	; 3
    16ac:	5e c0       	rjmp	.+188    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    16ae:	20 91 00 01 	lds	r18, 0x0100
    16b2:	82 2f       	mov	r24, r18
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	01 97       	sbiw	r24, 0x01	; 1
    16b8:	99 23       	and	r25, r25
    16ba:	24 f0       	brlt	.+8      	; 0x16c4 <ButtonPress5+0x33a>
			{
				lives--;
    16bc:	21 50       	subi	r18, 0x01	; 1
    16be:	20 93 00 01 	sts	0x0100, r18
    16c2:	03 c0       	rjmp	.+6      	; 0x16ca <ButtonPress5+0x340>
			}
			else
			{
				global_g = 20;
    16c4:	84 e1       	ldi	r24, 0x14	; 20
    16c6:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    16ca:	80 e1       	ldi	r24, 0x10	; 16
    16cc:	80 93 21 01 	sts	0x0121, r24
    16d0:	58 c0       	rjmp	.+176    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state13:
		if(~PINB & 0x08)
    16d2:	1b 99       	sbic	0x03, 3	; 3
    16d4:	05 c0       	rjmp	.+10     	; 0x16e0 <ButtonPress5+0x356>
		{
			while(~PINB & 0x08){}
    16d6:	1b 9b       	sbis	0x03, 3	; 3
    16d8:	fe cf       	rjmp	.-4      	; 0x16d6 <ButtonPress5+0x34c>
			Press_fifth_level = Press5_state14;
    16da:	8e e0       	ldi	r24, 0x0E	; 14
    16dc:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    16e0:	19 9b       	sbis	0x03, 1	; 3
    16e2:	04 c0       	rjmp	.+8      	; 0x16ec <ButtonPress5+0x362>
    16e4:	1a 9b       	sbis	0x03, 2	; 3
    16e6:	02 c0       	rjmp	.+4      	; 0x16ec <ButtonPress5+0x362>
    16e8:	18 99       	sbic	0x03, 0	; 3
    16ea:	3f c0       	rjmp	.+126    	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    16ec:	20 91 00 01 	lds	r18, 0x0100
    16f0:	82 2f       	mov	r24, r18
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	01 97       	sbiw	r24, 0x01	; 1
    16f6:	99 23       	and	r25, r25
    16f8:	24 f0       	brlt	.+8      	; 0x1702 <ButtonPress5+0x378>
			{
				lives--;
    16fa:	21 50       	subi	r18, 0x01	; 1
    16fc:	20 93 00 01 	sts	0x0100, r18
    1700:	03 c0       	rjmp	.+6      	; 0x1708 <ButtonPress5+0x37e>
			}
			else
			{
				global_g = 20;
    1702:	84 e1       	ldi	r24, 0x14	; 20
    1704:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    1708:	80 e1       	ldi	r24, 0x10	; 16
    170a:	80 93 21 01 	sts	0x0121, r24
    170e:	39 c0       	rjmp	.+114    	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state14:
		if(~PINB & 0x01)
    1710:	18 99       	sbic	0x03, 0	; 3
    1712:	05 c0       	rjmp	.+10     	; 0x171e <ButtonPress5+0x394>
		{
			while(~PINB & 0x01){}
    1714:	18 9b       	sbis	0x03, 0	; 3
    1716:	fe cf       	rjmp	.-4      	; 0x1714 <ButtonPress5+0x38a>
			Press_fifth_level = Press5_state15;
    1718:	8f e0       	ldi	r24, 0x0F	; 15
    171a:	80 93 21 01 	sts	0x0121, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    171e:	19 9b       	sbis	0x03, 1	; 3
    1720:	04 c0       	rjmp	.+8      	; 0x172a <ButtonPress5+0x3a0>
    1722:	1a 9b       	sbis	0x03, 2	; 3
    1724:	02 c0       	rjmp	.+4      	; 0x172a <ButtonPress5+0x3a0>
    1726:	1b 99       	sbic	0x03, 3	; 3
    1728:	20 c0       	rjmp	.+64     	; 0x176a <ButtonPress5+0x3e0>
		{
			if(lives - 1 > -1)
    172a:	20 91 00 01 	lds	r18, 0x0100
    172e:	82 2f       	mov	r24, r18
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	01 97       	sbiw	r24, 0x01	; 1
    1734:	99 23       	and	r25, r25
    1736:	24 f0       	brlt	.+8      	; 0x1740 <ButtonPress5+0x3b6>
			{
				lives--;
    1738:	21 50       	subi	r18, 0x01	; 1
    173a:	20 93 00 01 	sts	0x0100, r18
    173e:	03 c0       	rjmp	.+6      	; 0x1746 <ButtonPress5+0x3bc>
			}
			else
			{
				global_g = 20;
    1740:	84 e1       	ldi	r24, 0x14	; 20
    1742:	80 93 12 01 	sts	0x0112, r24
			}
			Press_fifth_level = Error5;
    1746:	80 e1       	ldi	r24, 0x10	; 16
    1748:	80 93 21 01 	sts	0x0121, r24
    174c:	1a c0       	rjmp	.+52     	; 0x1782 <ButtonPress5+0x3f8>
		}
		break;
		case Press5_state15:
		if(~PINB & 0x10)
    174e:	1c 99       	sbic	0x03, 4	; 3
    1750:	9f c0       	rjmp	.+318    	; 0x1890 <ButtonPress5+0x506>
		{
			Press_fifth_level = Off5;
    1752:	81 e1       	ldi	r24, 0x11	; 17
    1754:	80 93 21 01 	sts	0x0121, r24
    1758:	a4 c0       	rjmp	.+328    	; 0x18a2 <ButtonPress5+0x518>
		}
		break;
		case Error5:
		if(~PINB & 0x08)
    175a:	1b 99       	sbic	0x03, 3	; 3
    175c:	12 c0       	rjmp	.+36     	; 0x1782 <ButtonPress5+0x3f8>
		{
			while(~PINB & 0x08){}
    175e:	1b 9b       	sbis	0x03, 3	; 3
    1760:	fe cf       	rjmp	.-4      	; 0x175e <ButtonPress5+0x3d4>
			Press_fifth_level = Press5_state1;
    1762:	81 e0       	ldi	r24, 0x01	; 1
    1764:	80 93 21 01 	sts	0x0121, r24
    1768:	15 c0       	rjmp	.+42     	; 0x1794 <ButtonPress5+0x40a>
		}
		break;
	}
	switch(Press_fifth_level)
    176a:	80 91 21 01 	lds	r24, 0x0121
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	fc 01       	movw	r30, r24
    1772:	31 97       	sbiw	r30, 0x01	; 1
    1774:	e1 31       	cpi	r30, 0x11	; 17
    1776:	f1 05       	cpc	r31, r1
    1778:	08 f0       	brcs	.+2      	; 0x177c <ButtonPress5+0x3f2>
    177a:	94 c0       	rjmp	.+296    	; 0x18a4 <ButtonPress5+0x51a>
    177c:	ec 50       	subi	r30, 0x0C	; 12
    177e:	ff 4f       	sbci	r31, 0xFF	; 255
    1780:	47 c2       	rjmp	.+1166   	; 0x1c10 <__tablejump2__>
	{
		case Error5:
		transmit_data(simon_SevenSeg(lives));
    1782:	80 91 00 01 	lds	r24, 0x0100
    1786:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    178a:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x10;
    178e:	80 e1       	ldi	r24, 0x10	; 16
    1790:	82 b9       	out	0x02, r24	; 2
		break;
    1792:	08 95       	ret
		case Press5_state1:
		transmit_data(simon_SevenSeg(lives));
    1794:	80 91 00 01 	lds	r24, 0x0100
    1798:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    179c:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    17a0:	88 e0       	ldi	r24, 0x08	; 8
    17a2:	82 b9       	out	0x02, r24	; 2
		break;
    17a4:	08 95       	ret
		case Press5_state2:
		transmit_data(simon_SevenSeg(lives));
    17a6:	80 91 00 01 	lds	r24, 0x0100
    17aa:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    17ae:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x04;
    17b2:	84 e0       	ldi	r24, 0x04	; 4
    17b4:	82 b9       	out	0x02, r24	; 2
		break;
    17b6:	08 95       	ret
		case Press5_state3:
		transmit_data(simon_SevenSeg(lives));
    17b8:	80 91 00 01 	lds	r24, 0x0100
    17bc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    17c0:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    17c4:	82 e0       	ldi	r24, 0x02	; 2
    17c6:	82 b9       	out	0x02, r24	; 2
		break;
    17c8:	08 95       	ret
		case Press5_state4:
		transmit_data(simon_SevenSeg(lives));
    17ca:	80 91 00 01 	lds	r24, 0x0100
    17ce:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    17d2:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    17d6:	81 e0       	ldi	r24, 0x01	; 1
    17d8:	82 b9       	out	0x02, r24	; 2
		break;
    17da:	08 95       	ret
		case Press5_state5:
		transmit_data(simon_SevenSeg(lives));
    17dc:	80 91 00 01 	lds	r24, 0x0100
    17e0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    17e4:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    17e8:	82 e0       	ldi	r24, 0x02	; 2
    17ea:	82 b9       	out	0x02, r24	; 2
		break;
    17ec:	08 95       	ret
		case Press5_state6:
		transmit_data(simon_SevenSeg(lives));
    17ee:	80 91 00 01 	lds	r24, 0x0100
    17f2:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    17f6:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    17fa:	81 e0       	ldi	r24, 0x01	; 1
    17fc:	82 b9       	out	0x02, r24	; 2
		break;
    17fe:	08 95       	ret
		case Press5_state7:
		transmit_data(simon_SevenSeg(lives));
    1800:	80 91 00 01 	lds	r24, 0x0100
    1804:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1808:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x04;
    180c:	84 e0       	ldi	r24, 0x04	; 4
    180e:	82 b9       	out	0x02, r24	; 2
		break;
    1810:	08 95       	ret
		case Press5_state8:
		transmit_data(simon_SevenSeg(lives));
    1812:	80 91 00 01 	lds	r24, 0x0100
    1816:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    181a:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    181e:	88 e0       	ldi	r24, 0x08	; 8
    1820:	82 b9       	out	0x02, r24	; 2
		break;
    1822:	08 95       	ret
		case Press5_state9:
		transmit_data(simon_SevenSeg(lives));
    1824:	80 91 00 01 	lds	r24, 0x0100
    1828:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    182c:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    1830:	82 e0       	ldi	r24, 0x02	; 2
    1832:	82 b9       	out	0x02, r24	; 2
		break;
    1834:	08 95       	ret
		case Press5_state10:
		transmit_data(simon_SevenSeg(lives));
    1836:	80 91 00 01 	lds	r24, 0x0100
    183a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    183e:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	82 b9       	out	0x02, r24	; 2
		break;
    1846:	08 95       	ret
		case Press5_state11:
		transmit_data(simon_SevenSeg(lives));
    1848:	80 91 00 01 	lds	r24, 0x0100
    184c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1850:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    1854:	82 e0       	ldi	r24, 0x02	; 2
    1856:	82 b9       	out	0x02, r24	; 2
		break;
    1858:	08 95       	ret
		case Press5_state12:
		transmit_data(simon_SevenSeg(lives));
    185a:	80 91 00 01 	lds	r24, 0x0100
    185e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1862:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1866:	81 e0       	ldi	r24, 0x01	; 1
    1868:	82 b9       	out	0x02, r24	; 2
		break;
    186a:	08 95       	ret
		case Press5_state13:
		transmit_data(simon_SevenSeg(lives));
    186c:	80 91 00 01 	lds	r24, 0x0100
    1870:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1874:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x04;
    1878:	84 e0       	ldi	r24, 0x04	; 4
    187a:	82 b9       	out	0x02, r24	; 2
		break;
    187c:	08 95       	ret
		case Press5_state14:
		transmit_data(simon_SevenSeg(lives));
    187e:	80 91 00 01 	lds	r24, 0x0100
    1882:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1886:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    188a:	88 e0       	ldi	r24, 0x08	; 8
    188c:	82 b9       	out	0x02, r24	; 2
		break;
    188e:	08 95       	ret
		case Press5_state15:
		transmit_data(simon_SevenSeg(lives));
    1890:	80 91 00 01 	lds	r24, 0x0100
    1894:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1898:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    189c:	81 e0       	ldi	r24, 0x01	; 1
    189e:	82 b9       	out	0x02, r24	; 2
		break;
    18a0:	08 95       	ret
		case Off5:
		PORTA = 0x00;
    18a2:	12 b8       	out	0x02, r1	; 2
    18a4:	08 95       	ret

000018a6 <main>:
	}
}


int main(void)
{
    18a6:	cf 92       	push	r12
    18a8:	df 92       	push	r13
    18aa:	ef 92       	push	r14
    18ac:	ff 92       	push	r15
	DDRA = 0xFF;	PORTA = 0x00;//LED outputs
    18ae:	8f ef       	ldi	r24, 0xFF	; 255
    18b0:	81 b9       	out	0x01, r24	; 1
    18b2:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;//input of the buttons
    18b4:	14 b8       	out	0x04, r1	; 4
    18b6:	85 b9       	out	0x05, r24	; 5
	DDRD = 0xFF;	PORTD = 0x00;//seven segment output with shift register
    18b8:	8a b9       	out	0x0a, r24	; 10
    18ba:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0xFF;	PORTC = 0x00;//data lines for LCD display
    18bc:	87 b9       	out	0x07, r24	; 7
    18be:	18 b8       	out	0x08, r1	; 8
	
	if(global_g == 0)
    18c0:	80 91 12 01 	lds	r24, 0x0112
    18c4:	81 11       	cpse	r24, r1
    18c6:	9d c1       	rjmp	.+826    	; 0x1c02 <main+0x35c>
	{
		//LCD_init();
		//LCD_DisplayString(1, "Simon Press");
		LCD_ClearScreen();
    18c8:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_ClearScreen>
		while(global_g == 0)
    18cc:	80 91 12 01 	lds	r24, 0x0112
    18d0:	81 11       	cpse	r24, r1
    18d2:	26 c0       	rjmp	.+76     	; 0x1920 <main+0x7a>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    18d4:	0f 2e       	mov	r0, r31
    18d6:	f4 ef       	ldi	r31, 0xF4	; 244
    18d8:	cf 2e       	mov	r12, r31
    18da:	dd 24       	eor	r13, r13
    18dc:	d3 94       	inc	r13
    18de:	e1 2c       	mov	r14, r1
    18e0:	f1 2c       	mov	r15, r1
    18e2:	f0 2d       	mov	r31, r0
    18e4:	c0 92 01 01 	sts	0x0101, r12
    18e8:	d0 92 02 01 	sts	0x0102, r13
    18ec:	e0 92 03 01 	sts	0x0103, r14
    18f0:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    18f4:	c0 92 13 01 	sts	0x0113, r12
    18f8:	d0 92 14 01 	sts	0x0114, r13
    18fc:	e0 92 15 01 	sts	0x0115, r14
    1900:	f0 92 16 01 	sts	0x0116, r15
		//LCD_DisplayString(1, "Simon Press");
		LCD_ClearScreen();
		while(global_g == 0)
		{
			TimerSet(500);
			TimerOn();
    1904:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_State_machine_1();
    1908:	0e 94 29 02 	call	0x452	; 0x452 <TickFct_State_machine_1>
			while(!TimerFlag);
    190c:	80 91 17 01 	lds	r24, 0x0117
    1910:	88 23       	and	r24, r24
    1912:	e1 f3       	breq	.-8      	; 0x190c <main+0x66>
			TimerFlag = 0;	
    1914:	10 92 17 01 	sts	0x0117, r1
	if(global_g == 0)
	{
		//LCD_init();
		//LCD_DisplayString(1, "Simon Press");
		LCD_ClearScreen();
		while(global_g == 0)
    1918:	80 91 12 01 	lds	r24, 0x0112
    191c:	88 23       	and	r24, r24
    191e:	11 f3       	breq	.-60     	; 0x18e4 <main+0x3e>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    1920:	80 91 12 01 	lds	r24, 0x0112
    1924:	81 30       	cpi	r24, 0x01	; 1
    1926:	29 f5       	brne	.+74     	; 0x1972 <main+0xcc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1928:	0f 2e       	mov	r0, r31
    192a:	f8 ec       	ldi	r31, 0xC8	; 200
    192c:	cf 2e       	mov	r12, r31
    192e:	d1 2c       	mov	r13, r1
    1930:	e1 2c       	mov	r14, r1
    1932:	f1 2c       	mov	r15, r1
    1934:	f0 2d       	mov	r31, r0
    1936:	c0 92 01 01 	sts	0x0101, r12
    193a:	d0 92 02 01 	sts	0x0102, r13
    193e:	e0 92 03 01 	sts	0x0103, r14
    1942:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1946:	c0 92 13 01 	sts	0x0113, r12
    194a:	d0 92 14 01 	sts	0x0114, r13
    194e:	e0 92 15 01 	sts	0x0115, r14
    1952:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;	
		}
		while(global_g == 1)
		{
			TimerSet(200);
			TimerOn();
    1956:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress();
    195a:	0e 94 79 02 	call	0x4f2	; 0x4f2 <ButtonPress>
			while(!TimerFlag);
    195e:	80 91 17 01 	lds	r24, 0x0117
    1962:	88 23       	and	r24, r24
    1964:	e1 f3       	breq	.-8      	; 0x195e <main+0xb8>
			TimerFlag = 0;
    1966:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    196a:	80 91 12 01 	lds	r24, 0x0112
    196e:	81 30       	cpi	r24, 0x01	; 1
    1970:	11 f3       	breq	.-60     	; 0x1936 <main+0x90>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1972:	80 91 12 01 	lds	r24, 0x0112
    1976:	82 30       	cpi	r24, 0x02	; 2
    1978:	31 f5       	brne	.+76     	; 0x19c6 <main+0x120>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    197a:	0f 2e       	mov	r0, r31
    197c:	f4 ef       	ldi	r31, 0xF4	; 244
    197e:	cf 2e       	mov	r12, r31
    1980:	dd 24       	eor	r13, r13
    1982:	d3 94       	inc	r13
    1984:	e1 2c       	mov	r14, r1
    1986:	f1 2c       	mov	r15, r1
    1988:	f0 2d       	mov	r31, r0
    198a:	c0 92 01 01 	sts	0x0101, r12
    198e:	d0 92 02 01 	sts	0x0102, r13
    1992:	e0 92 03 01 	sts	0x0103, r14
    1996:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    199a:	c0 92 13 01 	sts	0x0113, r12
    199e:	d0 92 14 01 	sts	0x0114, r13
    19a2:	e0 92 15 01 	sts	0x0115, r14
    19a6:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 2)
		{
			TimerSet(500);
			TimerOn();
    19aa:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine2();
    19ae:	0e 94 58 03 	call	0x6b0	; 0x6b0 <TickFct_Machine2>
			while(!TimerFlag);
    19b2:	80 91 17 01 	lds	r24, 0x0117
    19b6:	88 23       	and	r24, r24
    19b8:	e1 f3       	breq	.-8      	; 0x19b2 <main+0x10c>
			TimerFlag = 0;
    19ba:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    19be:	80 91 12 01 	lds	r24, 0x0112
    19c2:	82 30       	cpi	r24, 0x02	; 2
    19c4:	11 f3       	breq	.-60     	; 0x198a <main+0xe4>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    19c6:	80 91 12 01 	lds	r24, 0x0112
    19ca:	83 30       	cpi	r24, 0x03	; 3
    19cc:	29 f5       	brne	.+74     	; 0x1a18 <main+0x172>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    19ce:	0f 2e       	mov	r0, r31
    19d0:	f8 ec       	ldi	r31, 0xC8	; 200
    19d2:	cf 2e       	mov	r12, r31
    19d4:	d1 2c       	mov	r13, r1
    19d6:	e1 2c       	mov	r14, r1
    19d8:	f1 2c       	mov	r15, r1
    19da:	f0 2d       	mov	r31, r0
    19dc:	c0 92 01 01 	sts	0x0101, r12
    19e0:	d0 92 02 01 	sts	0x0102, r13
    19e4:	e0 92 03 01 	sts	0x0103, r14
    19e8:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    19ec:	c0 92 13 01 	sts	0x0113, r12
    19f0:	d0 92 14 01 	sts	0x0114, r13
    19f4:	e0 92 15 01 	sts	0x0115, r14
    19f8:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 3)
		{
			TimerSet(200);
			TimerOn();
    19fc:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress2();
    1a00:	0e 94 ac 03 	call	0x758	; 0x758 <ButtonPress2>
			while(!TimerFlag);
    1a04:	80 91 17 01 	lds	r24, 0x0117
    1a08:	88 23       	and	r24, r24
    1a0a:	e1 f3       	breq	.-8      	; 0x1a04 <main+0x15e>
			TimerFlag = 0;
    1a0c:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1a10:	80 91 12 01 	lds	r24, 0x0112
    1a14:	83 30       	cpi	r24, 0x03	; 3
    1a16:	11 f3       	breq	.-60     	; 0x19dc <main+0x136>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1a18:	80 91 12 01 	lds	r24, 0x0112
    1a1c:	84 30       	cpi	r24, 0x04	; 4
    1a1e:	31 f5       	brne	.+76     	; 0x1a6c <main+0x1c6>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1a20:	0f 2e       	mov	r0, r31
    1a22:	f8 ee       	ldi	r31, 0xE8	; 232
    1a24:	cf 2e       	mov	r12, r31
    1a26:	f3 e0       	ldi	r31, 0x03	; 3
    1a28:	df 2e       	mov	r13, r31
    1a2a:	e1 2c       	mov	r14, r1
    1a2c:	f1 2c       	mov	r15, r1
    1a2e:	f0 2d       	mov	r31, r0
    1a30:	c0 92 01 01 	sts	0x0101, r12
    1a34:	d0 92 02 01 	sts	0x0102, r13
    1a38:	e0 92 03 01 	sts	0x0103, r14
    1a3c:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1a40:	c0 92 13 01 	sts	0x0113, r12
    1a44:	d0 92 14 01 	sts	0x0114, r13
    1a48:	e0 92 15 01 	sts	0x0115, r14
    1a4c:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 4)
		{
			TimerSet(1000);
			TimerOn();
    1a50:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine3();
    1a54:	0e 94 c2 04 	call	0x984	; 0x984 <TickFct_Machine3>
			while(!TimerFlag);
    1a58:	80 91 17 01 	lds	r24, 0x0117
    1a5c:	88 23       	and	r24, r24
    1a5e:	e1 f3       	breq	.-8      	; 0x1a58 <main+0x1b2>
			TimerFlag = 0;
    1a60:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1a64:	80 91 12 01 	lds	r24, 0x0112
    1a68:	84 30       	cpi	r24, 0x04	; 4
    1a6a:	11 f3       	breq	.-60     	; 0x1a30 <main+0x18a>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1a6c:	80 91 12 01 	lds	r24, 0x0112
    1a70:	85 30       	cpi	r24, 0x05	; 5
    1a72:	29 f5       	brne	.+74     	; 0x1abe <main+0x218>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1a74:	0f 2e       	mov	r0, r31
    1a76:	f8 ec       	ldi	r31, 0xC8	; 200
    1a78:	cf 2e       	mov	r12, r31
    1a7a:	d1 2c       	mov	r13, r1
    1a7c:	e1 2c       	mov	r14, r1
    1a7e:	f1 2c       	mov	r15, r1
    1a80:	f0 2d       	mov	r31, r0
    1a82:	c0 92 01 01 	sts	0x0101, r12
    1a86:	d0 92 02 01 	sts	0x0102, r13
    1a8a:	e0 92 03 01 	sts	0x0103, r14
    1a8e:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1a92:	c0 92 13 01 	sts	0x0113, r12
    1a96:	d0 92 14 01 	sts	0x0114, r13
    1a9a:	e0 92 15 01 	sts	0x0115, r14
    1a9e:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 5)
		{
			TimerSet(200);
			TimerOn();
    1aa2:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress3();
    1aa6:	0e 94 27 05 	call	0xa4e	; 0xa4e <ButtonPress3>
			while(!TimerFlag);
    1aaa:	80 91 17 01 	lds	r24, 0x0117
    1aae:	88 23       	and	r24, r24
    1ab0:	e1 f3       	breq	.-8      	; 0x1aaa <main+0x204>
			TimerFlag = 0;
    1ab2:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1ab6:	80 91 12 01 	lds	r24, 0x0112
    1aba:	85 30       	cpi	r24, 0x05	; 5
    1abc:	11 f3       	breq	.-60     	; 0x1a82 <main+0x1dc>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1abe:	80 91 12 01 	lds	r24, 0x0112
    1ac2:	86 30       	cpi	r24, 0x06	; 6
    1ac4:	29 f5       	brne	.+74     	; 0x1b10 <main+0x26a>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1ac6:	0f 2e       	mov	r0, r31
    1ac8:	f4 ef       	ldi	r31, 0xF4	; 244
    1aca:	cf 2e       	mov	r12, r31
    1acc:	dd 24       	eor	r13, r13
    1ace:	d3 94       	inc	r13
    1ad0:	e1 2c       	mov	r14, r1
    1ad2:	f1 2c       	mov	r15, r1
    1ad4:	f0 2d       	mov	r31, r0
    1ad6:	c0 92 01 01 	sts	0x0101, r12
    1ada:	d0 92 02 01 	sts	0x0102, r13
    1ade:	e0 92 03 01 	sts	0x0103, r14
    1ae2:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1ae6:	c0 92 13 01 	sts	0x0113, r12
    1aea:	d0 92 14 01 	sts	0x0114, r13
    1aee:	e0 92 15 01 	sts	0x0115, r14
    1af2:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 6)
		{
			TimerSet(500);
			TimerOn();
    1af6:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine4();
    1afa:	3b d9       	rcall	.-3466   	; 0xd72 <TickFct_Machine4>
			while(!TimerFlag);
    1afc:	80 91 17 01 	lds	r24, 0x0117
    1b00:	88 23       	and	r24, r24
    1b02:	e1 f3       	breq	.-8      	; 0x1afc <main+0x256>
			TimerFlag = 0;
    1b04:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1b08:	80 91 12 01 	lds	r24, 0x0112
    1b0c:	86 30       	cpi	r24, 0x06	; 6
    1b0e:	19 f3       	breq	.-58     	; 0x1ad6 <main+0x230>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1b10:	80 91 12 01 	lds	r24, 0x0112
    1b14:	87 30       	cpi	r24, 0x07	; 7
    1b16:	21 f5       	brne	.+72     	; 0x1b60 <main+0x2ba>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1b18:	0f 2e       	mov	r0, r31
    1b1a:	f8 ec       	ldi	r31, 0xC8	; 200
    1b1c:	cf 2e       	mov	r12, r31
    1b1e:	d1 2c       	mov	r13, r1
    1b20:	e1 2c       	mov	r14, r1
    1b22:	f1 2c       	mov	r15, r1
    1b24:	f0 2d       	mov	r31, r0
    1b26:	c0 92 01 01 	sts	0x0101, r12
    1b2a:	d0 92 02 01 	sts	0x0102, r13
    1b2e:	e0 92 03 01 	sts	0x0103, r14
    1b32:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1b36:	c0 92 13 01 	sts	0x0113, r12
    1b3a:	d0 92 14 01 	sts	0x0114, r13
    1b3e:	e0 92 15 01 	sts	0x0115, r14
    1b42:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 7)
		{
			TimerSet(200);
			TimerOn();
    1b46:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress4();
    1b4a:	8d d9       	rcall	.-3302   	; 0xe66 <ButtonPress4>
			while(!TimerFlag);
    1b4c:	80 91 17 01 	lds	r24, 0x0117
    1b50:	88 23       	and	r24, r24
    1b52:	e1 f3       	breq	.-8      	; 0x1b4c <main+0x2a6>
			TimerFlag = 0;
    1b54:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1b58:	80 91 12 01 	lds	r24, 0x0112
    1b5c:	87 30       	cpi	r24, 0x07	; 7
    1b5e:	19 f3       	breq	.-58     	; 0x1b26 <main+0x280>
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1b60:	80 91 12 01 	lds	r24, 0x0112
    1b64:	88 30       	cpi	r24, 0x08	; 8
    1b66:	29 f5       	brne	.+74     	; 0x1bb2 <main+0x30c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1b68:	0f 2e       	mov	r0, r31
    1b6a:	f4 ef       	ldi	r31, 0xF4	; 244
    1b6c:	cf 2e       	mov	r12, r31
    1b6e:	dd 24       	eor	r13, r13
    1b70:	d3 94       	inc	r13
    1b72:	e1 2c       	mov	r14, r1
    1b74:	f1 2c       	mov	r15, r1
    1b76:	f0 2d       	mov	r31, r0
    1b78:	c0 92 01 01 	sts	0x0101, r12
    1b7c:	d0 92 02 01 	sts	0x0102, r13
    1b80:	e0 92 03 01 	sts	0x0103, r14
    1b84:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1b88:	c0 92 13 01 	sts	0x0113, r12
    1b8c:	d0 92 14 01 	sts	0x0114, r13
    1b90:	e0 92 15 01 	sts	0x0115, r14
    1b94:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 8)
		{
			TimerSet(500);
			TimerOn();
    1b98:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine5();
    1b9c:	67 db       	rcall	.-2354   	; 0x126c <TickFct_Machine5>
			while(!TimerFlag);
    1b9e:	80 91 17 01 	lds	r24, 0x0117
    1ba2:	88 23       	and	r24, r24
    1ba4:	e1 f3       	breq	.-8      	; 0x1b9e <main+0x2f8>
			TimerFlag = 0;
    1ba6:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1baa:	80 91 12 01 	lds	r24, 0x0112
    1bae:	88 30       	cpi	r24, 0x08	; 8
    1bb0:	19 f3       	breq	.-58     	; 0x1b78 <main+0x2d2>
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1bb2:	80 91 12 01 	lds	r24, 0x0112
    1bb6:	89 30       	cpi	r24, 0x09	; 9
    1bb8:	21 f5       	brne	.+72     	; 0x1c02 <main+0x35c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1bba:	0f 2e       	mov	r0, r31
    1bbc:	f8 ec       	ldi	r31, 0xC8	; 200
    1bbe:	cf 2e       	mov	r12, r31
    1bc0:	d1 2c       	mov	r13, r1
    1bc2:	e1 2c       	mov	r14, r1
    1bc4:	f1 2c       	mov	r15, r1
    1bc6:	f0 2d       	mov	r31, r0
    1bc8:	c0 92 01 01 	sts	0x0101, r12
    1bcc:	d0 92 02 01 	sts	0x0102, r13
    1bd0:	e0 92 03 01 	sts	0x0103, r14
    1bd4:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1bd8:	c0 92 13 01 	sts	0x0113, r12
    1bdc:	d0 92 14 01 	sts	0x0114, r13
    1be0:	e0 92 15 01 	sts	0x0115, r14
    1be4:	f0 92 16 01 	sts	0x0116, r15
			TimerFlag = 0;
		}
		while(global_g == 9)
		{
			TimerSet(200);
			TimerOn();
    1be8:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress5();
    1bec:	ce db       	rcall	.-2148   	; 0x138a <ButtonPress5>
			while(!TimerFlag);
    1bee:	80 91 17 01 	lds	r24, 0x0117
    1bf2:	88 23       	and	r24, r24
    1bf4:	e1 f3       	breq	.-8      	; 0x1bee <main+0x348>
			TimerFlag = 0;
    1bf6:	10 92 17 01 	sts	0x0117, r1
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1bfa:	80 91 12 01 	lds	r24, 0x0112
    1bfe:	89 30       	cpi	r24, 0x09	; 9
    1c00:	19 f3       	breq	.-58     	; 0x1bc8 <main+0x322>
			TimerFlag = 0;
		}
	}
	return 0;
		
    1c02:	80 e0       	ldi	r24, 0x00	; 0
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	ff 90       	pop	r15
    1c08:	ef 90       	pop	r14
    1c0a:	df 90       	pop	r13
    1c0c:	cf 90       	pop	r12
    1c0e:	08 95       	ret

00001c10 <__tablejump2__>:
    1c10:	ee 0f       	add	r30, r30
    1c12:	ff 1f       	adc	r31, r31

00001c14 <__tablejump__>:
    1c14:	05 90       	lpm	r0, Z+
    1c16:	f4 91       	lpm	r31, Z
    1c18:	e0 2d       	mov	r30, r0
    1c1a:	09 94       	ijmp

00001c1c <_exit>:
    1c1c:	f8 94       	cli

00001c1e <__stop_program>:
    1c1e:	ff cf       	rjmp	.-2      	; 0x1c1e <__stop_program>
