
2nd_final_prj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000137a  0000140e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000137a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800104  00800104  00001412  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001412  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00001442  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b53  00000000  00000000  00001512  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000022f  00000000  00000000  00002065  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000015ed  00000000  00000000  00002294  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001cc  00000000  00000000  00003884  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007cc  00000000  00000000  00003a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000376  00000000  00000000  0000421c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004592  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	04 c1       	rjmp	.+520    	; 0x20a <__ctors_end>
       2:	00 00       	nop
       4:	20 c1       	rjmp	.+576    	; 0x246 <__bad_interrupt>
       6:	00 00       	nop
       8:	1e c1       	rjmp	.+572    	; 0x246 <__bad_interrupt>
       a:	00 00       	nop
       c:	1c c1       	rjmp	.+568    	; 0x246 <__bad_interrupt>
       e:	00 00       	nop
      10:	1a c1       	rjmp	.+564    	; 0x246 <__bad_interrupt>
      12:	00 00       	nop
      14:	18 c1       	rjmp	.+560    	; 0x246 <__bad_interrupt>
      16:	00 00       	nop
      18:	16 c1       	rjmp	.+556    	; 0x246 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	14 c1       	rjmp	.+552    	; 0x246 <__bad_interrupt>
      1e:	00 00       	nop
      20:	12 c1       	rjmp	.+548    	; 0x246 <__bad_interrupt>
      22:	00 00       	nop
      24:	10 c1       	rjmp	.+544    	; 0x246 <__bad_interrupt>
      26:	00 00       	nop
      28:	0e c1       	rjmp	.+540    	; 0x246 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c c1       	rjmp	.+536    	; 0x246 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0a c1       	rjmp	.+532    	; 0x246 <__bad_interrupt>
      32:	00 00       	nop
      34:	2d c1       	rjmp	.+602    	; 0x290 <__vector_13>
      36:	00 00       	nop
      38:	06 c1       	rjmp	.+524    	; 0x246 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	04 c1       	rjmp	.+520    	; 0x246 <__bad_interrupt>
      3e:	00 00       	nop
      40:	02 c1       	rjmp	.+516    	; 0x246 <__bad_interrupt>
      42:	00 00       	nop
      44:	00 c1       	rjmp	.+512    	; 0x246 <__bad_interrupt>
      46:	00 00       	nop
      48:	fe c0       	rjmp	.+508    	; 0x246 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fc c0       	rjmp	.+504    	; 0x246 <__bad_interrupt>
      4e:	00 00       	nop
      50:	fa c0       	rjmp	.+500    	; 0x246 <__bad_interrupt>
      52:	00 00       	nop
      54:	f8 c0       	rjmp	.+496    	; 0x246 <__bad_interrupt>
      56:	00 00       	nop
      58:	f6 c0       	rjmp	.+492    	; 0x246 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f4 c0       	rjmp	.+488    	; 0x246 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f2 c0       	rjmp	.+484    	; 0x246 <__bad_interrupt>
      62:	00 00       	nop
      64:	f0 c0       	rjmp	.+480    	; 0x246 <__bad_interrupt>
      66:	00 00       	nop
      68:	ee c0       	rjmp	.+476    	; 0x246 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ec c0       	rjmp	.+472    	; 0x246 <__bad_interrupt>
      6e:	00 00       	nop
      70:	ea c0       	rjmp	.+468    	; 0x246 <__bad_interrupt>
      72:	00 00       	nop
      74:	e8 c0       	rjmp	.+464    	; 0x246 <__bad_interrupt>
      76:	00 00       	nop
      78:	e6 c0       	rjmp	.+460    	; 0x246 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e4 c0       	rjmp	.+456    	; 0x246 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e2 c0       	rjmp	.+452    	; 0x246 <__bad_interrupt>
      82:	00 00       	nop
      84:	e0 c0       	rjmp	.+448    	; 0x246 <__bad_interrupt>
      86:	00 00       	nop
      88:	de c0       	rjmp	.+444    	; 0x246 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	62 02       	muls	r22, r18
      8e:	72 02       	muls	r23, r18
      90:	76 02       	muls	r23, r22
      92:	7a 02       	muls	r23, r26
      94:	7e 02       	muls	r23, r30
      96:	82 02       	muls	r24, r18
      98:	86 02       	muls	r24, r22
      9a:	96 02       	muls	r25, r22
      9c:	98 02       	muls	r25, r24
      9e:	9b 02       	muls	r25, r27
      a0:	9e 02       	muls	r25, r30
      a2:	a1 02       	muls	r26, r17
      a4:	a4 02       	muls	r26, r20
      a6:	a7 02       	muls	r26, r23
      a8:	b5 02       	muls	r27, r21
      aa:	c6 02       	muls	r28, r22
      ac:	d7 02       	muls	r29, r23
      ae:	e8 02       	muls	r30, r24
      b0:	f9 02       	muls	r31, r25
      b2:	0a 03       	fmul	r16, r18
      b4:	1b 03       	fmul	r17, r19
      b6:	32 03       	mulsu	r19, r18
      b8:	35 03       	mulsu	r19, r21
      ba:	38 03       	fmul	r19, r16
      bc:	3b 03       	fmul	r19, r19
      be:	3e 03       	fmul	r19, r22
      c0:	41 03       	mulsu	r20, r17
      c2:	2f 03       	fmul	r18, r23
      c4:	44 03       	mulsu	r20, r20
      c6:	54 03       	mulsu	r21, r20
      c8:	60 03       	mulsu	r22, r16
      ca:	64 03       	mulsu	r22, r20
      cc:	68 03       	fmul	r22, r16
      ce:	6c 03       	fmul	r22, r20
      d0:	70 03       	mulsu	r23, r16
      d2:	74 03       	mulsu	r23, r20
      d4:	78 03       	fmul	r23, r16
      d6:	7c 03       	fmul	r23, r20
      d8:	80 03       	fmuls	r16, r16
      da:	8c 03       	fmulsu	r16, r20
      dc:	8e 03       	fmulsu	r16, r22
      de:	91 03       	fmuls	r17, r17
      e0:	94 03       	fmuls	r17, r20
      e2:	97 03       	fmuls	r17, r23
      e4:	9a 03       	fmulsu	r17, r18
      e6:	9d 03       	fmulsu	r17, r21
      e8:	a0 03       	fmuls	r18, r16
      ea:	a3 03       	fmuls	r18, r19
      ec:	a6 03       	fmuls	r18, r22
      ee:	b7 03       	fmuls	r19, r23
      f0:	d6 03       	fmuls	r21, r22
      f2:	e7 03       	fmuls	r22, r23
      f4:	f8 03       	fmulsu	r23, r16
      f6:	09 04       	cpc	r0, r9
      f8:	1a 04       	cpc	r1, r10
      fa:	2b 04       	cpc	r2, r11
      fc:	3c 04       	cpc	r3, r12
      fe:	4d 04       	cpc	r4, r13
     100:	5e 04       	cpc	r5, r14
     102:	ce 03       	fmulsu	r20, r22
     104:	72 04       	cpc	r7, r2
     106:	75 04       	cpc	r7, r5
     108:	78 04       	cpc	r7, r8
     10a:	7b 04       	cpc	r7, r11
     10c:	7e 04       	cpc	r7, r14
     10e:	81 04       	cpc	r8, r1
     110:	84 04       	cpc	r8, r4
     112:	87 04       	cpc	r8, r7
     114:	8a 04       	cpc	r8, r10
     116:	6f 04       	cpc	r6, r15
     118:	8d 04       	cpc	r8, r13
     11a:	9e 04       	cpc	r9, r14
     11c:	ab 04       	cpc	r10, r11
     11e:	af 04       	cpc	r10, r15
     120:	b3 04       	cpc	r11, r3
     122:	b7 04       	cpc	r11, r7
     124:	bb 04       	cpc	r11, r11
     126:	bf 04       	cpc	r11, r15
     128:	c3 04       	cpc	r12, r3
     12a:	c7 04       	cpc	r12, r7
     12c:	cb 04       	cpc	r12, r11
     12e:	cf 04       	cpc	r12, r15
     130:	d3 04       	cpc	r13, r3
     132:	d7 04       	cpc	r13, r7
     134:	e3 04       	cpc	r14, r3
     136:	e5 04       	cpc	r14, r5
     138:	e8 04       	cpc	r14, r8
     13a:	eb 04       	cpc	r14, r11
     13c:	ee 04       	cpc	r14, r14
     13e:	f1 04       	cpc	r15, r1
     140:	f4 04       	cpc	r15, r4
     142:	f7 04       	cpc	r15, r7
     144:	fa 04       	cpc	r15, r10
     146:	fd 04       	cpc	r15, r13
     148:	00 05       	cpc	r16, r0
     14a:	03 05       	cpc	r16, r3
     14c:	06 05       	cpc	r16, r6
     14e:	17 05       	cpc	r17, r7
     150:	2e 05       	cpc	r18, r14
     152:	3f 05       	cpc	r19, r15
     154:	50 05       	cpc	r21, r0
     156:	61 05       	cpc	r22, r1
     158:	72 05       	cpc	r23, r2
     15a:	83 05       	cpc	r24, r3
     15c:	94 05       	cpc	r25, r4
     15e:	a5 05       	cpc	r26, r5
     160:	b6 05       	cpc	r27, r6
     162:	c7 05       	cpc	r28, r7
     164:	d8 05       	cpc	r29, r8
     166:	e9 05       	cpc	r30, r9
     168:	ef 05       	cpc	r30, r15
     16a:	05 06       	cpc	r0, r21
     16c:	08 06       	cpc	r0, r24
     16e:	0b 06       	cpc	r0, r27
     170:	0e 06       	cpc	r0, r30
     172:	11 06       	cpc	r1, r17
     174:	14 06       	cpc	r1, r20
     176:	17 06       	cpc	r1, r23
     178:	1a 06       	cpc	r1, r26
     17a:	1d 06       	cpc	r1, r29
     17c:	20 06       	cpc	r2, r16
     17e:	23 06       	cpc	r2, r19
     180:	26 06       	cpc	r2, r22
     182:	02 06       	cpc	r0, r18
     184:	29 06       	cpc	r2, r25
     186:	3a 06       	cpc	r3, r26
     188:	47 06       	cpc	r4, r23
     18a:	4b 06       	cpc	r4, r27
     18c:	4f 06       	cpc	r4, r31
     18e:	53 06       	cpc	r5, r19
     190:	57 06       	cpc	r5, r23
     192:	5b 06       	cpc	r5, r27
     194:	5f 06       	cpc	r5, r31
     196:	63 06       	cpc	r6, r19
     198:	67 06       	cpc	r6, r23
     19a:	6b 06       	cpc	r6, r27
     19c:	6f 06       	cpc	r6, r31
     19e:	73 06       	cpc	r7, r19
     1a0:	77 06       	cpc	r7, r23
     1a2:	7b 06       	cpc	r7, r27
     1a4:	7f 06       	cpc	r7, r31
     1a6:	8b 06       	cpc	r8, r27
     1a8:	8d 06       	cpc	r8, r29
     1aa:	90 06       	cpc	r9, r16
     1ac:	93 06       	cpc	r9, r19
     1ae:	96 06       	cpc	r9, r22
     1b0:	99 06       	cpc	r9, r25
     1b2:	9c 06       	cpc	r9, r28
     1b4:	9f 06       	cpc	r9, r31
     1b6:	a2 06       	cpc	r10, r18
     1b8:	a5 06       	cpc	r10, r21
     1ba:	a8 06       	cpc	r10, r24
     1bc:	ab 06       	cpc	r10, r27
     1be:	ae 06       	cpc	r10, r30
     1c0:	b1 06       	cpc	r11, r17
     1c2:	b4 06       	cpc	r11, r20
     1c4:	b7 06       	cpc	r11, r23
     1c6:	c8 06       	cpc	r12, r24
     1c8:	df 06       	cpc	r13, r31
     1ca:	f0 06       	cpc	r15, r16
     1cc:	01 07       	cpc	r16, r17
     1ce:	12 07       	cpc	r17, r18
     1d0:	23 07       	cpc	r18, r19
     1d2:	34 07       	cpc	r19, r20
     1d4:	45 07       	cpc	r20, r21
     1d6:	56 07       	cpc	r21, r22
     1d8:	67 07       	cpc	r22, r23
     1da:	78 07       	cpc	r23, r24
     1dc:	89 07       	cpc	r24, r25
     1de:	9a 07       	cpc	r25, r26
     1e0:	ab 07       	cpc	r26, r27
     1e2:	bc 07       	cpc	r27, r28
     1e4:	cd 07       	cpc	r28, r29
     1e6:	d3 07       	cpc	r29, r19
     1e8:	e9 07       	cpc	r30, r25
     1ea:	ec 07       	cpc	r30, r28
     1ec:	ef 07       	cpc	r30, r31
     1ee:	f2 07       	cpc	r31, r18
     1f0:	f5 07       	cpc	r31, r21
     1f2:	f8 07       	cpc	r31, r24
     1f4:	fb 07       	cpc	r31, r27
     1f6:	fe 07       	cpc	r31, r30
     1f8:	01 08       	sbc	r0, r1
     1fa:	04 08       	sbc	r0, r4
     1fc:	07 08       	sbc	r0, r7
     1fe:	0a 08       	sbc	r0, r10
     200:	0d 08       	sbc	r0, r13
     202:	10 08       	sbc	r1, r0
     204:	13 08       	sbc	r1, r3
     206:	e6 07       	cpc	r30, r22
     208:	16 08       	sbc	r1, r6

0000020a <__ctors_end>:
     20a:	11 24       	eor	r1, r1
     20c:	1f be       	out	0x3f, r1	; 63
     20e:	cf ef       	ldi	r28, 0xFF	; 255
     210:	d0 e4       	ldi	r29, 0x40	; 64
     212:	de bf       	out	0x3e, r29	; 62
     214:	cd bf       	out	0x3d, r28	; 61

00000216 <__do_copy_data>:
     216:	11 e0       	ldi	r17, 0x01	; 1
     218:	a0 e0       	ldi	r26, 0x00	; 0
     21a:	b1 e0       	ldi	r27, 0x01	; 1
     21c:	ea e7       	ldi	r30, 0x7A	; 122
     21e:	f3 e1       	ldi	r31, 0x13	; 19
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0b bf       	out	0x3b, r16	; 59
     224:	02 c0       	rjmp	.+4      	; 0x22a <__do_copy_data+0x14>
     226:	07 90       	elpm	r0, Z+
     228:	0d 92       	st	X+, r0
     22a:	a4 30       	cpi	r26, 0x04	; 4
     22c:	b1 07       	cpc	r27, r17
     22e:	d9 f7       	brne	.-10     	; 0x226 <__do_copy_data+0x10>

00000230 <__do_clear_bss>:
     230:	21 e0       	ldi	r18, 0x01	; 1
     232:	a4 e0       	ldi	r26, 0x04	; 4
     234:	b1 e0       	ldi	r27, 0x01	; 1
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	a6 31       	cpi	r26, 0x16	; 22
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	f7 d6       	rcall	.+3566   	; 0x1030 <main>
     242:	0c 94 bb 09 	jmp	0x1376	; 0x1376 <_exit>

00000246 <__bad_interrupt>:
     246:	dc ce       	rjmp	.-584    	; 0x0 <__vectors>

00000248 <TimerOn>:
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
	_avr_timer_cntcurr = _avr_timer_M;
     248:	8b e0       	ldi	r24, 0x0B	; 11
     24a:	80 93 81 00 	sts	0x0081, r24
     24e:	8d e7       	ldi	r24, 0x7D	; 125
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	90 93 89 00 	sts	0x0089, r25
     256:	80 93 88 00 	sts	0x0088, r24
     25a:	82 e0       	ldi	r24, 0x02	; 2
     25c:	80 93 6f 00 	sts	0x006F, r24
     260:	10 92 85 00 	sts	0x0085, r1
     264:	10 92 84 00 	sts	0x0084, r1
     268:	80 91 00 01 	lds	r24, 0x0100
     26c:	90 91 01 01 	lds	r25, 0x0101
     270:	a0 91 02 01 	lds	r26, 0x0102
     274:	b0 91 03 01 	lds	r27, 0x0103
     278:	80 93 05 01 	sts	0x0105, r24
     27c:	90 93 06 01 	sts	0x0106, r25
     280:	a0 93 07 01 	sts	0x0107, r26
     284:	b0 93 08 01 	sts	0x0108, r27
     288:	8f b7       	in	r24, 0x3f	; 63
     28a:	80 68       	ori	r24, 0x80	; 128
     28c:	8f bf       	out	0x3f, r24	; 63
     28e:	08 95       	ret

00000290 <__vector_13>:
     290:	1f 92       	push	r1
     292:	0f 92       	push	r0
     294:	0f b6       	in	r0, 0x3f	; 63
     296:	0f 92       	push	r0
     298:	11 24       	eor	r1, r1
     29a:	8f 93       	push	r24
     29c:	9f 93       	push	r25
     29e:	af 93       	push	r26
     2a0:	bf 93       	push	r27
     2a2:	80 91 05 01 	lds	r24, 0x0105
     2a6:	90 91 06 01 	lds	r25, 0x0106
     2aa:	a0 91 07 01 	lds	r26, 0x0107
     2ae:	b0 91 08 01 	lds	r27, 0x0108
     2b2:	01 97       	sbiw	r24, 0x01	; 1
     2b4:	a1 09       	sbc	r26, r1
     2b6:	b1 09       	sbc	r27, r1
     2b8:	80 93 05 01 	sts	0x0105, r24
     2bc:	90 93 06 01 	sts	0x0106, r25
     2c0:	a0 93 07 01 	sts	0x0107, r26
     2c4:	b0 93 08 01 	sts	0x0108, r27
     2c8:	89 2b       	or	r24, r25
     2ca:	8a 2b       	or	r24, r26
     2cc:	8b 2b       	or	r24, r27
     2ce:	99 f4       	brne	.+38     	; 0x2f6 <__vector_13+0x66>
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	80 93 09 01 	sts	0x0109, r24
     2d6:	80 91 00 01 	lds	r24, 0x0100
     2da:	90 91 01 01 	lds	r25, 0x0101
     2de:	a0 91 02 01 	lds	r26, 0x0102
     2e2:	b0 91 03 01 	lds	r27, 0x0103
     2e6:	80 93 05 01 	sts	0x0105, r24
     2ea:	90 93 06 01 	sts	0x0106, r25
     2ee:	a0 93 07 01 	sts	0x0107, r26
     2f2:	b0 93 08 01 	sts	0x0108, r27
     2f6:	bf 91       	pop	r27
     2f8:	af 91       	pop	r26
     2fa:	9f 91       	pop	r25
     2fc:	8f 91       	pop	r24
     2fe:	0f 90       	pop	r0
     300:	0f be       	out	0x3f, r0	; 63
     302:	0f 90       	pop	r0
     304:	1f 90       	pop	r1
     306:	18 95       	reti

00000308 <TickFct_State_machine_1>:
///////////////////////////////////////////////begin code/////////////////////////////////////////////////////////////////////////////
enum SM1_States { SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;

void TickFct_State_machine_1() 
{
	switch(SM1_State) 
     308:	80 91 10 01 	lds	r24, 0x0110
     30c:	82 30       	cpi	r24, 0x02	; 2
     30e:	c9 f0       	breq	.+50     	; 0x342 <TickFct_State_machine_1+0x3a>
     310:	28 f4       	brcc	.+10     	; 0x31c <TickFct_State_machine_1+0x14>
     312:	88 23       	and	r24, r24
     314:	41 f0       	breq	.+16     	; 0x326 <TickFct_State_machine_1+0x1e>
     316:	81 30       	cpi	r24, 0x01	; 1
     318:	81 f0       	breq	.+32     	; 0x33a <TickFct_State_machine_1+0x32>
     31a:	20 c0       	rjmp	.+64     	; 0x35c <TickFct_State_machine_1+0x54>
     31c:	83 30       	cpi	r24, 0x03	; 3
     31e:	a9 f0       	breq	.+42     	; 0x34a <TickFct_State_machine_1+0x42>
     320:	84 30       	cpi	r24, 0x04	; 4
     322:	b9 f0       	breq	.+46     	; 0x352 <TickFct_State_machine_1+0x4a>
     324:	1b c0       	rjmp	.+54     	; 0x35c <TickFct_State_machine_1+0x54>
	{

		case SM1_off:
		if(global_g == 0)
     326:	80 91 04 01 	lds	r24, 0x0104
     32a:	81 11       	cpse	r24, r1
     32c:	26 c0       	rjmp	.+76     	; 0x37a <TickFct_State_machine_1+0x72>
		{
			if(~PINB & 0x10)
     32e:	1c 99       	sbic	0x03, 4	; 3
     330:	24 c0       	rjmp	.+72     	; 0x37a <TickFct_State_machine_1+0x72>
			{
				SM1_State = SM1_on1;
     332:	81 e0       	ldi	r24, 0x01	; 1
     334:	80 93 10 01 	sts	0x0110, r24
     338:	22 c0       	rjmp	.+68     	; 0x37e <TickFct_State_machine_1+0x76>
				SM1_State = SM1_off;
			}
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
     33a:	82 e0       	ldi	r24, 0x02	; 2
     33c:	80 93 10 01 	sts	0x0110, r24
     340:	21 c0       	rjmp	.+66     	; 0x384 <TickFct_State_machine_1+0x7c>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
     342:	83 e0       	ldi	r24, 0x03	; 3
     344:	80 93 10 01 	sts	0x0110, r24
     348:	20 c0       	rjmp	.+64     	; 0x38a <TickFct_State_machine_1+0x82>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
     34a:	84 e0       	ldi	r24, 0x04	; 4
     34c:	80 93 10 01 	sts	0x0110, r24
     350:	1f c0       	rjmp	.+62     	; 0x390 <TickFct_State_machine_1+0x88>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
     352:	10 92 10 01 	sts	0x0110, r1
		global_g = 1;
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	80 93 04 01 	sts	0x0104, r24
	}

	switch(SM1_State) 
     35c:	80 91 10 01 	lds	r24, 0x0110
     360:	82 30       	cpi	r24, 0x02	; 2
     362:	81 f0       	breq	.+32     	; 0x384 <TickFct_State_machine_1+0x7c>
     364:	28 f4       	brcc	.+10     	; 0x370 <TickFct_State_machine_1+0x68>
     366:	88 23       	and	r24, r24
     368:	41 f0       	breq	.+16     	; 0x37a <TickFct_State_machine_1+0x72>
     36a:	81 30       	cpi	r24, 0x01	; 1
     36c:	41 f0       	breq	.+16     	; 0x37e <TickFct_State_machine_1+0x76>
     36e:	08 95       	ret
     370:	83 30       	cpi	r24, 0x03	; 3
     372:	59 f0       	breq	.+22     	; 0x38a <TickFct_State_machine_1+0x82>
     374:	84 30       	cpi	r24, 0x04	; 4
     376:	71 f4       	brne	.+28     	; 0x394 <TickFct_State_machine_1+0x8c>
     378:	0b c0       	rjmp	.+22     	; 0x390 <TickFct_State_machine_1+0x88>
	{
		case SM1_off:
		PORTA = 0X00;
     37a:	12 b8       	out	0x02, r1	; 2
		break;
     37c:	08 95       	ret
		case SM1_on1:
		PORTA = 0x01;
     37e:	81 e0       	ldi	r24, 0x01	; 1
     380:	82 b9       	out	0x02, r24	; 2
		break;
     382:	08 95       	ret
		case SM1_on2:
		PORTA = 0x02;
     384:	82 e0       	ldi	r24, 0x02	; 2
     386:	82 b9       	out	0x02, r24	; 2
		break;
     388:	08 95       	ret
		case SM1_on3:
		PORTA = 0x04;
     38a:	84 e0       	ldi	r24, 0x04	; 4
     38c:	82 b9       	out	0x02, r24	; 2
		break;
     38e:	08 95       	ret
		case SM1_on4:
		PORTA = 0x08;
     390:	88 e0       	ldi	r24, 0x08	; 8
     392:	82 b9       	out	0x02, r24	; 2
     394:	08 95       	ret

00000396 <ButtonPress>:
}

enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
     396:	80 91 15 01 	lds	r24, 0x0115
     39a:	82 30       	cpi	r24, 0x02	; 2
     39c:	a9 f1       	breq	.+106    	; 0x408 <ButtonPress+0x72>
     39e:	28 f4       	brcc	.+10     	; 0x3aa <ButtonPress+0x14>
     3a0:	88 23       	and	r24, r24
     3a2:	59 f0       	breq	.+22     	; 0x3ba <ButtonPress+0x24>
     3a4:	81 30       	cpi	r24, 0x01	; 1
     3a6:	f9 f0       	breq	.+62     	; 0x3e6 <ButtonPress+0x50>
     3a8:	5f c0       	rjmp	.+190    	; 0x468 <ButtonPress+0xd2>
     3aa:	84 30       	cpi	r24, 0x04	; 4
     3ac:	09 f4       	brne	.+2      	; 0x3b0 <ButtonPress+0x1a>
     3ae:	4e c0       	rjmp	.+156    	; 0x44c <ButtonPress+0xb6>
     3b0:	e0 f1       	brcs	.+120    	; 0x42a <ButtonPress+0x94>
     3b2:	85 30       	cpi	r24, 0x05	; 5
     3b4:	09 f4       	brne	.+2      	; 0x3b8 <ButtonPress+0x22>
     3b6:	50 c0       	rjmp	.+160    	; 0x458 <ButtonPress+0xc2>
     3b8:	57 c0       	rjmp	.+174    	; 0x468 <ButtonPress+0xd2>
	{
		case Init:
		if(global_g == 1)
     3ba:	80 91 04 01 	lds	r24, 0x0104
     3be:	81 30       	cpi	r24, 0x01	; 1
     3c0:	09 f0       	breq	.+2      	; 0x3c4 <ButtonPress+0x2e>
     3c2:	75 c0       	rjmp	.+234    	; 0x4ae <ButtonPress+0x118>
		{
			if(~PINB & 0x01)
     3c4:	18 99       	sbic	0x03, 0	; 3
     3c6:	05 c0       	rjmp	.+10     	; 0x3d2 <ButtonPress+0x3c>
			{
				while(~PINB & 0x01){}
     3c8:	18 9b       	sbis	0x03, 0	; 3
     3ca:	fe cf       	rjmp	.-4      	; 0x3c8 <ButtonPress+0x32>
				Press_States = Press1;	
     3cc:	81 e0       	ldi	r24, 0x01	; 1
     3ce:	80 93 15 01 	sts	0x0115, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     3d2:	19 9b       	sbis	0x03, 1	; 3
     3d4:	04 c0       	rjmp	.+8      	; 0x3de <ButtonPress+0x48>
     3d6:	1a 9b       	sbis	0x03, 2	; 3
     3d8:	02 c0       	rjmp	.+4      	; 0x3de <ButtonPress+0x48>
     3da:	1b 99       	sbic	0x03, 3	; 3
     3dc:	45 c0       	rjmp	.+138    	; 0x468 <ButtonPress+0xd2>
			{
				Press_States = Error;
     3de:	85 e0       	ldi	r24, 0x05	; 5
     3e0:	80 93 15 01 	sts	0x0115, r24
     3e4:	51 c0       	rjmp	.+162    	; 0x488 <ButtonPress+0xf2>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
     3e6:	19 99       	sbic	0x03, 1	; 3
     3e8:	05 c0       	rjmp	.+10     	; 0x3f4 <ButtonPress+0x5e>
		{
			while(~PINB & 0x02){}
     3ea:	19 9b       	sbis	0x03, 1	; 3
     3ec:	fe cf       	rjmp	.-4      	; 0x3ea <ButtonPress+0x54>
			Press_States = Press2;
     3ee:	82 e0       	ldi	r24, 0x02	; 2
     3f0:	80 93 15 01 	sts	0x0115, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     3f4:	18 9b       	sbis	0x03, 0	; 3
     3f6:	04 c0       	rjmp	.+8      	; 0x400 <ButtonPress+0x6a>
     3f8:	1a 9b       	sbis	0x03, 2	; 3
     3fa:	02 c0       	rjmp	.+4      	; 0x400 <ButtonPress+0x6a>
     3fc:	1b 99       	sbic	0x03, 3	; 3
     3fe:	34 c0       	rjmp	.+104    	; 0x468 <ButtonPress+0xd2>
		{
			Press_States = Error;
     400:	85 e0       	ldi	r24, 0x05	; 5
     402:	80 93 15 01 	sts	0x0115, r24
     406:	40 c0       	rjmp	.+128    	; 0x488 <ButtonPress+0xf2>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
     408:	1a 99       	sbic	0x03, 2	; 3
     40a:	05 c0       	rjmp	.+10     	; 0x416 <ButtonPress+0x80>
		{
			while(~PINB & 0x04){}
     40c:	1a 9b       	sbis	0x03, 2	; 3
     40e:	fe cf       	rjmp	.-4      	; 0x40c <ButtonPress+0x76>
			Press_States = Press3;
     410:	83 e0       	ldi	r24, 0x03	; 3
     412:	80 93 15 01 	sts	0x0115, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     416:	19 9b       	sbis	0x03, 1	; 3
     418:	04 c0       	rjmp	.+8      	; 0x422 <ButtonPress+0x8c>
     41a:	18 9b       	sbis	0x03, 0	; 3
     41c:	02 c0       	rjmp	.+4      	; 0x422 <ButtonPress+0x8c>
     41e:	1b 99       	sbic	0x03, 3	; 3
     420:	23 c0       	rjmp	.+70     	; 0x468 <ButtonPress+0xd2>
		{
			Press_States = Error;
     422:	85 e0       	ldi	r24, 0x05	; 5
     424:	80 93 15 01 	sts	0x0115, r24
     428:	2f c0       	rjmp	.+94     	; 0x488 <ButtonPress+0xf2>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
     42a:	1b 99       	sbic	0x03, 3	; 3
     42c:	05 c0       	rjmp	.+10     	; 0x438 <ButtonPress+0xa2>
		{
			while(~PINB & 0x08){}
     42e:	1b 9b       	sbis	0x03, 3	; 3
     430:	fe cf       	rjmp	.-4      	; 0x42e <ButtonPress+0x98>
			Press_States = Press4;
     432:	84 e0       	ldi	r24, 0x04	; 4
     434:	80 93 15 01 	sts	0x0115, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     438:	19 9b       	sbis	0x03, 1	; 3
     43a:	04 c0       	rjmp	.+8      	; 0x444 <ButtonPress+0xae>
     43c:	1a 9b       	sbis	0x03, 2	; 3
     43e:	02 c0       	rjmp	.+4      	; 0x444 <ButtonPress+0xae>
     440:	18 99       	sbic	0x03, 0	; 3
     442:	12 c0       	rjmp	.+36     	; 0x468 <ButtonPress+0xd2>
		{
			Press_States = Error;
     444:	85 e0       	ldi	r24, 0x05	; 5
     446:	80 93 15 01 	sts	0x0115, r24
     44a:	1e c0       	rjmp	.+60     	; 0x488 <ButtonPress+0xf2>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
     44c:	1c 99       	sbic	0x03, 4	; 3
     44e:	28 c0       	rjmp	.+80     	; 0x4a0 <ButtonPress+0x10a>
		{
			Press_States = Off;	
     450:	86 e0       	ldi	r24, 0x06	; 6
     452:	80 93 15 01 	sts	0x0115, r24
     456:	27 c0       	rjmp	.+78     	; 0x4a6 <ButtonPress+0x110>
		}
		break;
		case Error:
		if(~PINB & 0x01)
     458:	18 99       	sbic	0x03, 0	; 3
     45a:	16 c0       	rjmp	.+44     	; 0x488 <ButtonPress+0xf2>
		{
			while(~PINB & 0x01){}
     45c:	18 9b       	sbis	0x03, 0	; 3
     45e:	fe cf       	rjmp	.-4      	; 0x45c <ButtonPress+0xc6>
			Press_States = Press1;
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	80 93 15 01 	sts	0x0115, r24
     466:	13 c0       	rjmp	.+38     	; 0x48e <ButtonPress+0xf8>
		}
		break;
	}
	switch(Press_States)
     468:	80 91 15 01 	lds	r24, 0x0115
     46c:	83 30       	cpi	r24, 0x03	; 3
     46e:	a9 f0       	breq	.+42     	; 0x49a <ButtonPress+0x104>
     470:	28 f4       	brcc	.+10     	; 0x47c <ButtonPress+0xe6>
     472:	81 30       	cpi	r24, 0x01	; 1
     474:	61 f0       	breq	.+24     	; 0x48e <ButtonPress+0xf8>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	69 f0       	breq	.+26     	; 0x494 <ButtonPress+0xfe>
     47a:	08 95       	ret
     47c:	85 30       	cpi	r24, 0x05	; 5
     47e:	21 f0       	breq	.+8      	; 0x488 <ButtonPress+0xf2>
     480:	78 f0       	brcs	.+30     	; 0x4a0 <ButtonPress+0x10a>
     482:	86 30       	cpi	r24, 0x06	; 6
     484:	81 f0       	breq	.+32     	; 0x4a6 <ButtonPress+0x110>
     486:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
     488:	80 e1       	ldi	r24, 0x10	; 16
     48a:	82 b9       	out	0x02, r24	; 2
		break;
     48c:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	82 b9       	out	0x02, r24	; 2
		break;
     492:	08 95       	ret
		
		case Press2:
		PORTA = 0x02;
     494:	82 e0       	ldi	r24, 0x02	; 2
     496:	82 b9       	out	0x02, r24	; 2
		break;
     498:	08 95       	ret
		
		case Press3:
		PORTA = 0x04;
     49a:	84 e0       	ldi	r24, 0x04	; 4
     49c:	82 b9       	out	0x02, r24	; 2
		break;
     49e:	08 95       	ret
		
		case Press4:
		PORTA = 0x08;
     4a0:	88 e0       	ldi	r24, 0x08	; 8
     4a2:	82 b9       	out	0x02, r24	; 2
		break;
     4a4:	08 95       	ret
		case Off:
		PORTA = 0x00;
     4a6:	12 b8       	out	0x02, r1	; 2
		global_g = 2;
     4a8:	82 e0       	ldi	r24, 0x02	; 2
     4aa:	80 93 04 01 	sts	0x0104, r24
     4ae:	08 95       	ret

000004b0 <TickFct_Machine2>:
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
     4b0:	80 91 0f 01 	lds	r24, 0x010F
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	87 30       	cpi	r24, 0x07	; 7
     4b8:	91 05       	cpc	r25, r1
     4ba:	70 f5       	brcc	.+92     	; 0x518 <TickFct_Machine2+0x68>
     4bc:	fc 01       	movw	r30, r24
     4be:	ea 5b       	subi	r30, 0xBA	; 186
     4c0:	ff 4f       	sbci	r31, 0xFF	; 255
     4c2:	53 c7       	rjmp	.+3750   	; 0x136a <__tablejump2__>
	{
		case SM2_off:
		if(global_g == 2)
     4c4:	80 91 04 01 	lds	r24, 0x0104
     4c8:	82 30       	cpi	r24, 0x02	; 2
     4ca:	81 f5       	brne	.+96     	; 0x52c <TickFct_Machine2+0x7c>
		{
			if(~PINB & 0x01)
     4cc:	18 99       	sbic	0x03, 0	; 3
     4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <TickFct_Machine2+0x26>
			{
				SM2_States = SM2_on1;
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	80 93 0f 01 	sts	0x010F, r24
			}
			while(!(~PINB & 0x01))
     4d6:	18 9b       	sbis	0x03, 0	; 3
     4d8:	1f c0       	rjmp	.+62     	; 0x518 <TickFct_Machine2+0x68>
			{
				SM2_States = SM2_off;
     4da:	10 92 0f 01 	sts	0x010F, r1
		{
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
     4de:	18 99       	sbic	0x03, 0	; 3
     4e0:	fc cf       	rjmp	.-8      	; 0x4da <TickFct_Machine2+0x2a>
     4e2:	24 c0       	rjmp	.+72     	; 0x52c <TickFct_Machine2+0x7c>
		else{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
     4e4:	82 e0       	ldi	r24, 0x02	; 2
     4e6:	80 93 0f 01 	sts	0x010F, r24
     4ea:	25 c0       	rjmp	.+74     	; 0x536 <TickFct_Machine2+0x86>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
     4ec:	83 e0       	ldi	r24, 0x03	; 3
     4ee:	80 93 0f 01 	sts	0x010F, r24
     4f2:	24 c0       	rjmp	.+72     	; 0x53c <TickFct_Machine2+0x8c>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
     4f4:	84 e0       	ldi	r24, 0x04	; 4
     4f6:	80 93 0f 01 	sts	0x010F, r24
     4fa:	23 c0       	rjmp	.+70     	; 0x542 <TickFct_Machine2+0x92>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
     4fc:	85 e0       	ldi	r24, 0x05	; 5
     4fe:	80 93 0f 01 	sts	0x010F, r24
     502:	22 c0       	rjmp	.+68     	; 0x548 <TickFct_Machine2+0x98>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
     504:	86 e0       	ldi	r24, 0x06	; 6
     506:	80 93 0f 01 	sts	0x010F, r24
     50a:	21 c0       	rjmp	.+66     	; 0x54e <TickFct_Machine2+0x9e>
		break;
		case SM2_on6:
		global_g = 3;
     50c:	83 e0       	ldi	r24, 0x03	; 3
     50e:	80 93 04 01 	sts	0x0104, r24
		SM2_States = SM2_off;
     512:	10 92 0f 01 	sts	0x010F, r1
		break;
     516:	0a c0       	rjmp	.+20     	; 0x52c <TickFct_Machine2+0x7c>
	}

	switch(SM2_States)
     518:	80 91 0f 01 	lds	r24, 0x010F
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	87 30       	cpi	r24, 0x07	; 7
     520:	91 05       	cpc	r25, r1
     522:	b8 f4       	brcc	.+46     	; 0x552 <TickFct_Machine2+0xa2>
     524:	fc 01       	movw	r30, r24
     526:	e3 5b       	subi	r30, 0xB3	; 179
     528:	ff 4f       	sbci	r31, 0xFF	; 255
     52a:	1f c7       	rjmp	.+3646   	; 0x136a <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
     52c:	12 b8       	out	0x02, r1	; 2
		break;
     52e:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
     530:	81 e0       	ldi	r24, 0x01	; 1
     532:	82 b9       	out	0x02, r24	; 2
		break;
     534:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
     536:	84 e0       	ldi	r24, 0x04	; 4
     538:	82 b9       	out	0x02, r24	; 2
		break;
     53a:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
     53c:	88 e0       	ldi	r24, 0x08	; 8
     53e:	82 b9       	out	0x02, r24	; 2
		break;
     540:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	82 b9       	out	0x02, r24	; 2
		break;
     546:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
     548:	82 e0       	ldi	r24, 0x02	; 2
     54a:	82 b9       	out	0x02, r24	; 2
		break;
     54c:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	82 b9       	out	0x02, r24	; 2
     552:	08 95       	ret

00000554 <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
     554:	80 91 0a 01 	lds	r24, 0x010A
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	87 30       	cpi	r24, 0x07	; 7
     55c:	91 05       	cpc	r25, r1
     55e:	08 f0       	brcs	.+2      	; 0x562 <ButtonPress2+0xe>
     560:	70 c0       	rjmp	.+224    	; 0x642 <ButtonPress2+0xee>
     562:	fc 01       	movw	r30, r24
     564:	ec 5a       	subi	r30, 0xAC	; 172
     566:	ff 4f       	sbci	r31, 0xFF	; 255
     568:	00 c7       	rjmp	.+3584   	; 0x136a <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
     56a:	18 99       	sbic	0x03, 0	; 3
     56c:	05 c0       	rjmp	.+10     	; 0x578 <ButtonPress2+0x24>
		{
			while(~PINB & 0x01){}
     56e:	18 9b       	sbis	0x03, 0	; 3
     570:	fe cf       	rjmp	.-4      	; 0x56e <ButtonPress2+0x1a>
			Press_sec_level = Press_state1;
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     578:	19 9b       	sbis	0x03, 1	; 3
     57a:	04 c0       	rjmp	.+8      	; 0x584 <ButtonPress2+0x30>
     57c:	1a 9b       	sbis	0x03, 2	; 3
     57e:	02 c0       	rjmp	.+4      	; 0x584 <ButtonPress2+0x30>
     580:	1b 99       	sbic	0x03, 3	; 3
     582:	62 c0       	rjmp	.+196    	; 0x648 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     584:	87 e0       	ldi	r24, 0x07	; 7
     586:	80 93 0a 01 	sts	0x010A, r24
     58a:	69 c0       	rjmp	.+210    	; 0x65e <ButtonPress2+0x10a>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
     58c:	1a 99       	sbic	0x03, 2	; 3
     58e:	05 c0       	rjmp	.+10     	; 0x59a <ButtonPress2+0x46>
		{
			while(~PINB & 0x04){}
     590:	1a 9b       	sbis	0x03, 2	; 3
     592:	fe cf       	rjmp	.-4      	; 0x590 <ButtonPress2+0x3c>
			Press_sec_level = Press_state2;
     594:	82 e0       	ldi	r24, 0x02	; 2
     596:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     59a:	19 9b       	sbis	0x03, 1	; 3
     59c:	04 c0       	rjmp	.+8      	; 0x5a6 <ButtonPress2+0x52>
     59e:	18 9b       	sbis	0x03, 0	; 3
     5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <ButtonPress2+0x52>
     5a2:	1b 99       	sbic	0x03, 3	; 3
     5a4:	51 c0       	rjmp	.+162    	; 0x648 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     5a6:	87 e0       	ldi	r24, 0x07	; 7
     5a8:	80 93 0a 01 	sts	0x010A, r24
     5ac:	58 c0       	rjmp	.+176    	; 0x65e <ButtonPress2+0x10a>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
     5ae:	1b 99       	sbic	0x03, 3	; 3
     5b0:	05 c0       	rjmp	.+10     	; 0x5bc <ButtonPress2+0x68>
		{
			while(~PINB & 0x08){}
     5b2:	1b 9b       	sbis	0x03, 3	; 3
     5b4:	fe cf       	rjmp	.-4      	; 0x5b2 <ButtonPress2+0x5e>
			Press_sec_level = Press_state3;
     5b6:	83 e0       	ldi	r24, 0x03	; 3
     5b8:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     5bc:	19 9b       	sbis	0x03, 1	; 3
     5be:	04 c0       	rjmp	.+8      	; 0x5c8 <ButtonPress2+0x74>
     5c0:	1a 9b       	sbis	0x03, 2	; 3
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <ButtonPress2+0x74>
     5c4:	18 99       	sbic	0x03, 0	; 3
     5c6:	40 c0       	rjmp	.+128    	; 0x648 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     5c8:	87 e0       	ldi	r24, 0x07	; 7
     5ca:	80 93 0a 01 	sts	0x010A, r24
     5ce:	47 c0       	rjmp	.+142    	; 0x65e <ButtonPress2+0x10a>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
     5d0:	18 99       	sbic	0x03, 0	; 3
     5d2:	05 c0       	rjmp	.+10     	; 0x5de <ButtonPress2+0x8a>
		{
			while(~PINB & 0x01){}
     5d4:	18 9b       	sbis	0x03, 0	; 3
     5d6:	fe cf       	rjmp	.-4      	; 0x5d4 <ButtonPress2+0x80>
			Press_sec_level = Press_state4;
     5d8:	84 e0       	ldi	r24, 0x04	; 4
     5da:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     5de:	19 9b       	sbis	0x03, 1	; 3
     5e0:	04 c0       	rjmp	.+8      	; 0x5ea <ButtonPress2+0x96>
     5e2:	1a 9b       	sbis	0x03, 2	; 3
     5e4:	02 c0       	rjmp	.+4      	; 0x5ea <ButtonPress2+0x96>
     5e6:	1b 99       	sbic	0x03, 3	; 3
     5e8:	2f c0       	rjmp	.+94     	; 0x648 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     5ea:	87 e0       	ldi	r24, 0x07	; 7
     5ec:	80 93 0a 01 	sts	0x010A, r24
     5f0:	36 c0       	rjmp	.+108    	; 0x65e <ButtonPress2+0x10a>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
     5f2:	19 99       	sbic	0x03, 1	; 3
     5f4:	05 c0       	rjmp	.+10     	; 0x600 <ButtonPress2+0xac>
		{
			while(~PINB & 0x02){}
     5f6:	19 9b       	sbis	0x03, 1	; 3
     5f8:	fe cf       	rjmp	.-4      	; 0x5f6 <ButtonPress2+0xa2>
			Press_sec_level = Press_state5;
     5fa:	85 e0       	ldi	r24, 0x05	; 5
     5fc:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     600:	18 9b       	sbis	0x03, 0	; 3
     602:	04 c0       	rjmp	.+8      	; 0x60c <ButtonPress2+0xb8>
     604:	1a 9b       	sbis	0x03, 2	; 3
     606:	02 c0       	rjmp	.+4      	; 0x60c <ButtonPress2+0xb8>
     608:	1b 99       	sbic	0x03, 3	; 3
     60a:	1e c0       	rjmp	.+60     	; 0x648 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     60c:	87 e0       	ldi	r24, 0x07	; 7
     60e:	80 93 0a 01 	sts	0x010A, r24
     612:	25 c0       	rjmp	.+74     	; 0x65e <ButtonPress2+0x10a>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
     614:	18 99       	sbic	0x03, 0	; 3
     616:	05 c0       	rjmp	.+10     	; 0x622 <ButtonPress2+0xce>
		{
			while(~PINB & 0x01){}
     618:	18 9b       	sbis	0x03, 0	; 3
     61a:	fe cf       	rjmp	.-4      	; 0x618 <ButtonPress2+0xc4>
			Press_sec_level = Press_state6;
     61c:	86 e0       	ldi	r24, 0x06	; 6
     61e:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     622:	19 9b       	sbis	0x03, 1	; 3
     624:	04 c0       	rjmp	.+8      	; 0x62e <ButtonPress2+0xda>
     626:	1a 9b       	sbis	0x03, 2	; 3
     628:	02 c0       	rjmp	.+4      	; 0x62e <ButtonPress2+0xda>
     62a:	1b 99       	sbic	0x03, 3	; 3
     62c:	0d c0       	rjmp	.+26     	; 0x648 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
     62e:	87 e0       	ldi	r24, 0x07	; 7
     630:	80 93 0a 01 	sts	0x010A, r24
     634:	14 c0       	rjmp	.+40     	; 0x65e <ButtonPress2+0x10a>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
     636:	1c 99       	sbic	0x03, 4	; 3
     638:	24 c0       	rjmp	.+72     	; 0x682 <ButtonPress2+0x12e>
		{
			Press_sec_level = Off2;
     63a:	88 e0       	ldi	r24, 0x08	; 8
     63c:	80 93 0a 01 	sts	0x010A, r24
     640:	23 c0       	rjmp	.+70     	; 0x688 <ButtonPress2+0x134>
		}
		break;
		default:
		Press_sec_level = Init2;
     642:	10 92 0a 01 	sts	0x010A, r1
     646:	08 95       	ret
	}
	switch(Press_sec_level)
     648:	80 91 0a 01 	lds	r24, 0x010A
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	fc 01       	movw	r30, r24
     650:	31 97       	sbiw	r30, 0x01	; 1
     652:	e8 30       	cpi	r30, 0x08	; 8
     654:	f1 05       	cpc	r31, r1
     656:	e0 f4       	brcc	.+56     	; 0x690 <ButtonPress2+0x13c>
     658:	e5 5a       	subi	r30, 0xA5	; 165
     65a:	ff 4f       	sbci	r31, 0xFF	; 255
     65c:	86 c6       	rjmp	.+3340   	; 0x136a <__tablejump2__>
	{
		case Error2:
		PORTA = 0x10;
     65e:	80 e1       	ldi	r24, 0x10	; 16
     660:	82 b9       	out	0x02, r24	; 2
		break;
     662:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
     664:	81 e0       	ldi	r24, 0x01	; 1
     666:	82 b9       	out	0x02, r24	; 2
		break;
     668:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
     66a:	84 e0       	ldi	r24, 0x04	; 4
     66c:	82 b9       	out	0x02, r24	; 2
		break;
     66e:	08 95       	ret

		case Press_state3:
		PORTA = 0x08;
     670:	88 e0       	ldi	r24, 0x08	; 8
     672:	82 b9       	out	0x02, r24	; 2
		break;
     674:	08 95       	ret

		case Press_state4:
		PORTA = 0x01;
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	82 b9       	out	0x02, r24	; 2
		break;
     67a:	08 95       	ret

		case Press_state5:
		PORTA = 0x02;
     67c:	82 e0       	ldi	r24, 0x02	; 2
     67e:	82 b9       	out	0x02, r24	; 2
		break;
     680:	08 95       	ret

		case Press_state6:
		PORTA = 0x01;
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	82 b9       	out	0x02, r24	; 2
		break;
     686:	08 95       	ret

		case Off2:
		PORTA = 0x00;
     688:	12 b8       	out	0x02, r1	; 2
		global_g = 4;
     68a:	84 e0       	ldi	r24, 0x04	; 4
     68c:	80 93 04 01 	sts	0x0104, r24
     690:	08 95       	ret

00000692 <TickFct_Machine3>:
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
     692:	20 91 0b 01 	lds	r18, 0x010B
     696:	82 2f       	mov	r24, r18
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	8a 30       	cpi	r24, 0x0A	; 10
     69c:	91 05       	cpc	r25, r1
     69e:	98 f5       	brcc	.+102    	; 0x706 <TickFct_Machine3+0x74>
     6a0:	fc 01       	movw	r30, r24
     6a2:	ed 59       	subi	r30, 0x9D	; 157
     6a4:	ff 4f       	sbci	r31, 0xFF	; 255
     6a6:	61 c6       	rjmp	.+3266   	; 0x136a <__tablejump2__>
	{
		case SM3_off:
		if(global_g == 4)
     6a8:	80 91 04 01 	lds	r24, 0x0104
     6ac:	84 30       	cpi	r24, 0x04	; 4
     6ae:	a1 f5       	brne	.+104    	; 0x718 <TickFct_Machine3+0x86>
		{
			if(~PINB & 0x01)
     6b0:	18 99       	sbic	0x03, 0	; 3
     6b2:	32 c0       	rjmp	.+100    	; 0x718 <TickFct_Machine3+0x86>
			{
				while(~PINB & 0x01){}
     6b4:	18 9b       	sbis	0x03, 0	; 3
     6b6:	fe cf       	rjmp	.-4      	; 0x6b4 <TickFct_Machine3+0x22>
				SM3_State = SM3_on1;
     6b8:	81 e0       	ldi	r24, 0x01	; 1
     6ba:	80 93 0b 01 	sts	0x010B, r24
     6be:	2e c0       	rjmp	.+92     	; 0x71c <TickFct_Machine3+0x8a>
				SM3_State = SM3_off;
			}	
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
     6c0:	82 e0       	ldi	r24, 0x02	; 2
     6c2:	80 93 0b 01 	sts	0x010B, r24
     6c6:	2d c0       	rjmp	.+90     	; 0x722 <TickFct_Machine3+0x90>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
     6c8:	83 e0       	ldi	r24, 0x03	; 3
     6ca:	80 93 0b 01 	sts	0x010B, r24
     6ce:	2c c0       	rjmp	.+88     	; 0x728 <TickFct_Machine3+0x96>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
     6d0:	84 e0       	ldi	r24, 0x04	; 4
     6d2:	80 93 0b 01 	sts	0x010B, r24
     6d6:	2b c0       	rjmp	.+86     	; 0x72e <TickFct_Machine3+0x9c>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
     6d8:	85 e0       	ldi	r24, 0x05	; 5
     6da:	80 93 0b 01 	sts	0x010B, r24
     6de:	2a c0       	rjmp	.+84     	; 0x734 <TickFct_Machine3+0xa2>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
     6e0:	86 e0       	ldi	r24, 0x06	; 6
     6e2:	80 93 0b 01 	sts	0x010B, r24
     6e6:	29 c0       	rjmp	.+82     	; 0x73a <TickFct_Machine3+0xa8>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
     6e8:	87 e0       	ldi	r24, 0x07	; 7
     6ea:	80 93 0b 01 	sts	0x010B, r24
     6ee:	28 c0       	rjmp	.+80     	; 0x740 <TickFct_Machine3+0xae>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
     6f0:	88 e0       	ldi	r24, 0x08	; 8
     6f2:	80 93 0b 01 	sts	0x010B, r24
     6f6:	27 c0       	rjmp	.+78     	; 0x746 <TickFct_Machine3+0xb4>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
     6f8:	89 e0       	ldi	r24, 0x09	; 9
     6fa:	80 93 0b 01 	sts	0x010B, r24
     6fe:	26 c0       	rjmp	.+76     	; 0x74c <TickFct_Machine3+0xba>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
     700:	10 92 0b 01 	sts	0x010B, r1
     704:	09 c0       	rjmp	.+18     	; 0x718 <TickFct_Machine3+0x86>
	}
	switch(SM3_State)
     706:	82 2f       	mov	r24, r18
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	8a 30       	cpi	r24, 0x0A	; 10
     70c:	91 05       	cpc	r25, r1
     70e:	18 f5       	brcc	.+70     	; 0x756 <TickFct_Machine3+0xc4>
     710:	fc 01       	movw	r30, r24
     712:	e3 59       	subi	r30, 0x93	; 147
     714:	ff 4f       	sbci	r31, 0xFF	; 255
     716:	29 c6       	rjmp	.+3154   	; 0x136a <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
     718:	12 b8       	out	0x02, r1	; 2
		break;
     71a:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
     71c:	82 e0       	ldi	r24, 0x02	; 2
     71e:	82 b9       	out	0x02, r24	; 2
		break;
     720:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
     722:	84 e0       	ldi	r24, 0x04	; 4
     724:	82 b9       	out	0x02, r24	; 2
		break;
     726:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
     728:	81 e0       	ldi	r24, 0x01	; 1
     72a:	82 b9       	out	0x02, r24	; 2
		break;
     72c:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
     72e:	88 e0       	ldi	r24, 0x08	; 8
     730:	82 b9       	out	0x02, r24	; 2
		break;
     732:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
     734:	82 e0       	ldi	r24, 0x02	; 2
     736:	82 b9       	out	0x02, r24	; 2
		break;
     738:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
     73a:	84 e0       	ldi	r24, 0x04	; 4
     73c:	82 b9       	out	0x02, r24	; 2
		break;
     73e:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	82 b9       	out	0x02, r24	; 2
		break;
     744:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
     746:	82 e0       	ldi	r24, 0x02	; 2
     748:	82 b9       	out	0x02, r24	; 2
		break;
     74a:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
     74c:	88 e0       	ldi	r24, 0x08	; 8
     74e:	82 b9       	out	0x02, r24	; 2
		global_g = 5;
     750:	85 e0       	ldi	r24, 0x05	; 5
     752:	80 93 04 01 	sts	0x0104, r24
     756:	08 95       	ret

00000758 <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
     758:	80 91 11 01 	lds	r24, 0x0111
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	8b 30       	cpi	r24, 0x0B	; 11
     760:	91 05       	cpc	r25, r1
     762:	08 f0       	brcs	.+2      	; 0x766 <ButtonPress3+0xe>
     764:	b1 c0       	rjmp	.+354    	; 0x8c8 <ButtonPress3+0x170>
     766:	fc 01       	movw	r30, r24
     768:	e9 58       	subi	r30, 0x89	; 137
     76a:	ff 4f       	sbci	r31, 0xFF	; 255
     76c:	fe c5       	rjmp	.+3068   	; 0x136a <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
     76e:	80 91 04 01 	lds	r24, 0x0104
     772:	85 30       	cpi	r24, 0x05	; 5
     774:	09 f0       	breq	.+2      	; 0x778 <ButtonPress3+0x20>
     776:	d5 c0       	rjmp	.+426    	; 0x922 <ButtonPress3+0x1ca>
		{
			PORTA = 0x00;
     778:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
     77a:	19 99       	sbic	0x03, 1	; 3
     77c:	05 c0       	rjmp	.+10     	; 0x788 <ButtonPress3+0x30>
			{
				while(~PINB & 0x02){}
     77e:	19 9b       	sbis	0x03, 1	; 3
     780:	fe cf       	rjmp	.-4      	; 0x77e <ButtonPress3+0x26>
				Press_third_level = Press3_state1;
     782:	81 e0       	ldi	r24, 0x01	; 1
     784:	80 93 11 01 	sts	0x0111, r24
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     788:	18 9b       	sbis	0x03, 0	; 3
     78a:	04 c0       	rjmp	.+8      	; 0x794 <ButtonPress3+0x3c>
     78c:	1a 9b       	sbis	0x03, 2	; 3
     78e:	02 c0       	rjmp	.+4      	; 0x794 <ButtonPress3+0x3c>
     790:	1b 99       	sbic	0x03, 3	; 3
     792:	9a c0       	rjmp	.+308    	; 0x8c8 <ButtonPress3+0x170>
			{
				Press_third_level = Error3;
     794:	8a e0       	ldi	r24, 0x0A	; 10
     796:	80 93 11 01 	sts	0x0111, r24
     79a:	a1 c0       	rjmp	.+322    	; 0x8de <ButtonPress3+0x186>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
     79c:	19 99       	sbic	0x03, 1	; 3
     79e:	9f c0       	rjmp	.+318    	; 0x8de <ButtonPress3+0x186>
		{
			while(~PINB & 0x02){}
     7a0:	19 9b       	sbis	0x03, 1	; 3
     7a2:	fe cf       	rjmp	.-4      	; 0x7a0 <ButtonPress3+0x48>
			Press_third_level = Press3_state1;
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	80 93 11 01 	sts	0x0111, r24
     7aa:	9c c0       	rjmp	.+312    	; 0x8e4 <ButtonPress3+0x18c>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
     7ac:	1a 99       	sbic	0x03, 2	; 3
     7ae:	05 c0       	rjmp	.+10     	; 0x7ba <ButtonPress3+0x62>
		{
			
			while(~PINB & 0x04){}
     7b0:	1a 9b       	sbis	0x03, 2	; 3
     7b2:	fe cf       	rjmp	.-4      	; 0x7b0 <ButtonPress3+0x58>
			Press_third_level = Press3_state2;
     7b4:	82 e0       	ldi	r24, 0x02	; 2
     7b6:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     7ba:	19 9b       	sbis	0x03, 1	; 3
     7bc:	04 c0       	rjmp	.+8      	; 0x7c6 <ButtonPress3+0x6e>
     7be:	18 9b       	sbis	0x03, 0	; 3
     7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <ButtonPress3+0x6e>
     7c2:	1b 99       	sbic	0x03, 3	; 3
     7c4:	81 c0       	rjmp	.+258    	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     7c6:	8a e0       	ldi	r24, 0x0A	; 10
     7c8:	80 93 11 01 	sts	0x0111, r24
     7cc:	88 c0       	rjmp	.+272    	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
     7ce:	18 99       	sbic	0x03, 0	; 3
     7d0:	05 c0       	rjmp	.+10     	; 0x7dc <ButtonPress3+0x84>
		{
			while(~PINB & 0x01){}
     7d2:	18 9b       	sbis	0x03, 0	; 3
     7d4:	fe cf       	rjmp	.-4      	; 0x7d2 <ButtonPress3+0x7a>
			Press_third_level = Press3_state3;
     7d6:	83 e0       	ldi	r24, 0x03	; 3
     7d8:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     7dc:	19 9b       	sbis	0x03, 1	; 3
     7de:	04 c0       	rjmp	.+8      	; 0x7e8 <ButtonPress3+0x90>
     7e0:	1a 9b       	sbis	0x03, 2	; 3
     7e2:	02 c0       	rjmp	.+4      	; 0x7e8 <ButtonPress3+0x90>
     7e4:	1b 99       	sbic	0x03, 3	; 3
     7e6:	70 c0       	rjmp	.+224    	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     7e8:	8a e0       	ldi	r24, 0x0A	; 10
     7ea:	80 93 11 01 	sts	0x0111, r24
     7ee:	77 c0       	rjmp	.+238    	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
     7f0:	1b 99       	sbic	0x03, 3	; 3
     7f2:	05 c0       	rjmp	.+10     	; 0x7fe <ButtonPress3+0xa6>
		{
			while(~PINB & 0x08){}
     7f4:	1b 9b       	sbis	0x03, 3	; 3
     7f6:	fe cf       	rjmp	.-4      	; 0x7f4 <ButtonPress3+0x9c>
			Press_third_level = Press3_state4;
     7f8:	84 e0       	ldi	r24, 0x04	; 4
     7fa:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     7fe:	19 9b       	sbis	0x03, 1	; 3
     800:	04 c0       	rjmp	.+8      	; 0x80a <ButtonPress3+0xb2>
     802:	1a 9b       	sbis	0x03, 2	; 3
     804:	02 c0       	rjmp	.+4      	; 0x80a <ButtonPress3+0xb2>
     806:	18 99       	sbic	0x03, 0	; 3
     808:	5f c0       	rjmp	.+190    	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     80a:	8a e0       	ldi	r24, 0x0A	; 10
     80c:	80 93 11 01 	sts	0x0111, r24
     810:	66 c0       	rjmp	.+204    	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
     812:	19 99       	sbic	0x03, 1	; 3
     814:	05 c0       	rjmp	.+10     	; 0x820 <ButtonPress3+0xc8>
		{
			while(~PINB & 0x02){}
     816:	19 9b       	sbis	0x03, 1	; 3
     818:	fe cf       	rjmp	.-4      	; 0x816 <ButtonPress3+0xbe>
			Press_third_level = Press3_state5;
     81a:	85 e0       	ldi	r24, 0x05	; 5
     81c:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     820:	18 9b       	sbis	0x03, 0	; 3
     822:	04 c0       	rjmp	.+8      	; 0x82c <ButtonPress3+0xd4>
     824:	1a 9b       	sbis	0x03, 2	; 3
     826:	02 c0       	rjmp	.+4      	; 0x82c <ButtonPress3+0xd4>
     828:	1b 99       	sbic	0x03, 3	; 3
     82a:	4e c0       	rjmp	.+156    	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     82c:	8a e0       	ldi	r24, 0x0A	; 10
     82e:	80 93 11 01 	sts	0x0111, r24
     832:	55 c0       	rjmp	.+170    	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
     834:	1a 99       	sbic	0x03, 2	; 3
     836:	05 c0       	rjmp	.+10     	; 0x842 <ButtonPress3+0xea>
		{
			
			while(~PINB & 0x04){}
     838:	1a 9b       	sbis	0x03, 2	; 3
     83a:	fe cf       	rjmp	.-4      	; 0x838 <ButtonPress3+0xe0>
			Press_third_level = Press3_state6;
     83c:	86 e0       	ldi	r24, 0x06	; 6
     83e:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     842:	19 9b       	sbis	0x03, 1	; 3
     844:	04 c0       	rjmp	.+8      	; 0x84e <ButtonPress3+0xf6>
     846:	18 9b       	sbis	0x03, 0	; 3
     848:	02 c0       	rjmp	.+4      	; 0x84e <ButtonPress3+0xf6>
     84a:	1b 99       	sbic	0x03, 3	; 3
     84c:	3d c0       	rjmp	.+122    	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     84e:	8a e0       	ldi	r24, 0x0A	; 10
     850:	80 93 11 01 	sts	0x0111, r24
     854:	44 c0       	rjmp	.+136    	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
     856:	18 99       	sbic	0x03, 0	; 3
     858:	05 c0       	rjmp	.+10     	; 0x864 <ButtonPress3+0x10c>
		{
			while(~PINB & 0x01){}
     85a:	18 9b       	sbis	0x03, 0	; 3
     85c:	fe cf       	rjmp	.-4      	; 0x85a <ButtonPress3+0x102>
			Press_third_level = Press3_state7;
     85e:	87 e0       	ldi	r24, 0x07	; 7
     860:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     864:	19 9b       	sbis	0x03, 1	; 3
     866:	04 c0       	rjmp	.+8      	; 0x870 <ButtonPress3+0x118>
     868:	1a 9b       	sbis	0x03, 2	; 3
     86a:	02 c0       	rjmp	.+4      	; 0x870 <ButtonPress3+0x118>
     86c:	1b 99       	sbic	0x03, 3	; 3
     86e:	2c c0       	rjmp	.+88     	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     870:	8a e0       	ldi	r24, 0x0A	; 10
     872:	80 93 11 01 	sts	0x0111, r24
     876:	33 c0       	rjmp	.+102    	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
     878:	19 99       	sbic	0x03, 1	; 3
     87a:	05 c0       	rjmp	.+10     	; 0x886 <ButtonPress3+0x12e>
		{
			while(~PINB & 0x02){}
     87c:	19 9b       	sbis	0x03, 1	; 3
     87e:	fe cf       	rjmp	.-4      	; 0x87c <ButtonPress3+0x124>
			Press_third_level = Press3_state8;
     880:	88 e0       	ldi	r24, 0x08	; 8
     882:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     886:	18 9b       	sbis	0x03, 0	; 3
     888:	04 c0       	rjmp	.+8      	; 0x892 <ButtonPress3+0x13a>
     88a:	1a 9b       	sbis	0x03, 2	; 3
     88c:	02 c0       	rjmp	.+4      	; 0x892 <ButtonPress3+0x13a>
     88e:	1b 99       	sbic	0x03, 3	; 3
     890:	1b c0       	rjmp	.+54     	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     892:	8a e0       	ldi	r24, 0x0A	; 10
     894:	80 93 11 01 	sts	0x0111, r24
     898:	22 c0       	rjmp	.+68     	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
     89a:	1b 99       	sbic	0x03, 3	; 3
     89c:	05 c0       	rjmp	.+10     	; 0x8a8 <ButtonPress3+0x150>
		{
			while(~PINB & 0x08){}
     89e:	1b 9b       	sbis	0x03, 3	; 3
     8a0:	fe cf       	rjmp	.-4      	; 0x89e <ButtonPress3+0x146>
			Press_third_level = Press3_state9;
     8a2:	89 e0       	ldi	r24, 0x09	; 9
     8a4:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     8a8:	19 9b       	sbis	0x03, 1	; 3
     8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <ButtonPress3+0x15c>
     8ac:	1a 9b       	sbis	0x03, 2	; 3
     8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <ButtonPress3+0x15c>
     8b0:	18 99       	sbic	0x03, 0	; 3
     8b2:	0a c0       	rjmp	.+20     	; 0x8c8 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
     8b4:	8a e0       	ldi	r24, 0x0A	; 10
     8b6:	80 93 11 01 	sts	0x0111, r24
     8ba:	11 c0       	rjmp	.+34     	; 0x8de <ButtonPress3+0x186>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
     8bc:	1c 99       	sbic	0x03, 4	; 3
     8be:	2a c0       	rjmp	.+84     	; 0x914 <ButtonPress3+0x1bc>
		{
			Press_third_level = Off3;
     8c0:	8b e0       	ldi	r24, 0x0B	; 11
     8c2:	80 93 11 01 	sts	0x0111, r24
     8c6:	29 c0       	rjmp	.+82     	; 0x91a <ButtonPress3+0x1c2>
		}
		break;
	}
	switch(Press_third_level)
     8c8:	80 91 11 01 	lds	r24, 0x0111
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	fc 01       	movw	r30, r24
     8d0:	31 97       	sbiw	r30, 0x01	; 1
     8d2:	eb 30       	cpi	r30, 0x0B	; 11
     8d4:	f1 05       	cpc	r31, r1
     8d6:	28 f5       	brcc	.+74     	; 0x922 <ButtonPress3+0x1ca>
     8d8:	ee 57       	subi	r30, 0x7E	; 126
     8da:	ff 4f       	sbci	r31, 0xFF	; 255
     8dc:	46 c5       	rjmp	.+2700   	; 0x136a <__tablejump2__>
	{
		case Error3:
		PORTA = 0x10;
     8de:	80 e1       	ldi	r24, 0x10	; 16
     8e0:	82 b9       	out	0x02, r24	; 2
		break;
     8e2:	08 95       	ret
		case Press3_state1:
		PORTA = 0x02;
     8e4:	82 e0       	ldi	r24, 0x02	; 2
     8e6:	82 b9       	out	0x02, r24	; 2
		break;
     8e8:	08 95       	ret
		case Press3_state2:
		PORTA = 0x04;
     8ea:	84 e0       	ldi	r24, 0x04	; 4
     8ec:	82 b9       	out	0x02, r24	; 2
		break;
     8ee:	08 95       	ret
		case Press3_state3:
		PORTA = 0x01;
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	82 b9       	out	0x02, r24	; 2
		break;
     8f4:	08 95       	ret
		case Press3_state4:
		PORTA = 0x08;
     8f6:	88 e0       	ldi	r24, 0x08	; 8
     8f8:	82 b9       	out	0x02, r24	; 2
		break;
     8fa:	08 95       	ret
		case Press3_state5:
		PORTA = 0x02;
     8fc:	82 e0       	ldi	r24, 0x02	; 2
     8fe:	82 b9       	out	0x02, r24	; 2
		break;
     900:	08 95       	ret
		case Press3_state6:
		PORTA = 0x04;
     902:	84 e0       	ldi	r24, 0x04	; 4
     904:	82 b9       	out	0x02, r24	; 2
		break;
     906:	08 95       	ret
		case Press3_state7:
		PORTA = 0x01;
     908:	81 e0       	ldi	r24, 0x01	; 1
     90a:	82 b9       	out	0x02, r24	; 2
		break;
     90c:	08 95       	ret
		case Press3_state8:
		PORTA = 0x02;
     90e:	82 e0       	ldi	r24, 0x02	; 2
     910:	82 b9       	out	0x02, r24	; 2
		break;
     912:	08 95       	ret
		case Press3_state9:
		PORTA = 0x08;
     914:	88 e0       	ldi	r24, 0x08	; 8
     916:	82 b9       	out	0x02, r24	; 2
		break;
     918:	08 95       	ret
		case Off3:
		PORTA = 0x00;
     91a:	12 b8       	out	0x02, r1	; 2
		global_g = 6;
     91c:	86 e0       	ldi	r24, 0x06	; 6
     91e:	80 93 04 01 	sts	0x0104, r24
     922:	08 95       	ret

00000924 <TickFct_Machine4>:
}

enum SM4_States {SM4_off, SM4_on1, SM4_on2, SM4_on3, SM4_on4, SM4_on5, SM4_on6, SM4_on7, SM4_on8, SM4_on9, SM4_on10, SM4_on11, SM4_on12} SM4_States;
void TickFct_Machine4()
{
	switch(SM4_States)
     924:	20 91 0c 01 	lds	r18, 0x010C
     928:	82 2f       	mov	r24, r18
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	8d 30       	cpi	r24, 0x0D	; 13
     92e:	91 05       	cpc	r25, r1
     930:	08 f0       	brcs	.+2      	; 0x934 <TickFct_Machine4+0x10>
     932:	40 c0       	rjmp	.+128    	; 0x9b4 <TickFct_Machine4+0x90>
     934:	fc 01       	movw	r30, r24
     936:	e3 57       	subi	r30, 0x73	; 115
     938:	ff 4f       	sbci	r31, 0xFF	; 255
     93a:	17 c5       	rjmp	.+2606   	; 0x136a <__tablejump2__>
	{
		case SM4_off:
		if(global_g == 6)
     93c:	80 91 04 01 	lds	r24, 0x0104
     940:	86 30       	cpi	r24, 0x06	; 6
     942:	09 f0       	breq	.+2      	; 0x946 <TickFct_Machine4+0x22>
     944:	40 c0       	rjmp	.+128    	; 0x9c6 <TickFct_Machine4+0xa2>
		{
			if(~PINB & 0x01)
     946:	18 99       	sbic	0x03, 0	; 3
     948:	3e c0       	rjmp	.+124    	; 0x9c6 <TickFct_Machine4+0xa2>
			{
				while(~PINB & 0x01){}
     94a:	18 9b       	sbis	0x03, 0	; 3
     94c:	fe cf       	rjmp	.-4      	; 0x94a <TickFct_Machine4+0x26>
				SM4_States = SM4_on1;
     94e:	81 e0       	ldi	r24, 0x01	; 1
     950:	80 93 0c 01 	sts	0x010C, r24
     954:	3a c0       	rjmp	.+116    	; 0x9ca <TickFct_Machine4+0xa6>
				SM4_States = SM4_off;
			}
		}
		break;
		case SM4_on1:
		SM4_States = SM4_on2;
     956:	82 e0       	ldi	r24, 0x02	; 2
     958:	80 93 0c 01 	sts	0x010C, r24
     95c:	39 c0       	rjmp	.+114    	; 0x9d0 <TickFct_Machine4+0xac>
		break;
		case SM4_on2:
		SM4_States = SM4_on3;
     95e:	83 e0       	ldi	r24, 0x03	; 3
     960:	80 93 0c 01 	sts	0x010C, r24
     964:	38 c0       	rjmp	.+112    	; 0x9d6 <TickFct_Machine4+0xb2>
		break;
		case SM4_on3:
		SM4_States = SM4_on4;
     966:	84 e0       	ldi	r24, 0x04	; 4
     968:	80 93 0c 01 	sts	0x010C, r24
     96c:	37 c0       	rjmp	.+110    	; 0x9dc <TickFct_Machine4+0xb8>
		break;
		case SM4_on4:
		SM4_States = SM4_on5;
     96e:	85 e0       	ldi	r24, 0x05	; 5
     970:	80 93 0c 01 	sts	0x010C, r24
     974:	36 c0       	rjmp	.+108    	; 0x9e2 <TickFct_Machine4+0xbe>
		break;
		case SM4_on5:
		SM4_States = SM4_on6;
     976:	86 e0       	ldi	r24, 0x06	; 6
     978:	80 93 0c 01 	sts	0x010C, r24
     97c:	35 c0       	rjmp	.+106    	; 0x9e8 <TickFct_Machine4+0xc4>
		break;
		case SM4_on6:
		SM4_States = SM4_on7;
     97e:	87 e0       	ldi	r24, 0x07	; 7
     980:	80 93 0c 01 	sts	0x010C, r24
     984:	34 c0       	rjmp	.+104    	; 0x9ee <TickFct_Machine4+0xca>
		break;
		case SM4_on7:
		SM4_States = SM4_on8;
     986:	88 e0       	ldi	r24, 0x08	; 8
     988:	80 93 0c 01 	sts	0x010C, r24
     98c:	33 c0       	rjmp	.+102    	; 0x9f4 <TickFct_Machine4+0xd0>
		break;
		case SM4_on8:
		SM4_States = SM4_on9;
     98e:	89 e0       	ldi	r24, 0x09	; 9
     990:	80 93 0c 01 	sts	0x010C, r24
     994:	32 c0       	rjmp	.+100    	; 0x9fa <TickFct_Machine4+0xd6>
		break;
		case SM4_on9:
		SM4_States = SM4_on10;
     996:	8a e0       	ldi	r24, 0x0A	; 10
     998:	80 93 0c 01 	sts	0x010C, r24
     99c:	31 c0       	rjmp	.+98     	; 0xa00 <TickFct_Machine4+0xdc>
		break;
		case SM4_on10:
		SM4_States = SM4_on11;
     99e:	8b e0       	ldi	r24, 0x0B	; 11
     9a0:	80 93 0c 01 	sts	0x010C, r24
     9a4:	30 c0       	rjmp	.+96     	; 0xa06 <TickFct_Machine4+0xe2>
		break;
		case SM4_on11:
		SM4_States = SM4_on12;
     9a6:	8c e0       	ldi	r24, 0x0C	; 12
     9a8:	80 93 0c 01 	sts	0x010C, r24
     9ac:	2f c0       	rjmp	.+94     	; 0xa0c <TickFct_Machine4+0xe8>
		break;
		case SM4_on12:
		SM4_States = SM4_off;
     9ae:	10 92 0c 01 	sts	0x010C, r1
		break;
     9b2:	09 c0       	rjmp	.+18     	; 0x9c6 <TickFct_Machine4+0xa2>
	}
	switch(SM4_States)
     9b4:	82 2f       	mov	r24, r18
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	8d 30       	cpi	r24, 0x0D	; 13
     9ba:	91 05       	cpc	r25, r1
     9bc:	60 f5       	brcc	.+88     	; 0xa16 <TickFct_Machine4+0xf2>
     9be:	fc 01       	movw	r30, r24
     9c0:	e6 56       	subi	r30, 0x66	; 102
     9c2:	ff 4f       	sbci	r31, 0xFF	; 255
     9c4:	d2 c4       	rjmp	.+2468   	; 0x136a <__tablejump2__>
	{
		case SM4_off:
		PORTA = 0x00;
     9c6:	12 b8       	out	0x02, r1	; 2
		break;
     9c8:	08 95       	ret
		case SM4_on1:
		PORTA = 0x01;
     9ca:	81 e0       	ldi	r24, 0x01	; 1
     9cc:	82 b9       	out	0x02, r24	; 2
		break;
     9ce:	08 95       	ret
		case SM4_on2:
		PORTA = 0x08;
     9d0:	88 e0       	ldi	r24, 0x08	; 8
     9d2:	82 b9       	out	0x02, r24	; 2
		break;
     9d4:	08 95       	ret
		case SM4_on3:
		PORTA = 0x02;
     9d6:	82 e0       	ldi	r24, 0x02	; 2
     9d8:	82 b9       	out	0x02, r24	; 2
		break;
     9da:	08 95       	ret
		case SM4_on4:
		PORTA = 0x01;
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	82 b9       	out	0x02, r24	; 2
		break;
     9e0:	08 95       	ret
		case SM4_on5:
		PORTA = 0x02;
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	82 b9       	out	0x02, r24	; 2
		break;
     9e6:	08 95       	ret
		case SM4_on6:
		PORTA = 0x08;
     9e8:	88 e0       	ldi	r24, 0x08	; 8
     9ea:	82 b9       	out	0x02, r24	; 2
		break;
     9ec:	08 95       	ret
		case SM4_on7:
		PORTA = 0x02;
     9ee:	82 e0       	ldi	r24, 0x02	; 2
     9f0:	82 b9       	out	0x02, r24	; 2
		break;
     9f2:	08 95       	ret
		case SM4_on8:
		PORTA = 0x01;
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	82 b9       	out	0x02, r24	; 2
		break;
     9f8:	08 95       	ret
		case SM4_on9:
		PORTA = 0x08;
     9fa:	88 e0       	ldi	r24, 0x08	; 8
     9fc:	82 b9       	out	0x02, r24	; 2
		break;
     9fe:	08 95       	ret
		case SM4_on10:
		PORTA = 0x01;
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	82 b9       	out	0x02, r24	; 2
		break;
     a04:	08 95       	ret
		case SM4_on11:
		PORTA = 0x02;
     a06:	82 e0       	ldi	r24, 0x02	; 2
     a08:	82 b9       	out	0x02, r24	; 2
		break;
     a0a:	08 95       	ret
		case SM4_on12:
		PORTA = 0x01;
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	82 b9       	out	0x02, r24	; 2
		global_g = 7;
     a10:	87 e0       	ldi	r24, 0x07	; 7
     a12:	80 93 04 01 	sts	0x0104, r24
     a16:	08 95       	ret

00000a18 <ButtonPress4>:
}

enum Press_fourth_level{Init4, Press4_state1, Press4_state2, Press4_state3, Press4_state4, Press4_state5, Press4_state6, Press4_state7, Press4_state8, Press4_state9, Press4_state10, Press4_state11, Press4_state12, Error4, Off4} Press_fourth_level;
void ButtonPress4()
{
	switch(Press_fourth_level)
     a18:	80 91 0e 01 	lds	r24, 0x010E
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	8e 30       	cpi	r24, 0x0E	; 14
     a20:	91 05       	cpc	r25, r1
     a22:	08 f0       	brcs	.+2      	; 0xa26 <ButtonPress4+0xe>
     a24:	e4 c0       	rjmp	.+456    	; 0xbee <ButtonPress4+0x1d6>
     a26:	fc 01       	movw	r30, r24
     a28:	e9 55       	subi	r30, 0x59	; 89
     a2a:	ff 4f       	sbci	r31, 0xFF	; 255
     a2c:	9e c4       	rjmp	.+2364   	; 0x136a <__tablejump2__>
	{
		case Init4:
		if(global_g == 7)
     a2e:	80 91 04 01 	lds	r24, 0x0104
     a32:	87 30       	cpi	r24, 0x07	; 7
     a34:	09 f0       	breq	.+2      	; 0xa38 <ButtonPress4+0x20>
     a36:	11 c1       	rjmp	.+546    	; 0xc5a <ButtonPress4+0x242>
		{
			PORTA = 0x00;
     a38:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x01)
     a3a:	18 99       	sbic	0x03, 0	; 3
     a3c:	05 c0       	rjmp	.+10     	; 0xa48 <ButtonPress4+0x30>
			{
				while(~PINB & 0x01){}
     a3e:	18 9b       	sbis	0x03, 0	; 3
     a40:	fe cf       	rjmp	.-4      	; 0xa3e <ButtonPress4+0x26>
				Press_fourth_level = Press4_state1; 
     a42:	81 e0       	ldi	r24, 0x01	; 1
     a44:	80 93 0e 01 	sts	0x010E, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     a48:	19 9b       	sbis	0x03, 1	; 3
     a4a:	04 c0       	rjmp	.+8      	; 0xa54 <ButtonPress4+0x3c>
     a4c:	1a 9b       	sbis	0x03, 2	; 3
     a4e:	02 c0       	rjmp	.+4      	; 0xa54 <ButtonPress4+0x3c>
     a50:	1b 99       	sbic	0x03, 3	; 3
     a52:	cd c0       	rjmp	.+410    	; 0xbee <ButtonPress4+0x1d6>
			{
				Press_fourth_level = Error4;
     a54:	8d e0       	ldi	r24, 0x0D	; 13
     a56:	80 93 0e 01 	sts	0x010E, r24
     a5a:	d4 c0       	rjmp	.+424    	; 0xc04 <ButtonPress4+0x1ec>
			}
		}
		break;
		case Press4_state1:
		if(~PINB & 0x08)
     a5c:	1b 99       	sbic	0x03, 3	; 3
     a5e:	05 c0       	rjmp	.+10     	; 0xa6a <ButtonPress4+0x52>
		{
			while(~PINB & 0x08){}
     a60:	1b 9b       	sbis	0x03, 3	; 3
     a62:	fe cf       	rjmp	.-4      	; 0xa60 <ButtonPress4+0x48>
			Press_fourth_level = Press4_state2;
     a64:	82 e0       	ldi	r24, 0x02	; 2
     a66:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     a6a:	19 9b       	sbis	0x03, 1	; 3
     a6c:	04 c0       	rjmp	.+8      	; 0xa76 <ButtonPress4+0x5e>
     a6e:	1a 9b       	sbis	0x03, 2	; 3
     a70:	02 c0       	rjmp	.+4      	; 0xa76 <ButtonPress4+0x5e>
     a72:	18 99       	sbic	0x03, 0	; 3
     a74:	bc c0       	rjmp	.+376    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     a76:	8d e0       	ldi	r24, 0x0D	; 13
     a78:	80 93 0e 01 	sts	0x010E, r24
     a7c:	c3 c0       	rjmp	.+390    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state2:
		if(~PINB & 0x02)
     a7e:	19 99       	sbic	0x03, 1	; 3
     a80:	05 c0       	rjmp	.+10     	; 0xa8c <ButtonPress4+0x74>
		{
			while(~PINB & 0x02){}
     a82:	19 9b       	sbis	0x03, 1	; 3
     a84:	fe cf       	rjmp	.-4      	; 0xa82 <ButtonPress4+0x6a>
			Press_fourth_level = Press4_state3;
     a86:	83 e0       	ldi	r24, 0x03	; 3
     a88:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     a8c:	18 9b       	sbis	0x03, 0	; 3
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <ButtonPress4+0x80>
     a90:	1a 9b       	sbis	0x03, 2	; 3
     a92:	02 c0       	rjmp	.+4      	; 0xa98 <ButtonPress4+0x80>
     a94:	1b 99       	sbic	0x03, 3	; 3
     a96:	ab c0       	rjmp	.+342    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     a98:	8d e0       	ldi	r24, 0x0D	; 13
     a9a:	80 93 0e 01 	sts	0x010E, r24
     a9e:	b2 c0       	rjmp	.+356    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state3:
		if(~PINB & 0x01)
     aa0:	18 99       	sbic	0x03, 0	; 3
     aa2:	05 c0       	rjmp	.+10     	; 0xaae <ButtonPress4+0x96>
		{
			while(~PINB & 0x01){}
     aa4:	18 9b       	sbis	0x03, 0	; 3
     aa6:	fe cf       	rjmp	.-4      	; 0xaa4 <ButtonPress4+0x8c>
			Press_fourth_level = Press4_state4;
     aa8:	84 e0       	ldi	r24, 0x04	; 4
     aaa:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     aae:	19 9b       	sbis	0x03, 1	; 3
     ab0:	04 c0       	rjmp	.+8      	; 0xaba <ButtonPress4+0xa2>
     ab2:	1a 9b       	sbis	0x03, 2	; 3
     ab4:	02 c0       	rjmp	.+4      	; 0xaba <ButtonPress4+0xa2>
     ab6:	1b 99       	sbic	0x03, 3	; 3
     ab8:	9a c0       	rjmp	.+308    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     aba:	8d e0       	ldi	r24, 0x0D	; 13
     abc:	80 93 0e 01 	sts	0x010E, r24
     ac0:	a1 c0       	rjmp	.+322    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state4:
		if(~PINB & 0x02)
     ac2:	19 99       	sbic	0x03, 1	; 3
     ac4:	05 c0       	rjmp	.+10     	; 0xad0 <ButtonPress4+0xb8>
		{
			while(~PINB & 0x02){}
     ac6:	19 9b       	sbis	0x03, 1	; 3
     ac8:	fe cf       	rjmp	.-4      	; 0xac6 <ButtonPress4+0xae>
			Press_fourth_level = Press4_state5;
     aca:	85 e0       	ldi	r24, 0x05	; 5
     acc:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     ad0:	18 9b       	sbis	0x03, 0	; 3
     ad2:	04 c0       	rjmp	.+8      	; 0xadc <ButtonPress4+0xc4>
     ad4:	1a 9b       	sbis	0x03, 2	; 3
     ad6:	02 c0       	rjmp	.+4      	; 0xadc <ButtonPress4+0xc4>
     ad8:	1b 99       	sbic	0x03, 3	; 3
     ada:	89 c0       	rjmp	.+274    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     adc:	8d e0       	ldi	r24, 0x0D	; 13
     ade:	80 93 0e 01 	sts	0x010E, r24
     ae2:	90 c0       	rjmp	.+288    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state5:
		if(~PINB & 0x08)
     ae4:	1b 99       	sbic	0x03, 3	; 3
     ae6:	05 c0       	rjmp	.+10     	; 0xaf2 <ButtonPress4+0xda>
		{
			while(~PINB & 0x08){}
     ae8:	1b 9b       	sbis	0x03, 3	; 3
     aea:	fe cf       	rjmp	.-4      	; 0xae8 <ButtonPress4+0xd0>
			Press_fourth_level = Press4_state6;
     aec:	86 e0       	ldi	r24, 0x06	; 6
     aee:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     af2:	19 9b       	sbis	0x03, 1	; 3
     af4:	04 c0       	rjmp	.+8      	; 0xafe <ButtonPress4+0xe6>
     af6:	1a 9b       	sbis	0x03, 2	; 3
     af8:	02 c0       	rjmp	.+4      	; 0xafe <ButtonPress4+0xe6>
     afa:	18 99       	sbic	0x03, 0	; 3
     afc:	78 c0       	rjmp	.+240    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     afe:	8d e0       	ldi	r24, 0x0D	; 13
     b00:	80 93 0e 01 	sts	0x010E, r24
     b04:	7f c0       	rjmp	.+254    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state6:
		if(~PINB & 0x02)
     b06:	19 99       	sbic	0x03, 1	; 3
     b08:	05 c0       	rjmp	.+10     	; 0xb14 <ButtonPress4+0xfc>
		{
			while(~PINB & 0x02){}
     b0a:	19 9b       	sbis	0x03, 1	; 3
     b0c:	fe cf       	rjmp	.-4      	; 0xb0a <ButtonPress4+0xf2>
			Press_fourth_level = Press4_state7;
     b0e:	87 e0       	ldi	r24, 0x07	; 7
     b10:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     b14:	18 9b       	sbis	0x03, 0	; 3
     b16:	04 c0       	rjmp	.+8      	; 0xb20 <ButtonPress4+0x108>
     b18:	1a 9b       	sbis	0x03, 2	; 3
     b1a:	02 c0       	rjmp	.+4      	; 0xb20 <ButtonPress4+0x108>
     b1c:	1b 99       	sbic	0x03, 3	; 3
     b1e:	67 c0       	rjmp	.+206    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b20:	8d e0       	ldi	r24, 0x0D	; 13
     b22:	80 93 0e 01 	sts	0x010E, r24
     b26:	6e c0       	rjmp	.+220    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state7:
		if(~PINB & 0x01)
     b28:	18 99       	sbic	0x03, 0	; 3
     b2a:	05 c0       	rjmp	.+10     	; 0xb36 <ButtonPress4+0x11e>
		{
			while(~PINB & 0x01){}
     b2c:	18 9b       	sbis	0x03, 0	; 3
     b2e:	fe cf       	rjmp	.-4      	; 0xb2c <ButtonPress4+0x114>
			Press_fourth_level = Press4_state8;
     b30:	88 e0       	ldi	r24, 0x08	; 8
     b32:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     b36:	19 9b       	sbis	0x03, 1	; 3
     b38:	04 c0       	rjmp	.+8      	; 0xb42 <ButtonPress4+0x12a>
     b3a:	1a 9b       	sbis	0x03, 2	; 3
     b3c:	02 c0       	rjmp	.+4      	; 0xb42 <ButtonPress4+0x12a>
     b3e:	1b 99       	sbic	0x03, 3	; 3
     b40:	56 c0       	rjmp	.+172    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b42:	8d e0       	ldi	r24, 0x0D	; 13
     b44:	80 93 0e 01 	sts	0x010E, r24
     b48:	5d c0       	rjmp	.+186    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state8:
		if(~PINB & 0x08)
     b4a:	1b 99       	sbic	0x03, 3	; 3
     b4c:	05 c0       	rjmp	.+10     	; 0xb58 <ButtonPress4+0x140>
		{
			while(~PINB & 0x08){}
     b4e:	1b 9b       	sbis	0x03, 3	; 3
     b50:	fe cf       	rjmp	.-4      	; 0xb4e <ButtonPress4+0x136>
			Press_fourth_level = Press4_state9;
     b52:	89 e0       	ldi	r24, 0x09	; 9
     b54:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     b58:	19 9b       	sbis	0x03, 1	; 3
     b5a:	04 c0       	rjmp	.+8      	; 0xb64 <ButtonPress4+0x14c>
     b5c:	1a 9b       	sbis	0x03, 2	; 3
     b5e:	02 c0       	rjmp	.+4      	; 0xb64 <ButtonPress4+0x14c>
     b60:	18 99       	sbic	0x03, 0	; 3
     b62:	45 c0       	rjmp	.+138    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b64:	8d e0       	ldi	r24, 0x0D	; 13
     b66:	80 93 0e 01 	sts	0x010E, r24
     b6a:	4c c0       	rjmp	.+152    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state9:
		if(~PINB & 0x01)
     b6c:	18 99       	sbic	0x03, 0	; 3
     b6e:	05 c0       	rjmp	.+10     	; 0xb7a <ButtonPress4+0x162>
		{
			while(~PINB & 0x01){}
     b70:	18 9b       	sbis	0x03, 0	; 3
     b72:	fe cf       	rjmp	.-4      	; 0xb70 <ButtonPress4+0x158>
			Press_fourth_level = Press4_state10;
     b74:	8a e0       	ldi	r24, 0x0A	; 10
     b76:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     b7a:	19 9b       	sbis	0x03, 1	; 3
     b7c:	04 c0       	rjmp	.+8      	; 0xb86 <ButtonPress4+0x16e>
     b7e:	1a 9b       	sbis	0x03, 2	; 3
     b80:	02 c0       	rjmp	.+4      	; 0xb86 <ButtonPress4+0x16e>
     b82:	1b 99       	sbic	0x03, 3	; 3
     b84:	34 c0       	rjmp	.+104    	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     b86:	8d e0       	ldi	r24, 0x0D	; 13
     b88:	80 93 0e 01 	sts	0x010E, r24
     b8c:	3b c0       	rjmp	.+118    	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state10:
		if(~PINB & 0x02)
     b8e:	19 99       	sbic	0x03, 1	; 3
     b90:	05 c0       	rjmp	.+10     	; 0xb9c <ButtonPress4+0x184>
		{
			while(~PINB & 0x02){}
     b92:	19 9b       	sbis	0x03, 1	; 3
     b94:	fe cf       	rjmp	.-4      	; 0xb92 <ButtonPress4+0x17a>
			Press_fourth_level = Press4_state11;
     b96:	8b e0       	ldi	r24, 0x0B	; 11
     b98:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     b9c:	18 9b       	sbis	0x03, 0	; 3
     b9e:	04 c0       	rjmp	.+8      	; 0xba8 <ButtonPress4+0x190>
     ba0:	1a 9b       	sbis	0x03, 2	; 3
     ba2:	02 c0       	rjmp	.+4      	; 0xba8 <ButtonPress4+0x190>
     ba4:	1b 99       	sbic	0x03, 3	; 3
     ba6:	23 c0       	rjmp	.+70     	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     ba8:	8d e0       	ldi	r24, 0x0D	; 13
     baa:	80 93 0e 01 	sts	0x010E, r24
     bae:	2a c0       	rjmp	.+84     	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		
		case Press4_state11:
		if(~PINB & 0x01)
     bb0:	18 99       	sbic	0x03, 0	; 3
     bb2:	05 c0       	rjmp	.+10     	; 0xbbe <ButtonPress4+0x1a6>
		{
			while(~PINB & 0x01){}
     bb4:	18 9b       	sbis	0x03, 0	; 3
     bb6:	fe cf       	rjmp	.-4      	; 0xbb4 <ButtonPress4+0x19c>
			Press_fourth_level = Press4_state12;
     bb8:	8c e0       	ldi	r24, 0x0C	; 12
     bba:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     bbe:	19 9b       	sbis	0x03, 1	; 3
     bc0:	04 c0       	rjmp	.+8      	; 0xbca <ButtonPress4+0x1b2>
     bc2:	1a 9b       	sbis	0x03, 2	; 3
     bc4:	02 c0       	rjmp	.+4      	; 0xbca <ButtonPress4+0x1b2>
     bc6:	1b 99       	sbic	0x03, 3	; 3
     bc8:	12 c0       	rjmp	.+36     	; 0xbee <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
     bca:	8d e0       	ldi	r24, 0x0D	; 13
     bcc:	80 93 0e 01 	sts	0x010E, r24
     bd0:	19 c0       	rjmp	.+50     	; 0xc04 <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state12:
		if(~PINB & 0x10)
     bd2:	1c 99       	sbic	0x03, 4	; 3
     bd4:	3b c0       	rjmp	.+118    	; 0xc4c <ButtonPress4+0x234>
		{
			Press_fourth_level = Off4;
     bd6:	8e e0       	ldi	r24, 0x0E	; 14
     bd8:	80 93 0e 01 	sts	0x010E, r24
     bdc:	3a c0       	rjmp	.+116    	; 0xc52 <ButtonPress4+0x23a>
		}
		break;
		case Error4:
		if(~PINB & 0x01)
     bde:	18 99       	sbic	0x03, 0	; 3
     be0:	11 c0       	rjmp	.+34     	; 0xc04 <ButtonPress4+0x1ec>
		{
			while(~PINB & 0x01){}
     be2:	18 9b       	sbis	0x03, 0	; 3
     be4:	fe cf       	rjmp	.-4      	; 0xbe2 <ButtonPress4+0x1ca>
			Press_fourth_level = Press4_state1;
     be6:	81 e0       	ldi	r24, 0x01	; 1
     be8:	80 93 0e 01 	sts	0x010E, r24
     bec:	0e c0       	rjmp	.+28     	; 0xc0a <ButtonPress4+0x1f2>
		}
	}
	switch(Press_fourth_level)
     bee:	80 91 0e 01 	lds	r24, 0x010E
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	fc 01       	movw	r30, r24
     bf6:	31 97       	sbiw	r30, 0x01	; 1
     bf8:	ee 30       	cpi	r30, 0x0E	; 14
     bfa:	f1 05       	cpc	r31, r1
     bfc:	70 f5       	brcc	.+92     	; 0xc5a <ButtonPress4+0x242>
     bfe:	eb 54       	subi	r30, 0x4B	; 75
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	b3 c3       	rjmp	.+1894   	; 0x136a <__tablejump2__>
	{
		case Error4:
		PORTA = 0x10;
     c04:	80 e1       	ldi	r24, 0x10	; 16
     c06:	82 b9       	out	0x02, r24	; 2
		break;
     c08:	08 95       	ret
		case Press4_state1:
		PORTA = 0x01;
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	82 b9       	out	0x02, r24	; 2
		break;
     c0e:	08 95       	ret
		case Press4_state2:
		PORTA = 0x08;
     c10:	88 e0       	ldi	r24, 0x08	; 8
     c12:	82 b9       	out	0x02, r24	; 2
		break;
     c14:	08 95       	ret
		case Press4_state3:
		PORTA = 0x02;
     c16:	82 e0       	ldi	r24, 0x02	; 2
     c18:	82 b9       	out	0x02, r24	; 2
		break;
     c1a:	08 95       	ret
		case Press4_state4:
		PORTA = 0x01;
     c1c:	81 e0       	ldi	r24, 0x01	; 1
     c1e:	82 b9       	out	0x02, r24	; 2
		break;
     c20:	08 95       	ret
		case Press4_state5:
		PORTA = 0x02;
     c22:	82 e0       	ldi	r24, 0x02	; 2
     c24:	82 b9       	out	0x02, r24	; 2
		break;
     c26:	08 95       	ret
		case Press4_state6:
		PORTA = 0x08;
     c28:	88 e0       	ldi	r24, 0x08	; 8
     c2a:	82 b9       	out	0x02, r24	; 2
		break;
     c2c:	08 95       	ret
		case Press4_state7:
		PORTA = 0x02;
     c2e:	82 e0       	ldi	r24, 0x02	; 2
     c30:	82 b9       	out	0x02, r24	; 2
		break;
     c32:	08 95       	ret
		case Press4_state8:
		PORTA = 0x01;
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	82 b9       	out	0x02, r24	; 2
		break;
     c38:	08 95       	ret
		case Press4_state9:
		PORTA = 0x08;
     c3a:	88 e0       	ldi	r24, 0x08	; 8
     c3c:	82 b9       	out	0x02, r24	; 2
		break;
     c3e:	08 95       	ret
		case Press4_state10:
		PORTA = 0x01;
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	82 b9       	out	0x02, r24	; 2
		break;
     c44:	08 95       	ret
		case Press4_state11:
		PORTA = 0x02;
     c46:	82 e0       	ldi	r24, 0x02	; 2
     c48:	82 b9       	out	0x02, r24	; 2
		break;
     c4a:	08 95       	ret
		case Press4_state12:
		PORTA = 0x01;
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	82 b9       	out	0x02, r24	; 2
		break;
     c50:	08 95       	ret
		case Off4:
		PORTA = 0x00;
     c52:	12 b8       	out	0x02, r1	; 2
		global_g = 8;
     c54:	88 e0       	ldi	r24, 0x08	; 8
     c56:	80 93 04 01 	sts	0x0104, r24
     c5a:	08 95       	ret

00000c5c <TickFct_Machine5>:
}	

enum SM5_States{SM5_off, SM5_on1, SM5_on2, SM5_on3, SM5_on4, SM5_on5, SM5_on6, SM5_on7, SM5_on8, SM5_on9, SM5_on10, SM5_on11, SM5_on12, SM5_on13, SM5_on14, SM5_on15} SM5_States;
void TickFct_Machine5()
{
	switch(SM5_States)
     c5c:	20 91 12 01 	lds	r18, 0x0112
     c60:	82 2f       	mov	r24, r18
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	80 31       	cpi	r24, 0x10	; 16
     c66:	91 05       	cpc	r25, r1
     c68:	08 f0       	brcs	.+2      	; 0xc6c <TickFct_Machine5+0x10>
     c6a:	4c c0       	rjmp	.+152    	; 0xd04 <TickFct_Machine5+0xa8>
     c6c:	fc 01       	movw	r30, r24
     c6e:	ed 53       	subi	r30, 0x3D	; 61
     c70:	ff 4f       	sbci	r31, 0xFF	; 255
     c72:	7b c3       	rjmp	.+1782   	; 0x136a <__tablejump2__>
	{
		case SM5_off:
		
		if(global_g == 8)
     c74:	80 91 04 01 	lds	r24, 0x0104
     c78:	88 30       	cpi	r24, 0x08	; 8
     c7a:	09 f0       	breq	.+2      	; 0xc7e <TickFct_Machine5+0x22>
     c7c:	4c c0       	rjmp	.+152    	; 0xd16 <TickFct_Machine5+0xba>
		{
			if(~PINB & 0x01)
     c7e:	18 99       	sbic	0x03, 0	; 3
     c80:	4a c0       	rjmp	.+148    	; 0xd16 <TickFct_Machine5+0xba>
			{
				while(~PINB & 0x01){}
     c82:	18 9b       	sbis	0x03, 0	; 3
     c84:	fe cf       	rjmp	.-4      	; 0xc82 <TickFct_Machine5+0x26>
				SM5_States = SM5_on1;
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	80 93 12 01 	sts	0x0112, r24
     c8c:	46 c0       	rjmp	.+140    	; 0xd1a <TickFct_Machine5+0xbe>
				SM5_States = SM5_off;
			}
		}
		break;
		case SM5_on1:
		SM5_States = SM5_on2;
     c8e:	82 e0       	ldi	r24, 0x02	; 2
     c90:	80 93 12 01 	sts	0x0112, r24
     c94:	45 c0       	rjmp	.+138    	; 0xd20 <TickFct_Machine5+0xc4>
		break;
		case SM5_on2:
		SM5_States = SM5_on3;
     c96:	83 e0       	ldi	r24, 0x03	; 3
     c98:	80 93 12 01 	sts	0x0112, r24
     c9c:	44 c0       	rjmp	.+136    	; 0xd26 <TickFct_Machine5+0xca>
		break;
		case SM5_on3:
		SM5_States = SM5_on4;
     c9e:	84 e0       	ldi	r24, 0x04	; 4
     ca0:	80 93 12 01 	sts	0x0112, r24
     ca4:	43 c0       	rjmp	.+134    	; 0xd2c <TickFct_Machine5+0xd0>
		break;
		case SM5_on4:
		SM5_States = SM5_on5;
     ca6:	85 e0       	ldi	r24, 0x05	; 5
     ca8:	80 93 12 01 	sts	0x0112, r24
     cac:	42 c0       	rjmp	.+132    	; 0xd32 <TickFct_Machine5+0xd6>
		break;
		case SM5_on5:
		SM5_States = SM5_on6;
     cae:	86 e0       	ldi	r24, 0x06	; 6
     cb0:	80 93 12 01 	sts	0x0112, r24
     cb4:	41 c0       	rjmp	.+130    	; 0xd38 <TickFct_Machine5+0xdc>
		break;
		case SM5_on6:
		SM5_States = SM5_on7;
     cb6:	87 e0       	ldi	r24, 0x07	; 7
     cb8:	80 93 12 01 	sts	0x0112, r24
     cbc:	40 c0       	rjmp	.+128    	; 0xd3e <TickFct_Machine5+0xe2>
		break;
		case SM5_on7:
		SM5_States = SM5_on8;
     cbe:	88 e0       	ldi	r24, 0x08	; 8
     cc0:	80 93 12 01 	sts	0x0112, r24
     cc4:	3f c0       	rjmp	.+126    	; 0xd44 <TickFct_Machine5+0xe8>
		break;
		case SM5_on8:
		SM5_States = SM5_on9;
     cc6:	89 e0       	ldi	r24, 0x09	; 9
     cc8:	80 93 12 01 	sts	0x0112, r24
     ccc:	3e c0       	rjmp	.+124    	; 0xd4a <TickFct_Machine5+0xee>
		break;
		case SM5_on9:
		SM5_States = SM5_on10;
     cce:	8a e0       	ldi	r24, 0x0A	; 10
     cd0:	80 93 12 01 	sts	0x0112, r24
     cd4:	3d c0       	rjmp	.+122    	; 0xd50 <TickFct_Machine5+0xf4>
		break;
		case SM5_on10:
		SM5_States = SM5_on11;
     cd6:	8b e0       	ldi	r24, 0x0B	; 11
     cd8:	80 93 12 01 	sts	0x0112, r24
     cdc:	3c c0       	rjmp	.+120    	; 0xd56 <TickFct_Machine5+0xfa>
		break;
		case SM5_on11:
		SM5_States = SM5_on12;
     cde:	8c e0       	ldi	r24, 0x0C	; 12
     ce0:	80 93 12 01 	sts	0x0112, r24
     ce4:	3b c0       	rjmp	.+118    	; 0xd5c <TickFct_Machine5+0x100>
		break;
		case SM5_on12:
		SM5_States = SM5_on13;
     ce6:	8d e0       	ldi	r24, 0x0D	; 13
     ce8:	80 93 12 01 	sts	0x0112, r24
     cec:	3a c0       	rjmp	.+116    	; 0xd62 <TickFct_Machine5+0x106>
		break;
		case SM5_on13:
		SM5_States = SM5_on14;
     cee:	8e e0       	ldi	r24, 0x0E	; 14
     cf0:	80 93 12 01 	sts	0x0112, r24
     cf4:	39 c0       	rjmp	.+114    	; 0xd68 <TickFct_Machine5+0x10c>
		break;
		case SM5_on14:
		SM5_States = SM5_on15;
     cf6:	8f e0       	ldi	r24, 0x0F	; 15
     cf8:	80 93 12 01 	sts	0x0112, r24
     cfc:	38 c0       	rjmp	.+112    	; 0xd6e <TickFct_Machine5+0x112>
		break;
		case SM5_on15:
		SM5_States = SM5_off;
     cfe:	10 92 12 01 	sts	0x0112, r1
		break;
     d02:	09 c0       	rjmp	.+18     	; 0xd16 <TickFct_Machine5+0xba>
	}
	switch(SM5_States)
     d04:	82 2f       	mov	r24, r18
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	80 31       	cpi	r24, 0x10	; 16
     d0a:	91 05       	cpc	r25, r1
     d0c:	a8 f5       	brcc	.+106    	; 0xd78 <TickFct_Machine5+0x11c>
     d0e:	fc 01       	movw	r30, r24
     d10:	ed 52       	subi	r30, 0x2D	; 45
     d12:	ff 4f       	sbci	r31, 0xFF	; 255
     d14:	2a c3       	rjmp	.+1620   	; 0x136a <__tablejump2__>
	{
		case SM5_off:
		PORTA = 0x00;
     d16:	12 b8       	out	0x02, r1	; 2
		break;
     d18:	08 95       	ret
		case SM5_on1:
		PORTA = 0x08;
     d1a:	88 e0       	ldi	r24, 0x08	; 8
     d1c:	82 b9       	out	0x02, r24	; 2
		break;
     d1e:	08 95       	ret
		case SM5_on2:
		PORTA = 0x04;
     d20:	84 e0       	ldi	r24, 0x04	; 4
     d22:	82 b9       	out	0x02, r24	; 2
		break;
     d24:	08 95       	ret
		case SM5_on3:
		PORTA = 0x02;
     d26:	82 e0       	ldi	r24, 0x02	; 2
     d28:	82 b9       	out	0x02, r24	; 2
		break;
     d2a:	08 95       	ret
		case SM5_on4:
		PORTA = 0x01;
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	82 b9       	out	0x02, r24	; 2
		break;
     d30:	08 95       	ret
		case SM5_on5:
		PORTA = 0x02;
     d32:	82 e0       	ldi	r24, 0x02	; 2
     d34:	82 b9       	out	0x02, r24	; 2
		break;
     d36:	08 95       	ret
		case SM5_on6:
		PORTA = 0x01;
     d38:	81 e0       	ldi	r24, 0x01	; 1
     d3a:	82 b9       	out	0x02, r24	; 2
		break;
     d3c:	08 95       	ret
		case SM5_on7:
		PORTA = 0x04;
     d3e:	84 e0       	ldi	r24, 0x04	; 4
     d40:	82 b9       	out	0x02, r24	; 2
		break;
     d42:	08 95       	ret
		case SM5_on8:
		PORTA = 0x08;
     d44:	88 e0       	ldi	r24, 0x08	; 8
     d46:	82 b9       	out	0x02, r24	; 2
		break;
     d48:	08 95       	ret
		case SM5_on9:
		PORTA = 0x02;
     d4a:	82 e0       	ldi	r24, 0x02	; 2
     d4c:	82 b9       	out	0x02, r24	; 2
		break;
     d4e:	08 95       	ret
		case SM5_on10:
		PORTA = 0x01;
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	82 b9       	out	0x02, r24	; 2
		break;
     d54:	08 95       	ret
		case SM5_on11:
		PORTA = 0x02;
     d56:	82 e0       	ldi	r24, 0x02	; 2
     d58:	82 b9       	out	0x02, r24	; 2
		break;
     d5a:	08 95       	ret
		case SM5_on12:
		PORTA = 0x01;
     d5c:	81 e0       	ldi	r24, 0x01	; 1
     d5e:	82 b9       	out	0x02, r24	; 2
		break;
     d60:	08 95       	ret
		case SM5_on13:
		PORTA = 0x04;
     d62:	84 e0       	ldi	r24, 0x04	; 4
     d64:	82 b9       	out	0x02, r24	; 2
		break;
     d66:	08 95       	ret
		case SM5_on14:
		PORTA = 0x08;
     d68:	88 e0       	ldi	r24, 0x08	; 8
     d6a:	82 b9       	out	0x02, r24	; 2
		break;
     d6c:	08 95       	ret
		case SM5_on15:
		PORTA = 0x01;
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	82 b9       	out	0x02, r24	; 2
		global_g = 9;
     d72:	89 e0       	ldi	r24, 0x09	; 9
     d74:	80 93 04 01 	sts	0x0104, r24
     d78:	08 95       	ret

00000d7a <ButtonPress5>:
}

enum Press_fifth_level{Init5, Press5_state1, Press5_state2, Press5_state3, Press5_state4, Press5_state5, Press5_state6, Press5_state7, Press5_state8, Press5_state9, Press5_state10, Press5_state11, Press5_state12, Press5_state13, Press5_state14, Press5_state15, Error5, Off5} Press_fifth_level;
void ButtonPress5()
{
	switch(Press_fifth_level)
     d7a:	80 91 13 01 	lds	r24, 0x0113
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	81 31       	cpi	r24, 0x11	; 17
     d82:	91 05       	cpc	r25, r1
     d84:	08 f0       	brcs	.+2      	; 0xd88 <ButtonPress5+0xe>
     d86:	17 c1       	rjmp	.+558    	; 0xfb6 <ButtonPress5+0x23c>
     d88:	fc 01       	movw	r30, r24
     d8a:	ed 51       	subi	r30, 0x1D	; 29
     d8c:	ff 4f       	sbci	r31, 0xFF	; 255
     d8e:	ed c2       	rjmp	.+1498   	; 0x136a <__tablejump2__>
	{
		case Init5:
		if(global_g == 9)
     d90:	80 91 04 01 	lds	r24, 0x0104
     d94:	89 30       	cpi	r24, 0x09	; 9
     d96:	09 f0       	breq	.+2      	; 0xd9a <ButtonPress5+0x20>
     d98:	4a c1       	rjmp	.+660    	; 0x102e <ButtonPress5+0x2b4>
		{
			PORTA = 0x00;
     d9a:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x08)
     d9c:	1b 99       	sbic	0x03, 3	; 3
     d9e:	05 c0       	rjmp	.+10     	; 0xdaa <ButtonPress5+0x30>
			{
				while(~PINB & 0x08){}
     da0:	1b 9b       	sbis	0x03, 3	; 3
     da2:	fe cf       	rjmp	.-4      	; 0xda0 <ButtonPress5+0x26>
				Press_fifth_level = Press5_state1;
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	80 93 13 01 	sts	0x0113, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     daa:	19 9b       	sbis	0x03, 1	; 3
     dac:	04 c0       	rjmp	.+8      	; 0xdb6 <ButtonPress5+0x3c>
     dae:	1a 9b       	sbis	0x03, 2	; 3
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <ButtonPress5+0x3c>
     db2:	18 99       	sbic	0x03, 0	; 3
     db4:	00 c1       	rjmp	.+512    	; 0xfb6 <ButtonPress5+0x23c>
			{
				Press_fifth_level = Error5;
     db6:	80 e1       	ldi	r24, 0x10	; 16
     db8:	80 93 13 01 	sts	0x0113, r24
     dbc:	07 c1       	rjmp	.+526    	; 0xfcc <ButtonPress5+0x252>
			}
		}
		break;
		case Press5_state1:
		if(~PINB & 0x04)
     dbe:	1a 99       	sbic	0x03, 2	; 3
     dc0:	05 c0       	rjmp	.+10     	; 0xdcc <ButtonPress5+0x52>
		{
			while(~PINB & 0x04){}
     dc2:	1a 9b       	sbis	0x03, 2	; 3
     dc4:	fe cf       	rjmp	.-4      	; 0xdc2 <ButtonPress5+0x48>
			Press_fifth_level = Press5_state2;
     dc6:	82 e0       	ldi	r24, 0x02	; 2
     dc8:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     dcc:	19 9b       	sbis	0x03, 1	; 3
     dce:	04 c0       	rjmp	.+8      	; 0xdd8 <ButtonPress5+0x5e>
     dd0:	18 9b       	sbis	0x03, 0	; 3
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <ButtonPress5+0x5e>
     dd4:	1b 99       	sbic	0x03, 3	; 3
     dd6:	ef c0       	rjmp	.+478    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     dd8:	80 e1       	ldi	r24, 0x10	; 16
     dda:	80 93 13 01 	sts	0x0113, r24
     dde:	f6 c0       	rjmp	.+492    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state2:
		if(~PINB & 0x02)
     de0:	19 99       	sbic	0x03, 1	; 3
     de2:	05 c0       	rjmp	.+10     	; 0xdee <ButtonPress5+0x74>
		{
			while(~PINB & 0x02){}
     de4:	19 9b       	sbis	0x03, 1	; 3
     de6:	fe cf       	rjmp	.-4      	; 0xde4 <ButtonPress5+0x6a>
			Press_fifth_level = Press5_state3;
     de8:	83 e0       	ldi	r24, 0x03	; 3
     dea:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     dee:	18 9b       	sbis	0x03, 0	; 3
     df0:	04 c0       	rjmp	.+8      	; 0xdfa <ButtonPress5+0x80>
     df2:	1a 9b       	sbis	0x03, 2	; 3
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <ButtonPress5+0x80>
     df6:	1b 99       	sbic	0x03, 3	; 3
     df8:	de c0       	rjmp	.+444    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     dfa:	80 e1       	ldi	r24, 0x10	; 16
     dfc:	80 93 13 01 	sts	0x0113, r24
     e00:	e5 c0       	rjmp	.+458    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state3:
		if(~PINB & 0x01)
     e02:	18 99       	sbic	0x03, 0	; 3
     e04:	05 c0       	rjmp	.+10     	; 0xe10 <ButtonPress5+0x96>
		{
			while(~PINB & 0x01){}
     e06:	18 9b       	sbis	0x03, 0	; 3
     e08:	fe cf       	rjmp	.-4      	; 0xe06 <ButtonPress5+0x8c>
			Press_fifth_level = Press5_state4;
     e0a:	84 e0       	ldi	r24, 0x04	; 4
     e0c:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     e10:	19 9b       	sbis	0x03, 1	; 3
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <ButtonPress5+0xa2>
     e14:	1a 9b       	sbis	0x03, 2	; 3
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <ButtonPress5+0xa2>
     e18:	1b 99       	sbic	0x03, 3	; 3
     e1a:	cd c0       	rjmp	.+410    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     e1c:	80 e1       	ldi	r24, 0x10	; 16
     e1e:	80 93 13 01 	sts	0x0113, r24
     e22:	d4 c0       	rjmp	.+424    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state4:
		if(~PINB & 0x02)
     e24:	19 99       	sbic	0x03, 1	; 3
     e26:	05 c0       	rjmp	.+10     	; 0xe32 <ButtonPress5+0xb8>
		{
			while(~PINB & 0x02){}
     e28:	19 9b       	sbis	0x03, 1	; 3
     e2a:	fe cf       	rjmp	.-4      	; 0xe28 <ButtonPress5+0xae>
			Press_fifth_level = Press5_state5;
     e2c:	85 e0       	ldi	r24, 0x05	; 5
     e2e:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     e32:	18 9b       	sbis	0x03, 0	; 3
     e34:	04 c0       	rjmp	.+8      	; 0xe3e <ButtonPress5+0xc4>
     e36:	1a 9b       	sbis	0x03, 2	; 3
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <ButtonPress5+0xc4>
     e3a:	1b 99       	sbic	0x03, 3	; 3
     e3c:	bc c0       	rjmp	.+376    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     e3e:	80 e1       	ldi	r24, 0x10	; 16
     e40:	80 93 13 01 	sts	0x0113, r24
     e44:	c3 c0       	rjmp	.+390    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state5:
		if(~PINB & 0x01)
     e46:	18 99       	sbic	0x03, 0	; 3
     e48:	05 c0       	rjmp	.+10     	; 0xe54 <ButtonPress5+0xda>
		{
			while(~PINB & 0x01){}
     e4a:	18 9b       	sbis	0x03, 0	; 3
     e4c:	fe cf       	rjmp	.-4      	; 0xe4a <ButtonPress5+0xd0>
			Press_fifth_level = Press5_state6;
     e4e:	86 e0       	ldi	r24, 0x06	; 6
     e50:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     e54:	19 9b       	sbis	0x03, 1	; 3
     e56:	04 c0       	rjmp	.+8      	; 0xe60 <ButtonPress5+0xe6>
     e58:	1a 9b       	sbis	0x03, 2	; 3
     e5a:	02 c0       	rjmp	.+4      	; 0xe60 <ButtonPress5+0xe6>
     e5c:	1b 99       	sbic	0x03, 3	; 3
     e5e:	ab c0       	rjmp	.+342    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     e60:	80 e1       	ldi	r24, 0x10	; 16
     e62:	80 93 13 01 	sts	0x0113, r24
     e66:	b2 c0       	rjmp	.+356    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state6:
		if(~PINB & 0x04)
     e68:	1a 99       	sbic	0x03, 2	; 3
     e6a:	05 c0       	rjmp	.+10     	; 0xe76 <ButtonPress5+0xfc>
		{
			
			while(~PINB & 0x04){}
     e6c:	1a 9b       	sbis	0x03, 2	; 3
     e6e:	fe cf       	rjmp	.-4      	; 0xe6c <ButtonPress5+0xf2>
			Press_fifth_level = Press5_state7;
     e70:	87 e0       	ldi	r24, 0x07	; 7
     e72:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     e76:	19 9b       	sbis	0x03, 1	; 3
     e78:	04 c0       	rjmp	.+8      	; 0xe82 <ButtonPress5+0x108>
     e7a:	18 9b       	sbis	0x03, 0	; 3
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <ButtonPress5+0x108>
     e7e:	1b 99       	sbic	0x03, 3	; 3
     e80:	9a c0       	rjmp	.+308    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     e82:	80 e1       	ldi	r24, 0x10	; 16
     e84:	80 93 13 01 	sts	0x0113, r24
     e88:	a1 c0       	rjmp	.+322    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state7:
		if(~PINB & 0x08)
     e8a:	1b 99       	sbic	0x03, 3	; 3
     e8c:	05 c0       	rjmp	.+10     	; 0xe98 <ButtonPress5+0x11e>
		{
			while(~PINB & 0x08){}
     e8e:	1b 9b       	sbis	0x03, 3	; 3
     e90:	fe cf       	rjmp	.-4      	; 0xe8e <ButtonPress5+0x114>
			Press_fifth_level = Press5_state8;
     e92:	88 e0       	ldi	r24, 0x08	; 8
     e94:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     e98:	19 9b       	sbis	0x03, 1	; 3
     e9a:	04 c0       	rjmp	.+8      	; 0xea4 <ButtonPress5+0x12a>
     e9c:	1a 9b       	sbis	0x03, 2	; 3
     e9e:	02 c0       	rjmp	.+4      	; 0xea4 <ButtonPress5+0x12a>
     ea0:	18 99       	sbic	0x03, 0	; 3
     ea2:	89 c0       	rjmp	.+274    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     ea4:	80 e1       	ldi	r24, 0x10	; 16
     ea6:	80 93 13 01 	sts	0x0113, r24
     eaa:	90 c0       	rjmp	.+288    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state8:
		if(~PINB & 0x02)
     eac:	19 99       	sbic	0x03, 1	; 3
     eae:	05 c0       	rjmp	.+10     	; 0xeba <ButtonPress5+0x140>
		{
			while(~PINB & 0x02){}
     eb0:	19 9b       	sbis	0x03, 1	; 3
     eb2:	fe cf       	rjmp	.-4      	; 0xeb0 <ButtonPress5+0x136>
			Press_fifth_level = Press5_state9;
     eb4:	89 e0       	ldi	r24, 0x09	; 9
     eb6:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     eba:	18 9b       	sbis	0x03, 0	; 3
     ebc:	04 c0       	rjmp	.+8      	; 0xec6 <ButtonPress5+0x14c>
     ebe:	1a 9b       	sbis	0x03, 2	; 3
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <ButtonPress5+0x14c>
     ec2:	1b 99       	sbic	0x03, 3	; 3
     ec4:	78 c0       	rjmp	.+240    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     ec6:	80 e1       	ldi	r24, 0x10	; 16
     ec8:	80 93 13 01 	sts	0x0113, r24
     ecc:	7f c0       	rjmp	.+254    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state9:
		if(~PINB & 0x01)
     ece:	18 99       	sbic	0x03, 0	; 3
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <ButtonPress5+0x162>
		{
			while(~PINB & 0x01){}
     ed2:	18 9b       	sbis	0x03, 0	; 3
     ed4:	fe cf       	rjmp	.-4      	; 0xed2 <ButtonPress5+0x158>
			Press_fifth_level = Press5_state10;
     ed6:	8a e0       	ldi	r24, 0x0A	; 10
     ed8:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     edc:	19 9b       	sbis	0x03, 1	; 3
     ede:	04 c0       	rjmp	.+8      	; 0xee8 <ButtonPress5+0x16e>
     ee0:	1a 9b       	sbis	0x03, 2	; 3
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <ButtonPress5+0x16e>
     ee4:	1b 99       	sbic	0x03, 3	; 3
     ee6:	67 c0       	rjmp	.+206    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     ee8:	80 e1       	ldi	r24, 0x10	; 16
     eea:	80 93 13 01 	sts	0x0113, r24
     eee:	6e c0       	rjmp	.+220    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state10:
		if(~PINB & 0x02)
     ef0:	19 99       	sbic	0x03, 1	; 3
     ef2:	05 c0       	rjmp	.+10     	; 0xefe <ButtonPress5+0x184>
		{
			while(~PINB & 0x02){}
     ef4:	19 9b       	sbis	0x03, 1	; 3
     ef6:	fe cf       	rjmp	.-4      	; 0xef4 <ButtonPress5+0x17a>
			Press_fifth_level = Press5_state11;
     ef8:	8b e0       	ldi	r24, 0x0B	; 11
     efa:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     efe:	18 9b       	sbis	0x03, 0	; 3
     f00:	04 c0       	rjmp	.+8      	; 0xf0a <ButtonPress5+0x190>
     f02:	1a 9b       	sbis	0x03, 2	; 3
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <ButtonPress5+0x190>
     f06:	1b 99       	sbic	0x03, 3	; 3
     f08:	56 c0       	rjmp	.+172    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     f0a:	80 e1       	ldi	r24, 0x10	; 16
     f0c:	80 93 13 01 	sts	0x0113, r24
     f10:	5d c0       	rjmp	.+186    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state11:
		if(~PINB & 0x01)
     f12:	18 99       	sbic	0x03, 0	; 3
     f14:	05 c0       	rjmp	.+10     	; 0xf20 <ButtonPress5+0x1a6>
		{
			while(~PINB & 0x01){}
     f16:	18 9b       	sbis	0x03, 0	; 3
     f18:	fe cf       	rjmp	.-4      	; 0xf16 <ButtonPress5+0x19c>
			Press_fifth_level = Press5_state12;
     f1a:	8c e0       	ldi	r24, 0x0C	; 12
     f1c:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     f20:	19 9b       	sbis	0x03, 1	; 3
     f22:	04 c0       	rjmp	.+8      	; 0xf2c <ButtonPress5+0x1b2>
     f24:	1a 9b       	sbis	0x03, 2	; 3
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <ButtonPress5+0x1b2>
     f28:	1b 99       	sbic	0x03, 3	; 3
     f2a:	45 c0       	rjmp	.+138    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     f2c:	80 e1       	ldi	r24, 0x10	; 16
     f2e:	80 93 13 01 	sts	0x0113, r24
     f32:	4c c0       	rjmp	.+152    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state12:
		if(~PINB & 0x04)
     f34:	1a 99       	sbic	0x03, 2	; 3
     f36:	05 c0       	rjmp	.+10     	; 0xf42 <ButtonPress5+0x1c8>
		{
			while(~PINB & 0x04){}
     f38:	1a 9b       	sbis	0x03, 2	; 3
     f3a:	fe cf       	rjmp	.-4      	; 0xf38 <ButtonPress5+0x1be>
			Press_fifth_level = Press5_state13;
     f3c:	8d e0       	ldi	r24, 0x0D	; 13
     f3e:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     f42:	19 9b       	sbis	0x03, 1	; 3
     f44:	04 c0       	rjmp	.+8      	; 0xf4e <ButtonPress5+0x1d4>
     f46:	18 9b       	sbis	0x03, 0	; 3
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <ButtonPress5+0x1d4>
     f4a:	1b 99       	sbic	0x03, 3	; 3
     f4c:	34 c0       	rjmp	.+104    	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     f4e:	80 e1       	ldi	r24, 0x10	; 16
     f50:	80 93 13 01 	sts	0x0113, r24
     f54:	3b c0       	rjmp	.+118    	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state13:
		if(~PINB & 0x08)
     f56:	1b 99       	sbic	0x03, 3	; 3
     f58:	05 c0       	rjmp	.+10     	; 0xf64 <ButtonPress5+0x1ea>
		{
			while(~PINB & 0x08){}
     f5a:	1b 9b       	sbis	0x03, 3	; 3
     f5c:	fe cf       	rjmp	.-4      	; 0xf5a <ButtonPress5+0x1e0>
			Press_fifth_level = Press5_state14;
     f5e:	8e e0       	ldi	r24, 0x0E	; 14
     f60:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     f64:	19 9b       	sbis	0x03, 1	; 3
     f66:	04 c0       	rjmp	.+8      	; 0xf70 <ButtonPress5+0x1f6>
     f68:	1a 9b       	sbis	0x03, 2	; 3
     f6a:	02 c0       	rjmp	.+4      	; 0xf70 <ButtonPress5+0x1f6>
     f6c:	18 99       	sbic	0x03, 0	; 3
     f6e:	23 c0       	rjmp	.+70     	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     f70:	80 e1       	ldi	r24, 0x10	; 16
     f72:	80 93 13 01 	sts	0x0113, r24
     f76:	2a c0       	rjmp	.+84     	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state14:
		if(~PINB & 0x01)
     f78:	18 99       	sbic	0x03, 0	; 3
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <ButtonPress5+0x20c>
		{
			while(~PINB & 0x01){}
     f7c:	18 9b       	sbis	0x03, 0	; 3
     f7e:	fe cf       	rjmp	.-4      	; 0xf7c <ButtonPress5+0x202>
			Press_fifth_level = Press5_state15;
     f80:	8f e0       	ldi	r24, 0x0F	; 15
     f82:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     f86:	19 9b       	sbis	0x03, 1	; 3
     f88:	04 c0       	rjmp	.+8      	; 0xf92 <ButtonPress5+0x218>
     f8a:	1a 9b       	sbis	0x03, 2	; 3
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <ButtonPress5+0x218>
     f8e:	1b 99       	sbic	0x03, 3	; 3
     f90:	12 c0       	rjmp	.+36     	; 0xfb6 <ButtonPress5+0x23c>
		{
			Press_fifth_level = Error5;
     f92:	80 e1       	ldi	r24, 0x10	; 16
     f94:	80 93 13 01 	sts	0x0113, r24
     f98:	19 c0       	rjmp	.+50     	; 0xfcc <ButtonPress5+0x252>
		}
		break;
		case Press5_state15:
		if(~PINB & 0x10)
     f9a:	1c 99       	sbic	0x03, 4	; 3
     f9c:	44 c0       	rjmp	.+136    	; 0x1026 <ButtonPress5+0x2ac>
		{
			Press_fifth_level = Off5;
     f9e:	81 e1       	ldi	r24, 0x11	; 17
     fa0:	80 93 13 01 	sts	0x0113, r24
     fa4:	43 c0       	rjmp	.+134    	; 0x102c <ButtonPress5+0x2b2>
		}
		break;
		case Error5:
		if(~PINB & 0x08)
     fa6:	1b 99       	sbic	0x03, 3	; 3
     fa8:	11 c0       	rjmp	.+34     	; 0xfcc <ButtonPress5+0x252>
		{
			while(~PINB & 0x08){}
     faa:	1b 9b       	sbis	0x03, 3	; 3
     fac:	fe cf       	rjmp	.-4      	; 0xfaa <ButtonPress5+0x230>
			Press_fifth_level = Press5_state1;
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	80 93 13 01 	sts	0x0113, r24
     fb4:	0e c0       	rjmp	.+28     	; 0xfd2 <ButtonPress5+0x258>
		}
		break;
	}
	switch(Press_fifth_level)
     fb6:	80 91 13 01 	lds	r24, 0x0113
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	fc 01       	movw	r30, r24
     fbe:	31 97       	sbiw	r30, 0x01	; 1
     fc0:	e1 31       	cpi	r30, 0x11	; 17
     fc2:	f1 05       	cpc	r31, r1
     fc4:	a0 f5       	brcc	.+104    	; 0x102e <ButtonPress5+0x2b4>
     fc6:	ec 50       	subi	r30, 0x0C	; 12
     fc8:	ff 4f       	sbci	r31, 0xFF	; 255
     fca:	cf c1       	rjmp	.+926    	; 0x136a <__tablejump2__>
	{
		case Error5:
		PORTA = 0x10;
     fcc:	80 e1       	ldi	r24, 0x10	; 16
     fce:	82 b9       	out	0x02, r24	; 2
		break;
     fd0:	08 95       	ret
		case Press5_state1:
		PORTA = 0x08;
     fd2:	88 e0       	ldi	r24, 0x08	; 8
     fd4:	82 b9       	out	0x02, r24	; 2
		break;
     fd6:	08 95       	ret
		case Press5_state2:
		PORTA = 0x04;
     fd8:	84 e0       	ldi	r24, 0x04	; 4
     fda:	82 b9       	out	0x02, r24	; 2
		break;
     fdc:	08 95       	ret
		case Press5_state3:
		PORTA = 0x02;
     fde:	82 e0       	ldi	r24, 0x02	; 2
     fe0:	82 b9       	out	0x02, r24	; 2
		break;
     fe2:	08 95       	ret
		case Press5_state4:
		PORTA = 0x01;
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	82 b9       	out	0x02, r24	; 2
		break;
     fe8:	08 95       	ret
		case Press5_state5:
		PORTA = 0x02;
     fea:	82 e0       	ldi	r24, 0x02	; 2
     fec:	82 b9       	out	0x02, r24	; 2
		break;
     fee:	08 95       	ret
		case Press5_state6:
		PORTA = 0x01;
     ff0:	81 e0       	ldi	r24, 0x01	; 1
     ff2:	82 b9       	out	0x02, r24	; 2
		break;
     ff4:	08 95       	ret
		case Press5_state7:
		PORTA = 0x04;
     ff6:	84 e0       	ldi	r24, 0x04	; 4
     ff8:	82 b9       	out	0x02, r24	; 2
		break;
     ffa:	08 95       	ret
		case Press5_state8:
		PORTA = 0x08;
     ffc:	88 e0       	ldi	r24, 0x08	; 8
     ffe:	82 b9       	out	0x02, r24	; 2
		break;
    1000:	08 95       	ret
		case Press5_state9:
		PORTA = 0x02;
    1002:	82 e0       	ldi	r24, 0x02	; 2
    1004:	82 b9       	out	0x02, r24	; 2
		break;
    1006:	08 95       	ret
		case Press5_state10:
		PORTA = 0x01;
    1008:	81 e0       	ldi	r24, 0x01	; 1
    100a:	82 b9       	out	0x02, r24	; 2
		break;
    100c:	08 95       	ret
		case Press5_state11:
		PORTA = 0x02;
    100e:	82 e0       	ldi	r24, 0x02	; 2
    1010:	82 b9       	out	0x02, r24	; 2
		break;
    1012:	08 95       	ret
		case Press5_state12:
		PORTA = 0x01;
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	82 b9       	out	0x02, r24	; 2
		break;
    1018:	08 95       	ret
		case Press5_state13:
		PORTA = 0x04;
    101a:	84 e0       	ldi	r24, 0x04	; 4
    101c:	82 b9       	out	0x02, r24	; 2
		break;
    101e:	08 95       	ret
		case Press5_state14:
		PORTA = 0x08;
    1020:	88 e0       	ldi	r24, 0x08	; 8
    1022:	82 b9       	out	0x02, r24	; 2
		break;
    1024:	08 95       	ret
		case Press5_state15:
		PORTA = 0x01;
    1026:	81 e0       	ldi	r24, 0x01	; 1
    1028:	82 b9       	out	0x02, r24	; 2
		break;
    102a:	08 95       	ret
		case Off5:
		PORTA = 0x00;
    102c:	12 b8       	out	0x02, r1	; 2
    102e:	08 95       	ret

00001030 <main>:
	}
}


int main(void)
{
    1030:	cf 92       	push	r12
    1032:	df 92       	push	r13
    1034:	ef 92       	push	r14
    1036:	ff 92       	push	r15
	DDRA = 0xff;	PORTA = 0x00;
    1038:	8f ef       	ldi	r24, 0xFF	; 255
    103a:	81 b9       	out	0x01, r24	; 1
    103c:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;
    103e:	14 b8       	out	0x04, r1	; 4
    1040:	85 b9       	out	0x05, r24	; 5
	
	if(global_g == 0)
    1042:	80 91 04 01 	lds	r24, 0x0104
    1046:	81 11       	cpse	r24, r1
    1048:	89 c1       	rjmp	.+786    	; 0x135c <main+0x32c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    104a:	0f 2e       	mov	r0, r31
    104c:	f4 ef       	ldi	r31, 0xF4	; 244
    104e:	cf 2e       	mov	r12, r31
    1050:	dd 24       	eor	r13, r13
    1052:	d3 94       	inc	r13
    1054:	e1 2c       	mov	r14, r1
    1056:	f1 2c       	mov	r15, r1
    1058:	f0 2d       	mov	r31, r0
    105a:	c0 92 00 01 	sts	0x0100, r12
    105e:	d0 92 01 01 	sts	0x0101, r13
    1062:	e0 92 02 01 	sts	0x0102, r14
    1066:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    106a:	c0 92 05 01 	sts	0x0105, r12
    106e:	d0 92 06 01 	sts	0x0106, r13
    1072:	e0 92 07 01 	sts	0x0107, r14
    1076:	f0 92 08 01 	sts	0x0108, r15
	if(global_g == 0)
	{
		while(global_g == 0)
		{
			TimerSet(500);
			TimerOn();
    107a:	e6 d8       	rcall	.-3636   	; 0x248 <TimerOn>
			TickFct_State_machine_1();
    107c:	45 d9       	rcall	.-3446   	; 0x308 <TickFct_State_machine_1>
			while(!TimerFlag);
    107e:	80 91 09 01 	lds	r24, 0x0109
    1082:	88 23       	and	r24, r24
    1084:	e1 f3       	breq	.-8      	; 0x107e <main+0x4e>
			TimerFlag = 0;	
    1086:	10 92 09 01 	sts	0x0109, r1
	DDRA = 0xff;	PORTA = 0x00;
	DDRB = 0x00;	PORTB = 0xFF;
	
	if(global_g == 0)
	{
		while(global_g == 0)
    108a:	80 91 04 01 	lds	r24, 0x0104
    108e:	88 23       	and	r24, r24
    1090:	21 f3       	breq	.-56     	; 0x105a <main+0x2a>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    1092:	81 30       	cpi	r24, 0x01	; 1
    1094:	19 f5       	brne	.+70     	; 0x10dc <main+0xac>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1096:	0f 2e       	mov	r0, r31
    1098:	f8 ec       	ldi	r31, 0xC8	; 200
    109a:	cf 2e       	mov	r12, r31
    109c:	d1 2c       	mov	r13, r1
    109e:	e1 2c       	mov	r14, r1
    10a0:	f1 2c       	mov	r15, r1
    10a2:	f0 2d       	mov	r31, r0
    10a4:	c0 92 00 01 	sts	0x0100, r12
    10a8:	d0 92 01 01 	sts	0x0101, r13
    10ac:	e0 92 02 01 	sts	0x0102, r14
    10b0:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    10b4:	c0 92 05 01 	sts	0x0105, r12
    10b8:	d0 92 06 01 	sts	0x0106, r13
    10bc:	e0 92 07 01 	sts	0x0107, r14
    10c0:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;	
		}
		while(global_g == 1)
		{
			TimerSet(200);
			TimerOn();
    10c4:	c1 d8       	rcall	.-3710   	; 0x248 <TimerOn>
			ButtonPress();
    10c6:	67 d9       	rcall	.-3378   	; 0x396 <ButtonPress>
			while(!TimerFlag);
    10c8:	80 91 09 01 	lds	r24, 0x0109
    10cc:	88 23       	and	r24, r24
    10ce:	e1 f3       	breq	.-8      	; 0x10c8 <main+0x98>
			TimerFlag = 0;
    10d0:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    10d4:	80 91 04 01 	lds	r24, 0x0104
    10d8:	81 30       	cpi	r24, 0x01	; 1
    10da:	21 f3       	breq	.-56     	; 0x10a4 <main+0x74>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    10dc:	80 91 04 01 	lds	r24, 0x0104
    10e0:	82 30       	cpi	r24, 0x02	; 2
    10e2:	21 f5       	brne	.+72     	; 0x112c <main+0xfc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    10e4:	0f 2e       	mov	r0, r31
    10e6:	f4 ef       	ldi	r31, 0xF4	; 244
    10e8:	cf 2e       	mov	r12, r31
    10ea:	dd 24       	eor	r13, r13
    10ec:	d3 94       	inc	r13
    10ee:	e1 2c       	mov	r14, r1
    10f0:	f1 2c       	mov	r15, r1
    10f2:	f0 2d       	mov	r31, r0
    10f4:	c0 92 00 01 	sts	0x0100, r12
    10f8:	d0 92 01 01 	sts	0x0101, r13
    10fc:	e0 92 02 01 	sts	0x0102, r14
    1100:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1104:	c0 92 05 01 	sts	0x0105, r12
    1108:	d0 92 06 01 	sts	0x0106, r13
    110c:	e0 92 07 01 	sts	0x0107, r14
    1110:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 2)
		{
			TimerSet(500);
			TimerOn();
    1114:	99 d8       	rcall	.-3790   	; 0x248 <TimerOn>
			TickFct_Machine2();
    1116:	cc d9       	rcall	.-3176   	; 0x4b0 <TickFct_Machine2>
			while(!TimerFlag);
    1118:	80 91 09 01 	lds	r24, 0x0109
    111c:	88 23       	and	r24, r24
    111e:	e1 f3       	breq	.-8      	; 0x1118 <main+0xe8>
			TimerFlag = 0;
    1120:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1124:	80 91 04 01 	lds	r24, 0x0104
    1128:	82 30       	cpi	r24, 0x02	; 2
    112a:	21 f3       	breq	.-56     	; 0x10f4 <main+0xc4>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    112c:	80 91 04 01 	lds	r24, 0x0104
    1130:	83 30       	cpi	r24, 0x03	; 3
    1132:	19 f5       	brne	.+70     	; 0x117a <main+0x14a>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1134:	0f 2e       	mov	r0, r31
    1136:	f8 ec       	ldi	r31, 0xC8	; 200
    1138:	cf 2e       	mov	r12, r31
    113a:	d1 2c       	mov	r13, r1
    113c:	e1 2c       	mov	r14, r1
    113e:	f1 2c       	mov	r15, r1
    1140:	f0 2d       	mov	r31, r0
    1142:	c0 92 00 01 	sts	0x0100, r12
    1146:	d0 92 01 01 	sts	0x0101, r13
    114a:	e0 92 02 01 	sts	0x0102, r14
    114e:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1152:	c0 92 05 01 	sts	0x0105, r12
    1156:	d0 92 06 01 	sts	0x0106, r13
    115a:	e0 92 07 01 	sts	0x0107, r14
    115e:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 3)
		{
			TimerSet(200);
			TimerOn();
    1162:	72 d8       	rcall	.-3868   	; 0x248 <TimerOn>
			ButtonPress2();
    1164:	f7 d9       	rcall	.-3090   	; 0x554 <ButtonPress2>
			while(!TimerFlag);
    1166:	80 91 09 01 	lds	r24, 0x0109
    116a:	88 23       	and	r24, r24
    116c:	e1 f3       	breq	.-8      	; 0x1166 <main+0x136>
			TimerFlag = 0;
    116e:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1172:	80 91 04 01 	lds	r24, 0x0104
    1176:	83 30       	cpi	r24, 0x03	; 3
    1178:	21 f3       	breq	.-56     	; 0x1142 <main+0x112>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    117a:	80 91 04 01 	lds	r24, 0x0104
    117e:	84 30       	cpi	r24, 0x04	; 4
    1180:	21 f5       	brne	.+72     	; 0x11ca <main+0x19a>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1182:	0f 2e       	mov	r0, r31
    1184:	f4 ef       	ldi	r31, 0xF4	; 244
    1186:	cf 2e       	mov	r12, r31
    1188:	dd 24       	eor	r13, r13
    118a:	d3 94       	inc	r13
    118c:	e1 2c       	mov	r14, r1
    118e:	f1 2c       	mov	r15, r1
    1190:	f0 2d       	mov	r31, r0
    1192:	c0 92 00 01 	sts	0x0100, r12
    1196:	d0 92 01 01 	sts	0x0101, r13
    119a:	e0 92 02 01 	sts	0x0102, r14
    119e:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    11a2:	c0 92 05 01 	sts	0x0105, r12
    11a6:	d0 92 06 01 	sts	0x0106, r13
    11aa:	e0 92 07 01 	sts	0x0107, r14
    11ae:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 4)
		{
			TimerSet(500);
			TimerOn();
    11b2:	4a d8       	rcall	.-3948   	; 0x248 <TimerOn>
			TickFct_Machine3();
    11b4:	6e da       	rcall	.-2852   	; 0x692 <TickFct_Machine3>
			while(!TimerFlag);
    11b6:	80 91 09 01 	lds	r24, 0x0109
    11ba:	88 23       	and	r24, r24
    11bc:	e1 f3       	breq	.-8      	; 0x11b6 <main+0x186>
			TimerFlag = 0;
    11be:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    11c2:	80 91 04 01 	lds	r24, 0x0104
    11c6:	84 30       	cpi	r24, 0x04	; 4
    11c8:	21 f3       	breq	.-56     	; 0x1192 <main+0x162>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    11ca:	80 91 04 01 	lds	r24, 0x0104
    11ce:	85 30       	cpi	r24, 0x05	; 5
    11d0:	19 f5       	brne	.+70     	; 0x1218 <main+0x1e8>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    11d2:	0f 2e       	mov	r0, r31
    11d4:	f8 ec       	ldi	r31, 0xC8	; 200
    11d6:	cf 2e       	mov	r12, r31
    11d8:	d1 2c       	mov	r13, r1
    11da:	e1 2c       	mov	r14, r1
    11dc:	f1 2c       	mov	r15, r1
    11de:	f0 2d       	mov	r31, r0
    11e0:	c0 92 00 01 	sts	0x0100, r12
    11e4:	d0 92 01 01 	sts	0x0101, r13
    11e8:	e0 92 02 01 	sts	0x0102, r14
    11ec:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    11f0:	c0 92 05 01 	sts	0x0105, r12
    11f4:	d0 92 06 01 	sts	0x0106, r13
    11f8:	e0 92 07 01 	sts	0x0107, r14
    11fc:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 5)
		{
			TimerSet(200);
			TimerOn();
    1200:	23 d8       	rcall	.-4026   	; 0x248 <TimerOn>
			ButtonPress3();
    1202:	aa da       	rcall	.-2732   	; 0x758 <ButtonPress3>
			while(!TimerFlag);
    1204:	80 91 09 01 	lds	r24, 0x0109
    1208:	88 23       	and	r24, r24
    120a:	e1 f3       	breq	.-8      	; 0x1204 <main+0x1d4>
			TimerFlag = 0;
    120c:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1210:	80 91 04 01 	lds	r24, 0x0104
    1214:	85 30       	cpi	r24, 0x05	; 5
    1216:	21 f3       	breq	.-56     	; 0x11e0 <main+0x1b0>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1218:	80 91 04 01 	lds	r24, 0x0104
    121c:	86 30       	cpi	r24, 0x06	; 6
    121e:	29 f5       	brne	.+74     	; 0x126a <main+0x23a>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1220:	0f 2e       	mov	r0, r31
    1222:	f4 ef       	ldi	r31, 0xF4	; 244
    1224:	cf 2e       	mov	r12, r31
    1226:	dd 24       	eor	r13, r13
    1228:	d3 94       	inc	r13
    122a:	e1 2c       	mov	r14, r1
    122c:	f1 2c       	mov	r15, r1
    122e:	f0 2d       	mov	r31, r0
    1230:	c0 92 00 01 	sts	0x0100, r12
    1234:	d0 92 01 01 	sts	0x0101, r13
    1238:	e0 92 02 01 	sts	0x0102, r14
    123c:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1240:	c0 92 05 01 	sts	0x0105, r12
    1244:	d0 92 06 01 	sts	0x0106, r13
    1248:	e0 92 07 01 	sts	0x0107, r14
    124c:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 6)
		{
			TimerSet(500);
			TimerOn();
    1250:	0e 94 24 01 	call	0x248	; 0x248 <TimerOn>
			TickFct_Machine4();
    1254:	67 db       	rcall	.-2354   	; 0x924 <TickFct_Machine4>
			while(!TimerFlag);
    1256:	80 91 09 01 	lds	r24, 0x0109
    125a:	88 23       	and	r24, r24
    125c:	e1 f3       	breq	.-8      	; 0x1256 <main+0x226>
			TimerFlag = 0;
    125e:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1262:	80 91 04 01 	lds	r24, 0x0104
    1266:	86 30       	cpi	r24, 0x06	; 6
    1268:	19 f3       	breq	.-58     	; 0x1230 <main+0x200>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    126a:	80 91 04 01 	lds	r24, 0x0104
    126e:	87 30       	cpi	r24, 0x07	; 7
    1270:	21 f5       	brne	.+72     	; 0x12ba <main+0x28a>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1272:	0f 2e       	mov	r0, r31
    1274:	f8 ec       	ldi	r31, 0xC8	; 200
    1276:	cf 2e       	mov	r12, r31
    1278:	d1 2c       	mov	r13, r1
    127a:	e1 2c       	mov	r14, r1
    127c:	f1 2c       	mov	r15, r1
    127e:	f0 2d       	mov	r31, r0
    1280:	c0 92 00 01 	sts	0x0100, r12
    1284:	d0 92 01 01 	sts	0x0101, r13
    1288:	e0 92 02 01 	sts	0x0102, r14
    128c:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1290:	c0 92 05 01 	sts	0x0105, r12
    1294:	d0 92 06 01 	sts	0x0106, r13
    1298:	e0 92 07 01 	sts	0x0107, r14
    129c:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 7)
		{
			TimerSet(200);
			TimerOn();
    12a0:	0e 94 24 01 	call	0x248	; 0x248 <TimerOn>
			ButtonPress4();
    12a4:	b9 db       	rcall	.-2190   	; 0xa18 <ButtonPress4>
			while(!TimerFlag);
    12a6:	80 91 09 01 	lds	r24, 0x0109
    12aa:	88 23       	and	r24, r24
    12ac:	e1 f3       	breq	.-8      	; 0x12a6 <main+0x276>
			TimerFlag = 0;
    12ae:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    12b2:	80 91 04 01 	lds	r24, 0x0104
    12b6:	87 30       	cpi	r24, 0x07	; 7
    12b8:	19 f3       	breq	.-58     	; 0x1280 <main+0x250>
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    12ba:	80 91 04 01 	lds	r24, 0x0104
    12be:	88 30       	cpi	r24, 0x08	; 8
    12c0:	29 f5       	brne	.+74     	; 0x130c <main+0x2dc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    12c2:	0f 2e       	mov	r0, r31
    12c4:	f4 ef       	ldi	r31, 0xF4	; 244
    12c6:	cf 2e       	mov	r12, r31
    12c8:	dd 24       	eor	r13, r13
    12ca:	d3 94       	inc	r13
    12cc:	e1 2c       	mov	r14, r1
    12ce:	f1 2c       	mov	r15, r1
    12d0:	f0 2d       	mov	r31, r0
    12d2:	c0 92 00 01 	sts	0x0100, r12
    12d6:	d0 92 01 01 	sts	0x0101, r13
    12da:	e0 92 02 01 	sts	0x0102, r14
    12de:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    12e2:	c0 92 05 01 	sts	0x0105, r12
    12e6:	d0 92 06 01 	sts	0x0106, r13
    12ea:	e0 92 07 01 	sts	0x0107, r14
    12ee:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 8)
		{
			TimerSet(500);
			TimerOn();
    12f2:	0e 94 24 01 	call	0x248	; 0x248 <TimerOn>
			TickFct_Machine5();
    12f6:	b2 dc       	rcall	.-1692   	; 0xc5c <TickFct_Machine5>
			while(!TimerFlag);
    12f8:	80 91 09 01 	lds	r24, 0x0109
    12fc:	88 23       	and	r24, r24
    12fe:	e1 f3       	breq	.-8      	; 0x12f8 <main+0x2c8>
			TimerFlag = 0;
    1300:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1304:	80 91 04 01 	lds	r24, 0x0104
    1308:	88 30       	cpi	r24, 0x08	; 8
    130a:	19 f3       	breq	.-58     	; 0x12d2 <main+0x2a2>
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    130c:	80 91 04 01 	lds	r24, 0x0104
    1310:	89 30       	cpi	r24, 0x09	; 9
    1312:	21 f5       	brne	.+72     	; 0x135c <main+0x32c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
    1314:	0f 2e       	mov	r0, r31
    1316:	f8 ec       	ldi	r31, 0xC8	; 200
    1318:	cf 2e       	mov	r12, r31
    131a:	d1 2c       	mov	r13, r1
    131c:	e1 2c       	mov	r14, r1
    131e:	f1 2c       	mov	r15, r1
    1320:	f0 2d       	mov	r31, r0
    1322:	c0 92 00 01 	sts	0x0100, r12
    1326:	d0 92 01 01 	sts	0x0101, r13
    132a:	e0 92 02 01 	sts	0x0102, r14
    132e:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1332:	c0 92 05 01 	sts	0x0105, r12
    1336:	d0 92 06 01 	sts	0x0106, r13
    133a:	e0 92 07 01 	sts	0x0107, r14
    133e:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 9)
		{
			TimerSet(200);
			TimerOn();
    1342:	0e 94 24 01 	call	0x248	; 0x248 <TimerOn>
			ButtonPress5();
    1346:	19 dd       	rcall	.-1486   	; 0xd7a <ButtonPress5>
			while(!TimerFlag);
    1348:	80 91 09 01 	lds	r24, 0x0109
    134c:	88 23       	and	r24, r24
    134e:	e1 f3       	breq	.-8      	; 0x1348 <main+0x318>
			TimerFlag = 0;
    1350:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1354:	80 91 04 01 	lds	r24, 0x0104
    1358:	89 30       	cpi	r24, 0x09	; 9
    135a:	19 f3       	breq	.-58     	; 0x1322 <main+0x2f2>
			TimerFlag = 0;
		}
	}
	return 0;
		
    135c:	80 e0       	ldi	r24, 0x00	; 0
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	ff 90       	pop	r15
    1362:	ef 90       	pop	r14
    1364:	df 90       	pop	r13
    1366:	cf 90       	pop	r12
    1368:	08 95       	ret

0000136a <__tablejump2__>:
    136a:	ee 0f       	add	r30, r30
    136c:	ff 1f       	adc	r31, r31

0000136e <__tablejump__>:
    136e:	05 90       	lpm	r0, Z+
    1370:	f4 91       	lpm	r31, Z
    1372:	e0 2d       	mov	r30, r0
    1374:	09 94       	ijmp

00001376 <_exit>:
    1376:	f8 94       	cli

00001378 <__stop_program>:
    1378:	ff cf       	rjmp	.-2      	; 0x1378 <__stop_program>
