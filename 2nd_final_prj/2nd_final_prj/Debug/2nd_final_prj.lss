
2nd_final_prj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000e80  00000f14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800104  00800104  00000f18  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f18  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006de  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000193  00000000  00000000  000016ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000f07  00000000  00000000  00001841  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000128  00000000  00000000  00002748  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005ad  00000000  00000000  00002870  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000015b  00000000  00000000  00002e1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00002f78  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
   2:	00 00       	nop
   4:	dd c0       	rjmp	.+442    	; 0x1c0 <__bad_interrupt>
   6:	00 00       	nop
   8:	db c0       	rjmp	.+438    	; 0x1c0 <__bad_interrupt>
   a:	00 00       	nop
   c:	d9 c0       	rjmp	.+434    	; 0x1c0 <__bad_interrupt>
   e:	00 00       	nop
  10:	d7 c0       	rjmp	.+430    	; 0x1c0 <__bad_interrupt>
  12:	00 00       	nop
  14:	d5 c0       	rjmp	.+426    	; 0x1c0 <__bad_interrupt>
  16:	00 00       	nop
  18:	d3 c0       	rjmp	.+422    	; 0x1c0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	d1 c0       	rjmp	.+418    	; 0x1c0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	cf c0       	rjmp	.+414    	; 0x1c0 <__bad_interrupt>
  22:	00 00       	nop
  24:	cd c0       	rjmp	.+410    	; 0x1c0 <__bad_interrupt>
  26:	00 00       	nop
  28:	cb c0       	rjmp	.+406    	; 0x1c0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	c9 c0       	rjmp	.+402    	; 0x1c0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	c7 c0       	rjmp	.+398    	; 0x1c0 <__bad_interrupt>
  32:	00 00       	nop
  34:	ea c0       	rjmp	.+468    	; 0x20a <__vector_13>
  36:	00 00       	nop
  38:	c3 c0       	rjmp	.+390    	; 0x1c0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	c1 c0       	rjmp	.+386    	; 0x1c0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	bf c0       	rjmp	.+382    	; 0x1c0 <__bad_interrupt>
  42:	00 00       	nop
  44:	bd c0       	rjmp	.+378    	; 0x1c0 <__bad_interrupt>
  46:	00 00       	nop
  48:	bb c0       	rjmp	.+374    	; 0x1c0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	b9 c0       	rjmp	.+370    	; 0x1c0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	b7 c0       	rjmp	.+366    	; 0x1c0 <__bad_interrupt>
  52:	00 00       	nop
  54:	b5 c0       	rjmp	.+362    	; 0x1c0 <__bad_interrupt>
  56:	00 00       	nop
  58:	b3 c0       	rjmp	.+358    	; 0x1c0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	b1 c0       	rjmp	.+354    	; 0x1c0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	af c0       	rjmp	.+350    	; 0x1c0 <__bad_interrupt>
  62:	00 00       	nop
  64:	ad c0       	rjmp	.+346    	; 0x1c0 <__bad_interrupt>
  66:	00 00       	nop
  68:	ab c0       	rjmp	.+342    	; 0x1c0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	a9 c0       	rjmp	.+338    	; 0x1c0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	a7 c0       	rjmp	.+334    	; 0x1c0 <__bad_interrupt>
  72:	00 00       	nop
  74:	a5 c0       	rjmp	.+330    	; 0x1c0 <__bad_interrupt>
  76:	00 00       	nop
  78:	a3 c0       	rjmp	.+326    	; 0x1c0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	a1 c0       	rjmp	.+322    	; 0x1c0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	9f c0       	rjmp	.+318    	; 0x1c0 <__bad_interrupt>
  82:	00 00       	nop
  84:	9d c0       	rjmp	.+314    	; 0x1c0 <__bad_interrupt>
  86:	00 00       	nop
  88:	9b c0       	rjmp	.+310    	; 0x1c0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	1f 02       	muls	r17, r31
  8e:	2f 02       	muls	r18, r31
  90:	33 02       	muls	r19, r19
  92:	37 02       	muls	r19, r23
  94:	3b 02       	muls	r19, r27
  96:	3f 02       	muls	r19, r31
  98:	43 02       	muls	r20, r19
  9a:	53 02       	muls	r21, r19
  9c:	55 02       	muls	r21, r21
  9e:	58 02       	muls	r21, r24
  a0:	5b 02       	muls	r21, r27
  a2:	5e 02       	muls	r21, r30
  a4:	61 02       	muls	r22, r17
  a6:	64 02       	muls	r22, r20
  a8:	72 02       	muls	r23, r18
  aa:	83 02       	muls	r24, r19
  ac:	94 02       	muls	r25, r20
  ae:	a5 02       	muls	r26, r21
  b0:	b6 02       	muls	r27, r22
  b2:	c7 02       	muls	r28, r23
  b4:	d8 02       	muls	r29, r24
  b6:	ef 02       	muls	r30, r31
  b8:	f2 02       	muls	r31, r18
  ba:	f5 02       	muls	r31, r21
  bc:	f8 02       	muls	r31, r24
  be:	fb 02       	muls	r31, r27
  c0:	fe 02       	muls	r31, r30
  c2:	ec 02       	muls	r30, r28
  c4:	01 03       	mulsu	r16, r17
  c6:	11 03       	mulsu	r17, r17
  c8:	1d 03       	fmul	r17, r21
  ca:	21 03       	mulsu	r18, r17
  cc:	25 03       	mulsu	r18, r21
  ce:	29 03       	fmul	r18, r17
  d0:	2d 03       	fmul	r18, r21
  d2:	31 03       	mulsu	r19, r17
  d4:	35 03       	mulsu	r19, r21
  d6:	39 03       	fmul	r19, r17
  d8:	3d 03       	fmul	r19, r21
  da:	49 03       	fmul	r20, r17
  dc:	4b 03       	fmul	r20, r19
  de:	4e 03       	fmul	r20, r22
  e0:	51 03       	mulsu	r21, r17
  e2:	54 03       	mulsu	r21, r20
  e4:	57 03       	mulsu	r21, r23
  e6:	5a 03       	fmul	r21, r18
  e8:	5d 03       	fmul	r21, r21
  ea:	60 03       	mulsu	r22, r16
  ec:	63 03       	mulsu	r22, r19
  ee:	74 03       	mulsu	r23, r20
  f0:	93 03       	fmuls	r17, r19
  f2:	a4 03       	fmuls	r18, r20
  f4:	b5 03       	fmuls	r19, r21
  f6:	c6 03       	fmuls	r20, r22
  f8:	d7 03       	fmuls	r21, r23
  fa:	e8 03       	fmulsu	r22, r16
  fc:	f9 03       	fmulsu	r23, r17
  fe:	0a 04       	cpc	r0, r10
 100:	1b 04       	cpc	r1, r11
 102:	8b 03       	fmulsu	r16, r19
 104:	2f 04       	cpc	r2, r15
 106:	32 04       	cpc	r3, r2
 108:	35 04       	cpc	r3, r5
 10a:	38 04       	cpc	r3, r8
 10c:	3b 04       	cpc	r3, r11
 10e:	3e 04       	cpc	r3, r14
 110:	41 04       	cpc	r4, r1
 112:	44 04       	cpc	r4, r4
 114:	47 04       	cpc	r4, r7
 116:	2c 04       	cpc	r2, r12
 118:	4a 04       	cpc	r4, r10
 11a:	5b 04       	cpc	r5, r11
 11c:	68 04       	cpc	r6, r8
 11e:	6c 04       	cpc	r6, r12
 120:	70 04       	cpc	r7, r0
 122:	74 04       	cpc	r7, r4
 124:	78 04       	cpc	r7, r8
 126:	7c 04       	cpc	r7, r12
 128:	80 04       	cpc	r8, r0
 12a:	84 04       	cpc	r8, r4
 12c:	88 04       	cpc	r8, r8
 12e:	8c 04       	cpc	r8, r12
 130:	90 04       	cpc	r9, r0
 132:	94 04       	cpc	r9, r4
 134:	a0 04       	cpc	r10, r0
 136:	a2 04       	cpc	r10, r2
 138:	a5 04       	cpc	r10, r5
 13a:	a8 04       	cpc	r10, r8
 13c:	ab 04       	cpc	r10, r11
 13e:	ae 04       	cpc	r10, r14
 140:	b1 04       	cpc	r11, r1
 142:	b4 04       	cpc	r11, r4
 144:	b7 04       	cpc	r11, r7
 146:	ba 04       	cpc	r11, r10
 148:	bd 04       	cpc	r11, r13
 14a:	c0 04       	cpc	r12, r0
 14c:	c3 04       	cpc	r12, r3
 14e:	d4 04       	cpc	r13, r4
 150:	eb 04       	cpc	r14, r11
 152:	fc 04       	cpc	r15, r12
 154:	0d 05       	cpc	r16, r13
 156:	1e 05       	cpc	r17, r14
 158:	2f 05       	cpc	r18, r15
 15a:	40 05       	cpc	r20, r0
 15c:	51 05       	cpc	r21, r1
 15e:	62 05       	cpc	r22, r2
 160:	73 05       	cpc	r23, r3
 162:	84 05       	cpc	r24, r4
 164:	95 05       	cpc	r25, r5
 166:	a6 05       	cpc	r26, r6
 168:	ac 05       	cpc	r26, r12
 16a:	c2 05       	cpc	r28, r2
 16c:	c5 05       	cpc	r28, r5
 16e:	c8 05       	cpc	r28, r8
 170:	cb 05       	cpc	r28, r11
 172:	ce 05       	cpc	r28, r14
 174:	d1 05       	cpc	r29, r1
 176:	d4 05       	cpc	r29, r4
 178:	d7 05       	cpc	r29, r7
 17a:	da 05       	cpc	r29, r10
 17c:	dd 05       	cpc	r29, r13
 17e:	e0 05       	cpc	r30, r0
 180:	e3 05       	cpc	r30, r3
 182:	bf 05       	cpc	r27, r15
 184:	e6 05       	cpc	r30, r6

00000186 <__ctors_end>:
 186:	11 24       	eor	r1, r1
 188:	1f be       	out	0x3f, r1	; 63
 18a:	cf ef       	ldi	r28, 0xFF	; 255
 18c:	d0 e4       	ldi	r29, 0x40	; 64
 18e:	de bf       	out	0x3e, r29	; 62
 190:	cd bf       	out	0x3d, r28	; 61

00000192 <__do_copy_data>:
 192:	11 e0       	ldi	r17, 0x01	; 1
 194:	a0 e0       	ldi	r26, 0x00	; 0
 196:	b1 e0       	ldi	r27, 0x01	; 1
 198:	e0 e8       	ldi	r30, 0x80	; 128
 19a:	fe e0       	ldi	r31, 0x0E	; 14
 19c:	00 e0       	ldi	r16, 0x00	; 0
 19e:	0b bf       	out	0x3b, r16	; 59
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <__do_copy_data+0x14>
 1a2:	07 90       	elpm	r0, Z+
 1a4:	0d 92       	st	X+, r0
 1a6:	a4 30       	cpi	r26, 0x04	; 4
 1a8:	b1 07       	cpc	r27, r17
 1aa:	d9 f7       	brne	.-10     	; 0x1a2 <__do_copy_data+0x10>

000001ac <__do_clear_bss>:
 1ac:	21 e0       	ldi	r18, 0x01	; 1
 1ae:	a4 e0       	ldi	r26, 0x04	; 4
 1b0:	b1 e0       	ldi	r27, 0x01	; 1
 1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <.do_clear_bss_start>

000001b4 <.do_clear_bss_loop>:
 1b4:	1d 92       	st	X+, r1

000001b6 <.do_clear_bss_start>:
 1b6:	a4 31       	cpi	r26, 0x14	; 20
 1b8:	b2 07       	cpc	r27, r18
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <.do_clear_bss_loop>
 1bc:	0c d5       	rcall	.+2584   	; 0xbd6 <main>
 1be:	5e c6       	rjmp	.+3260   	; 0xe7c <_exit>

000001c0 <__bad_interrupt>:
 1c0:	1f cf       	rjmp	.-450    	; 0x0 <__vectors>

000001c2 <TimerOn>:
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
	_avr_timer_cntcurr = _avr_timer_M;
 1c2:	8b e0       	ldi	r24, 0x0B	; 11
 1c4:	80 93 81 00 	sts	0x0081, r24
 1c8:	8d e7       	ldi	r24, 0x7D	; 125
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	90 93 89 00 	sts	0x0089, r25
 1d0:	80 93 88 00 	sts	0x0088, r24
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	80 93 6f 00 	sts	0x006F, r24
 1da:	10 92 85 00 	sts	0x0085, r1
 1de:	10 92 84 00 	sts	0x0084, r1
 1e2:	80 91 00 01 	lds	r24, 0x0100
 1e6:	90 91 01 01 	lds	r25, 0x0101
 1ea:	a0 91 02 01 	lds	r26, 0x0102
 1ee:	b0 91 03 01 	lds	r27, 0x0103
 1f2:	80 93 05 01 	sts	0x0105, r24
 1f6:	90 93 06 01 	sts	0x0106, r25
 1fa:	a0 93 07 01 	sts	0x0107, r26
 1fe:	b0 93 08 01 	sts	0x0108, r27
 202:	8f b7       	in	r24, 0x3f	; 63
 204:	80 68       	ori	r24, 0x80	; 128
 206:	8f bf       	out	0x3f, r24	; 63
 208:	08 95       	ret

0000020a <__vector_13>:
 20a:	1f 92       	push	r1
 20c:	0f 92       	push	r0
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	0f 92       	push	r0
 212:	11 24       	eor	r1, r1
 214:	8f 93       	push	r24
 216:	9f 93       	push	r25
 218:	af 93       	push	r26
 21a:	bf 93       	push	r27
 21c:	80 91 05 01 	lds	r24, 0x0105
 220:	90 91 06 01 	lds	r25, 0x0106
 224:	a0 91 07 01 	lds	r26, 0x0107
 228:	b0 91 08 01 	lds	r27, 0x0108
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	a1 09       	sbc	r26, r1
 230:	b1 09       	sbc	r27, r1
 232:	80 93 05 01 	sts	0x0105, r24
 236:	90 93 06 01 	sts	0x0106, r25
 23a:	a0 93 07 01 	sts	0x0107, r26
 23e:	b0 93 08 01 	sts	0x0108, r27
 242:	89 2b       	or	r24, r25
 244:	8a 2b       	or	r24, r26
 246:	8b 2b       	or	r24, r27
 248:	99 f4       	brne	.+38     	; 0x270 <__vector_13+0x66>
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	80 93 09 01 	sts	0x0109, r24
 250:	80 91 00 01 	lds	r24, 0x0100
 254:	90 91 01 01 	lds	r25, 0x0101
 258:	a0 91 02 01 	lds	r26, 0x0102
 25c:	b0 91 03 01 	lds	r27, 0x0103
 260:	80 93 05 01 	sts	0x0105, r24
 264:	90 93 06 01 	sts	0x0106, r25
 268:	a0 93 07 01 	sts	0x0107, r26
 26c:	b0 93 08 01 	sts	0x0108, r27
 270:	bf 91       	pop	r27
 272:	af 91       	pop	r26
 274:	9f 91       	pop	r25
 276:	8f 91       	pop	r24
 278:	0f 90       	pop	r0
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	0f 90       	pop	r0
 27e:	1f 90       	pop	r1
 280:	18 95       	reti

00000282 <TickFct_State_machine_1>:

enum SM1_States { SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;

void TickFct_State_machine_1() 
{
	switch(SM1_State) 
 282:	80 91 10 01 	lds	r24, 0x0110
 286:	82 30       	cpi	r24, 0x02	; 2
 288:	c9 f0       	breq	.+50     	; 0x2bc <TickFct_State_machine_1+0x3a>
 28a:	28 f4       	brcc	.+10     	; 0x296 <TickFct_State_machine_1+0x14>
 28c:	88 23       	and	r24, r24
 28e:	41 f0       	breq	.+16     	; 0x2a0 <TickFct_State_machine_1+0x1e>
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	81 f0       	breq	.+32     	; 0x2b4 <TickFct_State_machine_1+0x32>
 294:	20 c0       	rjmp	.+64     	; 0x2d6 <TickFct_State_machine_1+0x54>
 296:	83 30       	cpi	r24, 0x03	; 3
 298:	a9 f0       	breq	.+42     	; 0x2c4 <TickFct_State_machine_1+0x42>
 29a:	84 30       	cpi	r24, 0x04	; 4
 29c:	b9 f0       	breq	.+46     	; 0x2cc <TickFct_State_machine_1+0x4a>
 29e:	1b c0       	rjmp	.+54     	; 0x2d6 <TickFct_State_machine_1+0x54>
	{

		case SM1_off:
		if(global_g == 0)
 2a0:	80 91 04 01 	lds	r24, 0x0104
 2a4:	81 11       	cpse	r24, r1
 2a6:	26 c0       	rjmp	.+76     	; 0x2f4 <TickFct_State_machine_1+0x72>
		{
			if(~PINB & 0x10)
 2a8:	1c 99       	sbic	0x03, 4	; 3
 2aa:	24 c0       	rjmp	.+72     	; 0x2f4 <TickFct_State_machine_1+0x72>
			{
				SM1_State = SM1_on1;
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	80 93 10 01 	sts	0x0110, r24
 2b2:	22 c0       	rjmp	.+68     	; 0x2f8 <TickFct_State_machine_1+0x76>
				SM1_State = SM1_off;
			}
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	80 93 10 01 	sts	0x0110, r24
 2ba:	21 c0       	rjmp	.+66     	; 0x2fe <TickFct_State_machine_1+0x7c>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
 2bc:	83 e0       	ldi	r24, 0x03	; 3
 2be:	80 93 10 01 	sts	0x0110, r24
 2c2:	20 c0       	rjmp	.+64     	; 0x304 <TickFct_State_machine_1+0x82>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
 2c4:	84 e0       	ldi	r24, 0x04	; 4
 2c6:	80 93 10 01 	sts	0x0110, r24
 2ca:	1f c0       	rjmp	.+62     	; 0x30a <TickFct_State_machine_1+0x88>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
 2cc:	10 92 10 01 	sts	0x0110, r1
		global_g = 1;
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	80 93 04 01 	sts	0x0104, r24
	}

	switch(SM1_State) 
 2d6:	80 91 10 01 	lds	r24, 0x0110
 2da:	82 30       	cpi	r24, 0x02	; 2
 2dc:	81 f0       	breq	.+32     	; 0x2fe <TickFct_State_machine_1+0x7c>
 2de:	28 f4       	brcc	.+10     	; 0x2ea <TickFct_State_machine_1+0x68>
 2e0:	88 23       	and	r24, r24
 2e2:	41 f0       	breq	.+16     	; 0x2f4 <TickFct_State_machine_1+0x72>
 2e4:	81 30       	cpi	r24, 0x01	; 1
 2e6:	41 f0       	breq	.+16     	; 0x2f8 <TickFct_State_machine_1+0x76>
 2e8:	08 95       	ret
 2ea:	83 30       	cpi	r24, 0x03	; 3
 2ec:	59 f0       	breq	.+22     	; 0x304 <TickFct_State_machine_1+0x82>
 2ee:	84 30       	cpi	r24, 0x04	; 4
 2f0:	71 f4       	brne	.+28     	; 0x30e <TickFct_State_machine_1+0x8c>
 2f2:	0b c0       	rjmp	.+22     	; 0x30a <TickFct_State_machine_1+0x88>
	{
		case SM1_off:
		PORTA = 0X00;
 2f4:	12 b8       	out	0x02, r1	; 2
		break;
 2f6:	08 95       	ret
		case SM1_on1:
		PORTA = 0x01;
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	82 b9       	out	0x02, r24	; 2
		break;
 2fc:	08 95       	ret
		case SM1_on2:
		PORTA = 0x02;
 2fe:	82 e0       	ldi	r24, 0x02	; 2
 300:	82 b9       	out	0x02, r24	; 2
		break;
 302:	08 95       	ret
		case SM1_on3:
		PORTA = 0x04;
 304:	84 e0       	ldi	r24, 0x04	; 4
 306:	82 b9       	out	0x02, r24	; 2
		break;
 308:	08 95       	ret
		case SM1_on4:
		PORTA = 0x08;
 30a:	88 e0       	ldi	r24, 0x08	; 8
 30c:	82 b9       	out	0x02, r24	; 2
 30e:	08 95       	ret

00000310 <ButtonPress>:
}

enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
 310:	80 91 13 01 	lds	r24, 0x0113
 314:	82 30       	cpi	r24, 0x02	; 2
 316:	a9 f1       	breq	.+106    	; 0x382 <ButtonPress+0x72>
 318:	28 f4       	brcc	.+10     	; 0x324 <ButtonPress+0x14>
 31a:	88 23       	and	r24, r24
 31c:	59 f0       	breq	.+22     	; 0x334 <ButtonPress+0x24>
 31e:	81 30       	cpi	r24, 0x01	; 1
 320:	f9 f0       	breq	.+62     	; 0x360 <ButtonPress+0x50>
 322:	5f c0       	rjmp	.+190    	; 0x3e2 <ButtonPress+0xd2>
 324:	84 30       	cpi	r24, 0x04	; 4
 326:	09 f4       	brne	.+2      	; 0x32a <ButtonPress+0x1a>
 328:	4e c0       	rjmp	.+156    	; 0x3c6 <ButtonPress+0xb6>
 32a:	e0 f1       	brcs	.+120    	; 0x3a4 <ButtonPress+0x94>
 32c:	85 30       	cpi	r24, 0x05	; 5
 32e:	09 f4       	brne	.+2      	; 0x332 <ButtonPress+0x22>
 330:	50 c0       	rjmp	.+160    	; 0x3d2 <ButtonPress+0xc2>
 332:	57 c0       	rjmp	.+174    	; 0x3e2 <ButtonPress+0xd2>
	{
		case Init:
		if(global_g == 1)
 334:	80 91 04 01 	lds	r24, 0x0104
 338:	81 30       	cpi	r24, 0x01	; 1
 33a:	09 f0       	breq	.+2      	; 0x33e <ButtonPress+0x2e>
 33c:	75 c0       	rjmp	.+234    	; 0x428 <ButtonPress+0x118>
		{
			if(~PINB & 0x01)
 33e:	18 99       	sbic	0x03, 0	; 3
 340:	05 c0       	rjmp	.+10     	; 0x34c <ButtonPress+0x3c>
			{
				while(~PINB & 0x01){}
 342:	18 9b       	sbis	0x03, 0	; 3
 344:	fe cf       	rjmp	.-4      	; 0x342 <ButtonPress+0x32>
				Press_States = Press1;	
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	80 93 13 01 	sts	0x0113, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 34c:	19 9b       	sbis	0x03, 1	; 3
 34e:	04 c0       	rjmp	.+8      	; 0x358 <ButtonPress+0x48>
 350:	1a 9b       	sbis	0x03, 2	; 3
 352:	02 c0       	rjmp	.+4      	; 0x358 <ButtonPress+0x48>
 354:	1b 99       	sbic	0x03, 3	; 3
 356:	45 c0       	rjmp	.+138    	; 0x3e2 <ButtonPress+0xd2>
			{
				Press_States = Error;
 358:	85 e0       	ldi	r24, 0x05	; 5
 35a:	80 93 13 01 	sts	0x0113, r24
 35e:	51 c0       	rjmp	.+162    	; 0x402 <ButtonPress+0xf2>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
 360:	19 99       	sbic	0x03, 1	; 3
 362:	05 c0       	rjmp	.+10     	; 0x36e <ButtonPress+0x5e>
		{
			while(~PINB & 0x02){}
 364:	19 9b       	sbis	0x03, 1	; 3
 366:	fe cf       	rjmp	.-4      	; 0x364 <ButtonPress+0x54>
			Press_States = Press2;
 368:	82 e0       	ldi	r24, 0x02	; 2
 36a:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 36e:	18 9b       	sbis	0x03, 0	; 3
 370:	04 c0       	rjmp	.+8      	; 0x37a <ButtonPress+0x6a>
 372:	1a 9b       	sbis	0x03, 2	; 3
 374:	02 c0       	rjmp	.+4      	; 0x37a <ButtonPress+0x6a>
 376:	1b 99       	sbic	0x03, 3	; 3
 378:	34 c0       	rjmp	.+104    	; 0x3e2 <ButtonPress+0xd2>
		{
			Press_States = Error;
 37a:	85 e0       	ldi	r24, 0x05	; 5
 37c:	80 93 13 01 	sts	0x0113, r24
 380:	40 c0       	rjmp	.+128    	; 0x402 <ButtonPress+0xf2>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
 382:	1a 99       	sbic	0x03, 2	; 3
 384:	05 c0       	rjmp	.+10     	; 0x390 <ButtonPress+0x80>
		{
			while(~PINB & 0x04){}
 386:	1a 9b       	sbis	0x03, 2	; 3
 388:	fe cf       	rjmp	.-4      	; 0x386 <ButtonPress+0x76>
			Press_States = Press3;
 38a:	83 e0       	ldi	r24, 0x03	; 3
 38c:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 390:	19 9b       	sbis	0x03, 1	; 3
 392:	04 c0       	rjmp	.+8      	; 0x39c <ButtonPress+0x8c>
 394:	18 9b       	sbis	0x03, 0	; 3
 396:	02 c0       	rjmp	.+4      	; 0x39c <ButtonPress+0x8c>
 398:	1b 99       	sbic	0x03, 3	; 3
 39a:	23 c0       	rjmp	.+70     	; 0x3e2 <ButtonPress+0xd2>
		{
			Press_States = Error;
 39c:	85 e0       	ldi	r24, 0x05	; 5
 39e:	80 93 13 01 	sts	0x0113, r24
 3a2:	2f c0       	rjmp	.+94     	; 0x402 <ButtonPress+0xf2>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
 3a4:	1b 99       	sbic	0x03, 3	; 3
 3a6:	05 c0       	rjmp	.+10     	; 0x3b2 <ButtonPress+0xa2>
		{
			while(~PINB & 0x08){}
 3a8:	1b 9b       	sbis	0x03, 3	; 3
 3aa:	fe cf       	rjmp	.-4      	; 0x3a8 <ButtonPress+0x98>
			Press_States = Press4;
 3ac:	84 e0       	ldi	r24, 0x04	; 4
 3ae:	80 93 13 01 	sts	0x0113, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 3b2:	19 9b       	sbis	0x03, 1	; 3
 3b4:	04 c0       	rjmp	.+8      	; 0x3be <ButtonPress+0xae>
 3b6:	1a 9b       	sbis	0x03, 2	; 3
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <ButtonPress+0xae>
 3ba:	18 99       	sbic	0x03, 0	; 3
 3bc:	12 c0       	rjmp	.+36     	; 0x3e2 <ButtonPress+0xd2>
		{
			Press_States = Error;
 3be:	85 e0       	ldi	r24, 0x05	; 5
 3c0:	80 93 13 01 	sts	0x0113, r24
 3c4:	1e c0       	rjmp	.+60     	; 0x402 <ButtonPress+0xf2>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
 3c6:	1c 99       	sbic	0x03, 4	; 3
 3c8:	28 c0       	rjmp	.+80     	; 0x41a <ButtonPress+0x10a>
		{
			Press_States = Off;	
 3ca:	86 e0       	ldi	r24, 0x06	; 6
 3cc:	80 93 13 01 	sts	0x0113, r24
 3d0:	27 c0       	rjmp	.+78     	; 0x420 <ButtonPress+0x110>
		}
		break;
		case Error:
		if(~PINB & 0x01)
 3d2:	18 99       	sbic	0x03, 0	; 3
 3d4:	16 c0       	rjmp	.+44     	; 0x402 <ButtonPress+0xf2>
		{
			while(~PINB & 0x01){}
 3d6:	18 9b       	sbis	0x03, 0	; 3
 3d8:	fe cf       	rjmp	.-4      	; 0x3d6 <ButtonPress+0xc6>
			Press_States = Press1;
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	80 93 13 01 	sts	0x0113, r24
 3e0:	13 c0       	rjmp	.+38     	; 0x408 <ButtonPress+0xf8>
		}
		break;
	}
	switch(Press_States)
 3e2:	80 91 13 01 	lds	r24, 0x0113
 3e6:	83 30       	cpi	r24, 0x03	; 3
 3e8:	a9 f0       	breq	.+42     	; 0x414 <ButtonPress+0x104>
 3ea:	28 f4       	brcc	.+10     	; 0x3f6 <ButtonPress+0xe6>
 3ec:	81 30       	cpi	r24, 0x01	; 1
 3ee:	61 f0       	breq	.+24     	; 0x408 <ButtonPress+0xf8>
 3f0:	82 30       	cpi	r24, 0x02	; 2
 3f2:	69 f0       	breq	.+26     	; 0x40e <ButtonPress+0xfe>
 3f4:	08 95       	ret
 3f6:	85 30       	cpi	r24, 0x05	; 5
 3f8:	21 f0       	breq	.+8      	; 0x402 <ButtonPress+0xf2>
 3fa:	78 f0       	brcs	.+30     	; 0x41a <ButtonPress+0x10a>
 3fc:	86 30       	cpi	r24, 0x06	; 6
 3fe:	81 f0       	breq	.+32     	; 0x420 <ButtonPress+0x110>
 400:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
 402:	80 e1       	ldi	r24, 0x10	; 16
 404:	82 b9       	out	0x02, r24	; 2
		break;
 406:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	82 b9       	out	0x02, r24	; 2
		break;
 40c:	08 95       	ret
		
		case Press2:
		PORTA = 0x02;
 40e:	82 e0       	ldi	r24, 0x02	; 2
 410:	82 b9       	out	0x02, r24	; 2
		break;
 412:	08 95       	ret
		
		case Press3:
		PORTA = 0x04;
 414:	84 e0       	ldi	r24, 0x04	; 4
 416:	82 b9       	out	0x02, r24	; 2
		break;
 418:	08 95       	ret
		
		case Press4:
		PORTA = 0x08;
 41a:	88 e0       	ldi	r24, 0x08	; 8
 41c:	82 b9       	out	0x02, r24	; 2
		break;
 41e:	08 95       	ret
		case Off:
		PORTA = 0x00;
 420:	12 b8       	out	0x02, r1	; 2
		global_g = 2;
 422:	82 e0       	ldi	r24, 0x02	; 2
 424:	80 93 04 01 	sts	0x0104, r24
 428:	08 95       	ret

0000042a <TickFct_Machine2>:
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
 42a:	80 91 0f 01 	lds	r24, 0x010F
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	87 30       	cpi	r24, 0x07	; 7
 432:	91 05       	cpc	r25, r1
 434:	70 f5       	brcc	.+92     	; 0x492 <TickFct_Machine2+0x68>
 436:	fc 01       	movw	r30, r24
 438:	ea 5b       	subi	r30, 0xBA	; 186
 43a:	ff 4f       	sbci	r31, 0xFF	; 255
 43c:	19 c5       	rjmp	.+2610   	; 0xe70 <__tablejump2__>
	{
		case SM2_off:
		if(global_g == 2)
 43e:	80 91 04 01 	lds	r24, 0x0104
 442:	82 30       	cpi	r24, 0x02	; 2
 444:	81 f5       	brne	.+96     	; 0x4a6 <TickFct_Machine2+0x7c>
		{
			if(~PINB & 0x01)
 446:	18 99       	sbic	0x03, 0	; 3
 448:	03 c0       	rjmp	.+6      	; 0x450 <TickFct_Machine2+0x26>
			{
				SM2_States = SM2_on1;
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	80 93 0f 01 	sts	0x010F, r24
			}
			while(!(~PINB & 0x01))
 450:	18 9b       	sbis	0x03, 0	; 3
 452:	1f c0       	rjmp	.+62     	; 0x492 <TickFct_Machine2+0x68>
			{
				SM2_States = SM2_off;
 454:	10 92 0f 01 	sts	0x010F, r1
		{
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
 458:	18 99       	sbic	0x03, 0	; 3
 45a:	fc cf       	rjmp	.-8      	; 0x454 <TickFct_Machine2+0x2a>
 45c:	24 c0       	rjmp	.+72     	; 0x4a6 <TickFct_Machine2+0x7c>
		else{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
 45e:	82 e0       	ldi	r24, 0x02	; 2
 460:	80 93 0f 01 	sts	0x010F, r24
 464:	25 c0       	rjmp	.+74     	; 0x4b0 <TickFct_Machine2+0x86>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
 466:	83 e0       	ldi	r24, 0x03	; 3
 468:	80 93 0f 01 	sts	0x010F, r24
 46c:	24 c0       	rjmp	.+72     	; 0x4b6 <TickFct_Machine2+0x8c>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
 46e:	84 e0       	ldi	r24, 0x04	; 4
 470:	80 93 0f 01 	sts	0x010F, r24
 474:	23 c0       	rjmp	.+70     	; 0x4bc <TickFct_Machine2+0x92>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
 476:	85 e0       	ldi	r24, 0x05	; 5
 478:	80 93 0f 01 	sts	0x010F, r24
 47c:	22 c0       	rjmp	.+68     	; 0x4c2 <TickFct_Machine2+0x98>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
 47e:	86 e0       	ldi	r24, 0x06	; 6
 480:	80 93 0f 01 	sts	0x010F, r24
 484:	21 c0       	rjmp	.+66     	; 0x4c8 <TickFct_Machine2+0x9e>
		break;
		case SM2_on6:
		global_g = 3;
 486:	83 e0       	ldi	r24, 0x03	; 3
 488:	80 93 04 01 	sts	0x0104, r24
		SM2_States = SM2_off;
 48c:	10 92 0f 01 	sts	0x010F, r1
		break;
 490:	0a c0       	rjmp	.+20     	; 0x4a6 <TickFct_Machine2+0x7c>
	}

	switch(SM2_States)
 492:	80 91 0f 01 	lds	r24, 0x010F
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	87 30       	cpi	r24, 0x07	; 7
 49a:	91 05       	cpc	r25, r1
 49c:	b8 f4       	brcc	.+46     	; 0x4cc <TickFct_Machine2+0xa2>
 49e:	fc 01       	movw	r30, r24
 4a0:	e3 5b       	subi	r30, 0xB3	; 179
 4a2:	ff 4f       	sbci	r31, 0xFF	; 255
 4a4:	e5 c4       	rjmp	.+2506   	; 0xe70 <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
 4a6:	12 b8       	out	0x02, r1	; 2
		break;
 4a8:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	82 b9       	out	0x02, r24	; 2
		break;
 4ae:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
 4b0:	84 e0       	ldi	r24, 0x04	; 4
 4b2:	82 b9       	out	0x02, r24	; 2
		break;
 4b4:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
 4b6:	88 e0       	ldi	r24, 0x08	; 8
 4b8:	82 b9       	out	0x02, r24	; 2
		break;
 4ba:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	82 b9       	out	0x02, r24	; 2
		break;
 4c0:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
 4c2:	82 e0       	ldi	r24, 0x02	; 2
 4c4:	82 b9       	out	0x02, r24	; 2
		break;
 4c6:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	82 b9       	out	0x02, r24	; 2
 4cc:	08 95       	ret

000004ce <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
 4ce:	80 91 0a 01 	lds	r24, 0x010A
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	87 30       	cpi	r24, 0x07	; 7
 4d6:	91 05       	cpc	r25, r1
 4d8:	08 f0       	brcs	.+2      	; 0x4dc <ButtonPress2+0xe>
 4da:	70 c0       	rjmp	.+224    	; 0x5bc <ButtonPress2+0xee>
 4dc:	fc 01       	movw	r30, r24
 4de:	ec 5a       	subi	r30, 0xAC	; 172
 4e0:	ff 4f       	sbci	r31, 0xFF	; 255
 4e2:	c6 c4       	rjmp	.+2444   	; 0xe70 <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
 4e4:	18 99       	sbic	0x03, 0	; 3
 4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <ButtonPress2+0x24>
		{
			while(~PINB & 0x01){}
 4e8:	18 9b       	sbis	0x03, 0	; 3
 4ea:	fe cf       	rjmp	.-4      	; 0x4e8 <ButtonPress2+0x1a>
			Press_sec_level = Press_state1;
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 4f2:	19 9b       	sbis	0x03, 1	; 3
 4f4:	04 c0       	rjmp	.+8      	; 0x4fe <ButtonPress2+0x30>
 4f6:	1a 9b       	sbis	0x03, 2	; 3
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <ButtonPress2+0x30>
 4fa:	1b 99       	sbic	0x03, 3	; 3
 4fc:	62 c0       	rjmp	.+196    	; 0x5c2 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 4fe:	87 e0       	ldi	r24, 0x07	; 7
 500:	80 93 0a 01 	sts	0x010A, r24
 504:	69 c0       	rjmp	.+210    	; 0x5d8 <ButtonPress2+0x10a>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
 506:	1a 99       	sbic	0x03, 2	; 3
 508:	05 c0       	rjmp	.+10     	; 0x514 <ButtonPress2+0x46>
		{
			while(~PINB & 0x04){}
 50a:	1a 9b       	sbis	0x03, 2	; 3
 50c:	fe cf       	rjmp	.-4      	; 0x50a <ButtonPress2+0x3c>
			Press_sec_level = Press_state2;
 50e:	82 e0       	ldi	r24, 0x02	; 2
 510:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 514:	19 9b       	sbis	0x03, 1	; 3
 516:	04 c0       	rjmp	.+8      	; 0x520 <ButtonPress2+0x52>
 518:	18 9b       	sbis	0x03, 0	; 3
 51a:	02 c0       	rjmp	.+4      	; 0x520 <ButtonPress2+0x52>
 51c:	1b 99       	sbic	0x03, 3	; 3
 51e:	51 c0       	rjmp	.+162    	; 0x5c2 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error;
 520:	85 e0       	ldi	r24, 0x05	; 5
 522:	80 93 0a 01 	sts	0x010A, r24
 526:	67 c0       	rjmp	.+206    	; 0x5f6 <ButtonPress2+0x128>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
 528:	1b 99       	sbic	0x03, 3	; 3
 52a:	05 c0       	rjmp	.+10     	; 0x536 <ButtonPress2+0x68>
		{
			while(~PINB & 0x08){}
 52c:	1b 9b       	sbis	0x03, 3	; 3
 52e:	fe cf       	rjmp	.-4      	; 0x52c <ButtonPress2+0x5e>
			Press_sec_level = Press_state3;
 530:	83 e0       	ldi	r24, 0x03	; 3
 532:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 536:	19 9b       	sbis	0x03, 1	; 3
 538:	04 c0       	rjmp	.+8      	; 0x542 <ButtonPress2+0x74>
 53a:	1a 9b       	sbis	0x03, 2	; 3
 53c:	02 c0       	rjmp	.+4      	; 0x542 <ButtonPress2+0x74>
 53e:	18 99       	sbic	0x03, 0	; 3
 540:	40 c0       	rjmp	.+128    	; 0x5c2 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 542:	87 e0       	ldi	r24, 0x07	; 7
 544:	80 93 0a 01 	sts	0x010A, r24
 548:	47 c0       	rjmp	.+142    	; 0x5d8 <ButtonPress2+0x10a>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
 54a:	18 99       	sbic	0x03, 0	; 3
 54c:	05 c0       	rjmp	.+10     	; 0x558 <ButtonPress2+0x8a>
		{
			while(~PINB & 0x01){}
 54e:	18 9b       	sbis	0x03, 0	; 3
 550:	fe cf       	rjmp	.-4      	; 0x54e <ButtonPress2+0x80>
			Press_sec_level = Press_state4;
 552:	84 e0       	ldi	r24, 0x04	; 4
 554:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 558:	19 9b       	sbis	0x03, 1	; 3
 55a:	04 c0       	rjmp	.+8      	; 0x564 <ButtonPress2+0x96>
 55c:	1a 9b       	sbis	0x03, 2	; 3
 55e:	02 c0       	rjmp	.+4      	; 0x564 <ButtonPress2+0x96>
 560:	1b 99       	sbic	0x03, 3	; 3
 562:	2f c0       	rjmp	.+94     	; 0x5c2 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 564:	87 e0       	ldi	r24, 0x07	; 7
 566:	80 93 0a 01 	sts	0x010A, r24
 56a:	36 c0       	rjmp	.+108    	; 0x5d8 <ButtonPress2+0x10a>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
 56c:	19 99       	sbic	0x03, 1	; 3
 56e:	05 c0       	rjmp	.+10     	; 0x57a <ButtonPress2+0xac>
		{
			while(~PINB & 0x02){}
 570:	19 9b       	sbis	0x03, 1	; 3
 572:	fe cf       	rjmp	.-4      	; 0x570 <ButtonPress2+0xa2>
			Press_sec_level = Press_state5;
 574:	85 e0       	ldi	r24, 0x05	; 5
 576:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 57a:	18 9b       	sbis	0x03, 0	; 3
 57c:	04 c0       	rjmp	.+8      	; 0x586 <ButtonPress2+0xb8>
 57e:	1a 9b       	sbis	0x03, 2	; 3
 580:	02 c0       	rjmp	.+4      	; 0x586 <ButtonPress2+0xb8>
 582:	1b 99       	sbic	0x03, 3	; 3
 584:	1e c0       	rjmp	.+60     	; 0x5c2 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 586:	87 e0       	ldi	r24, 0x07	; 7
 588:	80 93 0a 01 	sts	0x010A, r24
 58c:	25 c0       	rjmp	.+74     	; 0x5d8 <ButtonPress2+0x10a>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
 58e:	18 99       	sbic	0x03, 0	; 3
 590:	05 c0       	rjmp	.+10     	; 0x59c <ButtonPress2+0xce>
		{
			while(~PINB & 0x01){}
 592:	18 9b       	sbis	0x03, 0	; 3
 594:	fe cf       	rjmp	.-4      	; 0x592 <ButtonPress2+0xc4>
			Press_sec_level = Press_state6;
 596:	86 e0       	ldi	r24, 0x06	; 6
 598:	80 93 0a 01 	sts	0x010A, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 59c:	19 9b       	sbis	0x03, 1	; 3
 59e:	04 c0       	rjmp	.+8      	; 0x5a8 <ButtonPress2+0xda>
 5a0:	1a 9b       	sbis	0x03, 2	; 3
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <ButtonPress2+0xda>
 5a4:	1b 99       	sbic	0x03, 3	; 3
 5a6:	0d c0       	rjmp	.+26     	; 0x5c2 <ButtonPress2+0xf4>
		{
			Press_sec_level = Error2;
 5a8:	87 e0       	ldi	r24, 0x07	; 7
 5aa:	80 93 0a 01 	sts	0x010A, r24
 5ae:	14 c0       	rjmp	.+40     	; 0x5d8 <ButtonPress2+0x10a>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
 5b0:	1c 99       	sbic	0x03, 4	; 3
 5b2:	24 c0       	rjmp	.+72     	; 0x5fc <ButtonPress2+0x12e>
		{
			Press_sec_level = Off2;
 5b4:	88 e0       	ldi	r24, 0x08	; 8
 5b6:	80 93 0a 01 	sts	0x010A, r24
 5ba:	23 c0       	rjmp	.+70     	; 0x602 <ButtonPress2+0x134>
		}
		break;
		default:
		Press_sec_level = Init2;
 5bc:	10 92 0a 01 	sts	0x010A, r1
 5c0:	08 95       	ret
	}
	switch(Press_sec_level)
 5c2:	80 91 0a 01 	lds	r24, 0x010A
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	fc 01       	movw	r30, r24
 5ca:	31 97       	sbiw	r30, 0x01	; 1
 5cc:	e8 30       	cpi	r30, 0x08	; 8
 5ce:	f1 05       	cpc	r31, r1
 5d0:	e0 f4       	brcc	.+56     	; 0x60a <ButtonPress2+0x13c>
 5d2:	e5 5a       	subi	r30, 0xA5	; 165
 5d4:	ff 4f       	sbci	r31, 0xFF	; 255
 5d6:	4c c4       	rjmp	.+2200   	; 0xe70 <__tablejump2__>
	{
		case Error2:
		PORTA = 0x10;
 5d8:	80 e1       	ldi	r24, 0x10	; 16
 5da:	82 b9       	out	0x02, r24	; 2
		break;
 5dc:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	82 b9       	out	0x02, r24	; 2
		break;
 5e2:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
 5e4:	84 e0       	ldi	r24, 0x04	; 4
 5e6:	82 b9       	out	0x02, r24	; 2
		break;
 5e8:	08 95       	ret

		case Press_state3:
		PORTA = 0x08;
 5ea:	88 e0       	ldi	r24, 0x08	; 8
 5ec:	82 b9       	out	0x02, r24	; 2
		break;
 5ee:	08 95       	ret

		case Press_state4:
		PORTA = 0x01;
 5f0:	81 e0       	ldi	r24, 0x01	; 1
 5f2:	82 b9       	out	0x02, r24	; 2
		break;
 5f4:	08 95       	ret

		case Press_state5:
		PORTA = 0x02;
 5f6:	82 e0       	ldi	r24, 0x02	; 2
 5f8:	82 b9       	out	0x02, r24	; 2
		break;
 5fa:	08 95       	ret

		case Press_state6:
		PORTA = 0x01;
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	82 b9       	out	0x02, r24	; 2
		break;
 600:	08 95       	ret

		case Off2:
		PORTA = 0x00;
 602:	12 b8       	out	0x02, r1	; 2
		global_g = 4;
 604:	84 e0       	ldi	r24, 0x04	; 4
 606:	80 93 04 01 	sts	0x0104, r24
 60a:	08 95       	ret

0000060c <TickFct_Machine3>:
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
 60c:	20 91 0b 01 	lds	r18, 0x010B
 610:	82 2f       	mov	r24, r18
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	8a 30       	cpi	r24, 0x0A	; 10
 616:	91 05       	cpc	r25, r1
 618:	98 f5       	brcc	.+102    	; 0x680 <TickFct_Machine3+0x74>
 61a:	fc 01       	movw	r30, r24
 61c:	ed 59       	subi	r30, 0x9D	; 157
 61e:	ff 4f       	sbci	r31, 0xFF	; 255
 620:	27 c4       	rjmp	.+2126   	; 0xe70 <__tablejump2__>
	{
		case SM3_off:
		if(global_g == 4)
 622:	80 91 04 01 	lds	r24, 0x0104
 626:	84 30       	cpi	r24, 0x04	; 4
 628:	a1 f5       	brne	.+104    	; 0x692 <TickFct_Machine3+0x86>
		{
			if(~PINB & 0x01)
 62a:	18 99       	sbic	0x03, 0	; 3
 62c:	32 c0       	rjmp	.+100    	; 0x692 <TickFct_Machine3+0x86>
			{
				while(~PINB & 0x01){}
 62e:	18 9b       	sbis	0x03, 0	; 3
 630:	fe cf       	rjmp	.-4      	; 0x62e <TickFct_Machine3+0x22>
				SM3_State = SM3_on1;
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	80 93 0b 01 	sts	0x010B, r24
 638:	2e c0       	rjmp	.+92     	; 0x696 <TickFct_Machine3+0x8a>
				SM3_State = SM3_off;
			}	
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
 63a:	82 e0       	ldi	r24, 0x02	; 2
 63c:	80 93 0b 01 	sts	0x010B, r24
 640:	2d c0       	rjmp	.+90     	; 0x69c <TickFct_Machine3+0x90>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
 642:	83 e0       	ldi	r24, 0x03	; 3
 644:	80 93 0b 01 	sts	0x010B, r24
 648:	2c c0       	rjmp	.+88     	; 0x6a2 <TickFct_Machine3+0x96>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
 64a:	84 e0       	ldi	r24, 0x04	; 4
 64c:	80 93 0b 01 	sts	0x010B, r24
 650:	2b c0       	rjmp	.+86     	; 0x6a8 <TickFct_Machine3+0x9c>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
 652:	85 e0       	ldi	r24, 0x05	; 5
 654:	80 93 0b 01 	sts	0x010B, r24
 658:	2a c0       	rjmp	.+84     	; 0x6ae <TickFct_Machine3+0xa2>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
 65a:	86 e0       	ldi	r24, 0x06	; 6
 65c:	80 93 0b 01 	sts	0x010B, r24
 660:	29 c0       	rjmp	.+82     	; 0x6b4 <TickFct_Machine3+0xa8>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
 662:	87 e0       	ldi	r24, 0x07	; 7
 664:	80 93 0b 01 	sts	0x010B, r24
 668:	28 c0       	rjmp	.+80     	; 0x6ba <TickFct_Machine3+0xae>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
 66a:	88 e0       	ldi	r24, 0x08	; 8
 66c:	80 93 0b 01 	sts	0x010B, r24
 670:	27 c0       	rjmp	.+78     	; 0x6c0 <TickFct_Machine3+0xb4>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
 672:	89 e0       	ldi	r24, 0x09	; 9
 674:	80 93 0b 01 	sts	0x010B, r24
 678:	26 c0       	rjmp	.+76     	; 0x6c6 <TickFct_Machine3+0xba>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
 67a:	10 92 0b 01 	sts	0x010B, r1
 67e:	09 c0       	rjmp	.+18     	; 0x692 <TickFct_Machine3+0x86>
	}
	switch(SM3_State)
 680:	82 2f       	mov	r24, r18
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	8a 30       	cpi	r24, 0x0A	; 10
 686:	91 05       	cpc	r25, r1
 688:	18 f5       	brcc	.+70     	; 0x6d0 <TickFct_Machine3+0xc4>
 68a:	fc 01       	movw	r30, r24
 68c:	e3 59       	subi	r30, 0x93	; 147
 68e:	ff 4f       	sbci	r31, 0xFF	; 255
 690:	ef c3       	rjmp	.+2014   	; 0xe70 <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
 692:	12 b8       	out	0x02, r1	; 2
		break;
 694:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
 696:	82 e0       	ldi	r24, 0x02	; 2
 698:	82 b9       	out	0x02, r24	; 2
		break;
 69a:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
 69c:	84 e0       	ldi	r24, 0x04	; 4
 69e:	82 b9       	out	0x02, r24	; 2
		break;
 6a0:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
 6a2:	81 e0       	ldi	r24, 0x01	; 1
 6a4:	82 b9       	out	0x02, r24	; 2
		break;
 6a6:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
 6a8:	88 e0       	ldi	r24, 0x08	; 8
 6aa:	82 b9       	out	0x02, r24	; 2
		break;
 6ac:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
 6ae:	82 e0       	ldi	r24, 0x02	; 2
 6b0:	82 b9       	out	0x02, r24	; 2
		break;
 6b2:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
 6b4:	84 e0       	ldi	r24, 0x04	; 4
 6b6:	82 b9       	out	0x02, r24	; 2
		break;
 6b8:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	82 b9       	out	0x02, r24	; 2
		break;
 6be:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
 6c0:	82 e0       	ldi	r24, 0x02	; 2
 6c2:	82 b9       	out	0x02, r24	; 2
		break;
 6c4:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
 6c6:	88 e0       	ldi	r24, 0x08	; 8
 6c8:	82 b9       	out	0x02, r24	; 2
		global_g = 5;
 6ca:	85 e0       	ldi	r24, 0x05	; 5
 6cc:	80 93 04 01 	sts	0x0104, r24
 6d0:	08 95       	ret

000006d2 <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
 6d2:	80 91 11 01 	lds	r24, 0x0111
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	8b 30       	cpi	r24, 0x0B	; 11
 6da:	91 05       	cpc	r25, r1
 6dc:	08 f0       	brcs	.+2      	; 0x6e0 <ButtonPress3+0xe>
 6de:	b1 c0       	rjmp	.+354    	; 0x842 <ButtonPress3+0x170>
 6e0:	fc 01       	movw	r30, r24
 6e2:	e9 58       	subi	r30, 0x89	; 137
 6e4:	ff 4f       	sbci	r31, 0xFF	; 255
 6e6:	c4 c3       	rjmp	.+1928   	; 0xe70 <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
 6e8:	80 91 04 01 	lds	r24, 0x0104
 6ec:	85 30       	cpi	r24, 0x05	; 5
 6ee:	09 f0       	breq	.+2      	; 0x6f2 <ButtonPress3+0x20>
 6f0:	d5 c0       	rjmp	.+426    	; 0x89c <ButtonPress3+0x1ca>
		{
			PORTA = 0x00;
 6f2:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
 6f4:	19 99       	sbic	0x03, 1	; 3
 6f6:	05 c0       	rjmp	.+10     	; 0x702 <ButtonPress3+0x30>
			{
				while(~PINB & 0x02){}
 6f8:	19 9b       	sbis	0x03, 1	; 3
 6fa:	fe cf       	rjmp	.-4      	; 0x6f8 <ButtonPress3+0x26>
				Press_third_level = Press3_state1;
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	80 93 11 01 	sts	0x0111, r24
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 702:	18 9b       	sbis	0x03, 0	; 3
 704:	04 c0       	rjmp	.+8      	; 0x70e <ButtonPress3+0x3c>
 706:	1a 9b       	sbis	0x03, 2	; 3
 708:	02 c0       	rjmp	.+4      	; 0x70e <ButtonPress3+0x3c>
 70a:	1b 99       	sbic	0x03, 3	; 3
 70c:	9a c0       	rjmp	.+308    	; 0x842 <ButtonPress3+0x170>
			{
				Press_third_level = Error3;
 70e:	8a e0       	ldi	r24, 0x0A	; 10
 710:	80 93 11 01 	sts	0x0111, r24
 714:	a1 c0       	rjmp	.+322    	; 0x858 <ButtonPress3+0x186>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
 716:	19 99       	sbic	0x03, 1	; 3
 718:	9f c0       	rjmp	.+318    	; 0x858 <ButtonPress3+0x186>
		{
			while(~PINB & 0x02){}
 71a:	19 9b       	sbis	0x03, 1	; 3
 71c:	fe cf       	rjmp	.-4      	; 0x71a <ButtonPress3+0x48>
			Press_third_level = Press3_state1;
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	80 93 11 01 	sts	0x0111, r24
 724:	9c c0       	rjmp	.+312    	; 0x85e <ButtonPress3+0x18c>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
 726:	1a 99       	sbic	0x03, 2	; 3
 728:	05 c0       	rjmp	.+10     	; 0x734 <ButtonPress3+0x62>
		{
			
			while(~PINB & 0x04){}
 72a:	1a 9b       	sbis	0x03, 2	; 3
 72c:	fe cf       	rjmp	.-4      	; 0x72a <ButtonPress3+0x58>
			Press_third_level = Press3_state2;
 72e:	82 e0       	ldi	r24, 0x02	; 2
 730:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 734:	19 9b       	sbis	0x03, 1	; 3
 736:	04 c0       	rjmp	.+8      	; 0x740 <ButtonPress3+0x6e>
 738:	18 9b       	sbis	0x03, 0	; 3
 73a:	02 c0       	rjmp	.+4      	; 0x740 <ButtonPress3+0x6e>
 73c:	1b 99       	sbic	0x03, 3	; 3
 73e:	81 c0       	rjmp	.+258    	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 740:	8a e0       	ldi	r24, 0x0A	; 10
 742:	80 93 11 01 	sts	0x0111, r24
 746:	88 c0       	rjmp	.+272    	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
 748:	18 99       	sbic	0x03, 0	; 3
 74a:	05 c0       	rjmp	.+10     	; 0x756 <ButtonPress3+0x84>
		{
			while(~PINB & 0x01){}
 74c:	18 9b       	sbis	0x03, 0	; 3
 74e:	fe cf       	rjmp	.-4      	; 0x74c <ButtonPress3+0x7a>
			Press_third_level = Press3_state3;
 750:	83 e0       	ldi	r24, 0x03	; 3
 752:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 756:	19 9b       	sbis	0x03, 1	; 3
 758:	04 c0       	rjmp	.+8      	; 0x762 <ButtonPress3+0x90>
 75a:	1a 9b       	sbis	0x03, 2	; 3
 75c:	02 c0       	rjmp	.+4      	; 0x762 <ButtonPress3+0x90>
 75e:	1b 99       	sbic	0x03, 3	; 3
 760:	70 c0       	rjmp	.+224    	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 762:	8a e0       	ldi	r24, 0x0A	; 10
 764:	80 93 11 01 	sts	0x0111, r24
 768:	77 c0       	rjmp	.+238    	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
 76a:	1b 99       	sbic	0x03, 3	; 3
 76c:	05 c0       	rjmp	.+10     	; 0x778 <ButtonPress3+0xa6>
		{
			while(~PINB & 0x08){}
 76e:	1b 9b       	sbis	0x03, 3	; 3
 770:	fe cf       	rjmp	.-4      	; 0x76e <ButtonPress3+0x9c>
			Press_third_level = Press3_state4;
 772:	84 e0       	ldi	r24, 0x04	; 4
 774:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 778:	19 9b       	sbis	0x03, 1	; 3
 77a:	04 c0       	rjmp	.+8      	; 0x784 <ButtonPress3+0xb2>
 77c:	1a 9b       	sbis	0x03, 2	; 3
 77e:	02 c0       	rjmp	.+4      	; 0x784 <ButtonPress3+0xb2>
 780:	18 99       	sbic	0x03, 0	; 3
 782:	5f c0       	rjmp	.+190    	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 784:	8a e0       	ldi	r24, 0x0A	; 10
 786:	80 93 11 01 	sts	0x0111, r24
 78a:	66 c0       	rjmp	.+204    	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
 78c:	19 99       	sbic	0x03, 1	; 3
 78e:	05 c0       	rjmp	.+10     	; 0x79a <ButtonPress3+0xc8>
		{
			while(~PINB & 0x02){}
 790:	19 9b       	sbis	0x03, 1	; 3
 792:	fe cf       	rjmp	.-4      	; 0x790 <ButtonPress3+0xbe>
			Press_third_level = Press3_state5;
 794:	85 e0       	ldi	r24, 0x05	; 5
 796:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 79a:	18 9b       	sbis	0x03, 0	; 3
 79c:	04 c0       	rjmp	.+8      	; 0x7a6 <ButtonPress3+0xd4>
 79e:	1a 9b       	sbis	0x03, 2	; 3
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <ButtonPress3+0xd4>
 7a2:	1b 99       	sbic	0x03, 3	; 3
 7a4:	4e c0       	rjmp	.+156    	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 7a6:	8a e0       	ldi	r24, 0x0A	; 10
 7a8:	80 93 11 01 	sts	0x0111, r24
 7ac:	55 c0       	rjmp	.+170    	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
 7ae:	1a 99       	sbic	0x03, 2	; 3
 7b0:	05 c0       	rjmp	.+10     	; 0x7bc <ButtonPress3+0xea>
		{
			
			while(~PINB & 0x04){}
 7b2:	1a 9b       	sbis	0x03, 2	; 3
 7b4:	fe cf       	rjmp	.-4      	; 0x7b2 <ButtonPress3+0xe0>
			Press_third_level = Press3_state6;
 7b6:	86 e0       	ldi	r24, 0x06	; 6
 7b8:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
 7bc:	19 9b       	sbis	0x03, 1	; 3
 7be:	04 c0       	rjmp	.+8      	; 0x7c8 <ButtonPress3+0xf6>
 7c0:	18 9b       	sbis	0x03, 0	; 3
 7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <ButtonPress3+0xf6>
 7c4:	1b 99       	sbic	0x03, 3	; 3
 7c6:	3d c0       	rjmp	.+122    	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 7c8:	8a e0       	ldi	r24, 0x0A	; 10
 7ca:	80 93 11 01 	sts	0x0111, r24
 7ce:	44 c0       	rjmp	.+136    	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
 7d0:	18 99       	sbic	0x03, 0	; 3
 7d2:	05 c0       	rjmp	.+10     	; 0x7de <ButtonPress3+0x10c>
		{
			while(~PINB & 0x01){}
 7d4:	18 9b       	sbis	0x03, 0	; 3
 7d6:	fe cf       	rjmp	.-4      	; 0x7d4 <ButtonPress3+0x102>
			Press_third_level = Press3_state7;
 7d8:	87 e0       	ldi	r24, 0x07	; 7
 7da:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 7de:	19 9b       	sbis	0x03, 1	; 3
 7e0:	04 c0       	rjmp	.+8      	; 0x7ea <ButtonPress3+0x118>
 7e2:	1a 9b       	sbis	0x03, 2	; 3
 7e4:	02 c0       	rjmp	.+4      	; 0x7ea <ButtonPress3+0x118>
 7e6:	1b 99       	sbic	0x03, 3	; 3
 7e8:	2c c0       	rjmp	.+88     	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 7ea:	8a e0       	ldi	r24, 0x0A	; 10
 7ec:	80 93 11 01 	sts	0x0111, r24
 7f0:	33 c0       	rjmp	.+102    	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
 7f2:	19 99       	sbic	0x03, 1	; 3
 7f4:	05 c0       	rjmp	.+10     	; 0x800 <ButtonPress3+0x12e>
		{
			while(~PINB & 0x02){}
 7f6:	19 9b       	sbis	0x03, 1	; 3
 7f8:	fe cf       	rjmp	.-4      	; 0x7f6 <ButtonPress3+0x124>
			Press_third_level = Press3_state8;
 7fa:	88 e0       	ldi	r24, 0x08	; 8
 7fc:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 800:	18 9b       	sbis	0x03, 0	; 3
 802:	04 c0       	rjmp	.+8      	; 0x80c <ButtonPress3+0x13a>
 804:	1a 9b       	sbis	0x03, 2	; 3
 806:	02 c0       	rjmp	.+4      	; 0x80c <ButtonPress3+0x13a>
 808:	1b 99       	sbic	0x03, 3	; 3
 80a:	1b c0       	rjmp	.+54     	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 80c:	8a e0       	ldi	r24, 0x0A	; 10
 80e:	80 93 11 01 	sts	0x0111, r24
 812:	22 c0       	rjmp	.+68     	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
 814:	1b 99       	sbic	0x03, 3	; 3
 816:	05 c0       	rjmp	.+10     	; 0x822 <ButtonPress3+0x150>
		{
			while(~PINB & 0x08){}
 818:	1b 9b       	sbis	0x03, 3	; 3
 81a:	fe cf       	rjmp	.-4      	; 0x818 <ButtonPress3+0x146>
			Press_third_level = Press3_state9;
 81c:	89 e0       	ldi	r24, 0x09	; 9
 81e:	80 93 11 01 	sts	0x0111, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 822:	19 9b       	sbis	0x03, 1	; 3
 824:	04 c0       	rjmp	.+8      	; 0x82e <ButtonPress3+0x15c>
 826:	1a 9b       	sbis	0x03, 2	; 3
 828:	02 c0       	rjmp	.+4      	; 0x82e <ButtonPress3+0x15c>
 82a:	18 99       	sbic	0x03, 0	; 3
 82c:	0a c0       	rjmp	.+20     	; 0x842 <ButtonPress3+0x170>
		{
			Press_third_level = Error3;
 82e:	8a e0       	ldi	r24, 0x0A	; 10
 830:	80 93 11 01 	sts	0x0111, r24
 834:	11 c0       	rjmp	.+34     	; 0x858 <ButtonPress3+0x186>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
 836:	1c 99       	sbic	0x03, 4	; 3
 838:	2a c0       	rjmp	.+84     	; 0x88e <ButtonPress3+0x1bc>
		{
			Press_third_level = Off3;
 83a:	8b e0       	ldi	r24, 0x0B	; 11
 83c:	80 93 11 01 	sts	0x0111, r24
 840:	29 c0       	rjmp	.+82     	; 0x894 <ButtonPress3+0x1c2>
		}
		break;
	}
	switch(Press_third_level)
 842:	80 91 11 01 	lds	r24, 0x0111
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	fc 01       	movw	r30, r24
 84a:	31 97       	sbiw	r30, 0x01	; 1
 84c:	eb 30       	cpi	r30, 0x0B	; 11
 84e:	f1 05       	cpc	r31, r1
 850:	28 f5       	brcc	.+74     	; 0x89c <ButtonPress3+0x1ca>
 852:	ee 57       	subi	r30, 0x7E	; 126
 854:	ff 4f       	sbci	r31, 0xFF	; 255
 856:	0c c3       	rjmp	.+1560   	; 0xe70 <__tablejump2__>
	{
		case Error3:
		PORTA = 0x10;
 858:	80 e1       	ldi	r24, 0x10	; 16
 85a:	82 b9       	out	0x02, r24	; 2
		break;
 85c:	08 95       	ret
		case Press3_state1:
		PORTA = 0x02;
 85e:	82 e0       	ldi	r24, 0x02	; 2
 860:	82 b9       	out	0x02, r24	; 2
		break;
 862:	08 95       	ret
		case Press3_state2:
		PORTA = 0x04;
 864:	84 e0       	ldi	r24, 0x04	; 4
 866:	82 b9       	out	0x02, r24	; 2
		break;
 868:	08 95       	ret
		case Press3_state3:
		PORTA = 0x01;
 86a:	81 e0       	ldi	r24, 0x01	; 1
 86c:	82 b9       	out	0x02, r24	; 2
		break;
 86e:	08 95       	ret
		case Press3_state4:
		PORTA = 0x08;
 870:	88 e0       	ldi	r24, 0x08	; 8
 872:	82 b9       	out	0x02, r24	; 2
		break;
 874:	08 95       	ret
		case Press3_state5:
		PORTA = 0x02;
 876:	82 e0       	ldi	r24, 0x02	; 2
 878:	82 b9       	out	0x02, r24	; 2
		break;
 87a:	08 95       	ret
		case Press3_state6:
		PORTA = 0x04;
 87c:	84 e0       	ldi	r24, 0x04	; 4
 87e:	82 b9       	out	0x02, r24	; 2
		break;
 880:	08 95       	ret
		case Press3_state7:
		PORTA = 0x01;
 882:	81 e0       	ldi	r24, 0x01	; 1
 884:	82 b9       	out	0x02, r24	; 2
		break;
 886:	08 95       	ret
		case Press3_state8:
		PORTA = 0x02;
 888:	82 e0       	ldi	r24, 0x02	; 2
 88a:	82 b9       	out	0x02, r24	; 2
		break;
 88c:	08 95       	ret
		case Press3_state9:
		PORTA = 0x08;
 88e:	88 e0       	ldi	r24, 0x08	; 8
 890:	82 b9       	out	0x02, r24	; 2
		break;
 892:	08 95       	ret
		case Off3:
		PORTA = 0x00;
 894:	12 b8       	out	0x02, r1	; 2
		global_g = 6;
 896:	86 e0       	ldi	r24, 0x06	; 6
 898:	80 93 04 01 	sts	0x0104, r24
 89c:	08 95       	ret

0000089e <TickFct_Machine4>:
}

enum SM4_States {SM4_off, SM4_on1, SM4_on2, SM4_on3, SM4_on4, SM4_on5, SM4_on6, SM4_on7, SM4_on8, SM4_on9, SM4_on10, SM4_on11, SM4_on12} SM4_States;
void TickFct_Machine4()
{
	switch(SM4_States)
 89e:	20 91 0c 01 	lds	r18, 0x010C
 8a2:	82 2f       	mov	r24, r18
 8a4:	90 e0       	ldi	r25, 0x00	; 0
 8a6:	8d 30       	cpi	r24, 0x0D	; 13
 8a8:	91 05       	cpc	r25, r1
 8aa:	08 f0       	brcs	.+2      	; 0x8ae <TickFct_Machine4+0x10>
 8ac:	40 c0       	rjmp	.+128    	; 0x92e <TickFct_Machine4+0x90>
 8ae:	fc 01       	movw	r30, r24
 8b0:	e3 57       	subi	r30, 0x73	; 115
 8b2:	ff 4f       	sbci	r31, 0xFF	; 255
 8b4:	dd c2       	rjmp	.+1466   	; 0xe70 <__tablejump2__>
	{
		case SM4_off:
		if(global_g == 6)
 8b6:	80 91 04 01 	lds	r24, 0x0104
 8ba:	86 30       	cpi	r24, 0x06	; 6
 8bc:	09 f0       	breq	.+2      	; 0x8c0 <TickFct_Machine4+0x22>
 8be:	40 c0       	rjmp	.+128    	; 0x940 <TickFct_Machine4+0xa2>
		{
			if(~PINB & 0x01)
 8c0:	18 99       	sbic	0x03, 0	; 3
 8c2:	3e c0       	rjmp	.+124    	; 0x940 <TickFct_Machine4+0xa2>
			{
				while(~PINB & 0x01){}
 8c4:	18 9b       	sbis	0x03, 0	; 3
 8c6:	fe cf       	rjmp	.-4      	; 0x8c4 <TickFct_Machine4+0x26>
				SM4_States = SM4_on1;
 8c8:	81 e0       	ldi	r24, 0x01	; 1
 8ca:	80 93 0c 01 	sts	0x010C, r24
 8ce:	3a c0       	rjmp	.+116    	; 0x944 <TickFct_Machine4+0xa6>
				SM4_States = SM4_off;
			}
		}
		break;
		case SM4_on1:
		SM4_States = SM4_on2;
 8d0:	82 e0       	ldi	r24, 0x02	; 2
 8d2:	80 93 0c 01 	sts	0x010C, r24
 8d6:	39 c0       	rjmp	.+114    	; 0x94a <TickFct_Machine4+0xac>
		break;
		case SM4_on2:
		SM4_States = SM4_on3;
 8d8:	83 e0       	ldi	r24, 0x03	; 3
 8da:	80 93 0c 01 	sts	0x010C, r24
 8de:	38 c0       	rjmp	.+112    	; 0x950 <TickFct_Machine4+0xb2>
		break;
		case SM4_on3:
		SM4_States = SM4_on4;
 8e0:	84 e0       	ldi	r24, 0x04	; 4
 8e2:	80 93 0c 01 	sts	0x010C, r24
 8e6:	37 c0       	rjmp	.+110    	; 0x956 <TickFct_Machine4+0xb8>
		break;
		case SM4_on4:
		SM4_States = SM4_on5;
 8e8:	85 e0       	ldi	r24, 0x05	; 5
 8ea:	80 93 0c 01 	sts	0x010C, r24
 8ee:	36 c0       	rjmp	.+108    	; 0x95c <TickFct_Machine4+0xbe>
		break;
		case SM4_on5:
		SM4_States = SM4_on6;
 8f0:	86 e0       	ldi	r24, 0x06	; 6
 8f2:	80 93 0c 01 	sts	0x010C, r24
 8f6:	35 c0       	rjmp	.+106    	; 0x962 <TickFct_Machine4+0xc4>
		break;
		case SM4_on6:
		SM4_States = SM4_on7;
 8f8:	87 e0       	ldi	r24, 0x07	; 7
 8fa:	80 93 0c 01 	sts	0x010C, r24
 8fe:	34 c0       	rjmp	.+104    	; 0x968 <TickFct_Machine4+0xca>
		break;
		case SM4_on7:
		SM4_States = SM4_on8;
 900:	88 e0       	ldi	r24, 0x08	; 8
 902:	80 93 0c 01 	sts	0x010C, r24
 906:	33 c0       	rjmp	.+102    	; 0x96e <TickFct_Machine4+0xd0>
		break;
		case SM4_on8:
		SM4_States = SM4_on9;
 908:	89 e0       	ldi	r24, 0x09	; 9
 90a:	80 93 0c 01 	sts	0x010C, r24
 90e:	32 c0       	rjmp	.+100    	; 0x974 <TickFct_Machine4+0xd6>
		break;
		case SM4_on9:
		SM4_States = SM4_on10;
 910:	8a e0       	ldi	r24, 0x0A	; 10
 912:	80 93 0c 01 	sts	0x010C, r24
 916:	31 c0       	rjmp	.+98     	; 0x97a <TickFct_Machine4+0xdc>
		break;
		case SM4_on10:
		SM4_States = SM4_on11;
 918:	8b e0       	ldi	r24, 0x0B	; 11
 91a:	80 93 0c 01 	sts	0x010C, r24
 91e:	30 c0       	rjmp	.+96     	; 0x980 <TickFct_Machine4+0xe2>
		break;
		case SM4_on11:
		SM4_States = SM4_on12;
 920:	8c e0       	ldi	r24, 0x0C	; 12
 922:	80 93 0c 01 	sts	0x010C, r24
 926:	2f c0       	rjmp	.+94     	; 0x986 <TickFct_Machine4+0xe8>
		break;
		case SM4_on12:
		SM4_States = SM4_off;
 928:	10 92 0c 01 	sts	0x010C, r1
		break;
 92c:	09 c0       	rjmp	.+18     	; 0x940 <TickFct_Machine4+0xa2>
	}
	switch(SM4_States)
 92e:	82 2f       	mov	r24, r18
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	8d 30       	cpi	r24, 0x0D	; 13
 934:	91 05       	cpc	r25, r1
 936:	60 f5       	brcc	.+88     	; 0x990 <TickFct_Machine4+0xf2>
 938:	fc 01       	movw	r30, r24
 93a:	e6 56       	subi	r30, 0x66	; 102
 93c:	ff 4f       	sbci	r31, 0xFF	; 255
 93e:	98 c2       	rjmp	.+1328   	; 0xe70 <__tablejump2__>
	{
		case SM4_off:
		PORTA = 0x00;
 940:	12 b8       	out	0x02, r1	; 2
		break;
 942:	08 95       	ret
		case SM4_on1:
		PORTA = 0x01;
 944:	81 e0       	ldi	r24, 0x01	; 1
 946:	82 b9       	out	0x02, r24	; 2
		break;
 948:	08 95       	ret
		case SM4_on2:
		PORTA = 0x08;
 94a:	88 e0       	ldi	r24, 0x08	; 8
 94c:	82 b9       	out	0x02, r24	; 2
		break;
 94e:	08 95       	ret
		case SM4_on3:
		PORTA = 0x02;
 950:	82 e0       	ldi	r24, 0x02	; 2
 952:	82 b9       	out	0x02, r24	; 2
		break;
 954:	08 95       	ret
		case SM4_on4:
		PORTA = 0x01;
 956:	81 e0       	ldi	r24, 0x01	; 1
 958:	82 b9       	out	0x02, r24	; 2
		break;
 95a:	08 95       	ret
		case SM4_on5:
		PORTA = 0x02;
 95c:	82 e0       	ldi	r24, 0x02	; 2
 95e:	82 b9       	out	0x02, r24	; 2
		break;
 960:	08 95       	ret
		case SM4_on6:
		PORTA = 0x08;
 962:	88 e0       	ldi	r24, 0x08	; 8
 964:	82 b9       	out	0x02, r24	; 2
		break;
 966:	08 95       	ret
		case SM4_on7:
		PORTA = 0x02;
 968:	82 e0       	ldi	r24, 0x02	; 2
 96a:	82 b9       	out	0x02, r24	; 2
		break;
 96c:	08 95       	ret
		case SM4_on8:
		PORTA = 0x01;
 96e:	81 e0       	ldi	r24, 0x01	; 1
 970:	82 b9       	out	0x02, r24	; 2
		break;
 972:	08 95       	ret
		case SM4_on9:
		PORTA = 0x08;
 974:	88 e0       	ldi	r24, 0x08	; 8
 976:	82 b9       	out	0x02, r24	; 2
		break;
 978:	08 95       	ret
		case SM4_on10:
		PORTA = 0x01;
 97a:	81 e0       	ldi	r24, 0x01	; 1
 97c:	82 b9       	out	0x02, r24	; 2
		break;
 97e:	08 95       	ret
		case SM4_on11:
		PORTA = 0x02;
 980:	82 e0       	ldi	r24, 0x02	; 2
 982:	82 b9       	out	0x02, r24	; 2
		break;
 984:	08 95       	ret
		case SM4_on12:
		PORTA = 0x01;
 986:	81 e0       	ldi	r24, 0x01	; 1
 988:	82 b9       	out	0x02, r24	; 2
		global_g = 7;
 98a:	87 e0       	ldi	r24, 0x07	; 7
 98c:	80 93 04 01 	sts	0x0104, r24
 990:	08 95       	ret

00000992 <ButtonPress4>:
}

enum Press_fourth_level{Init4, Press4_state1, Press4_state2, Press4_state3, Press4_state4, Press4_state5, Press4_state6, Press4_state7, Press4_state8, Press4_state9, Press4_state10, Press4_state11, Press4_state12, Error4, Off4} Press_fourth_level;
void ButtonPress4()
{
	switch(Press_fourth_level)
 992:	80 91 0e 01 	lds	r24, 0x010E
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	8e 30       	cpi	r24, 0x0E	; 14
 99a:	91 05       	cpc	r25, r1
 99c:	08 f0       	brcs	.+2      	; 0x9a0 <ButtonPress4+0xe>
 99e:	e4 c0       	rjmp	.+456    	; 0xb68 <ButtonPress4+0x1d6>
 9a0:	fc 01       	movw	r30, r24
 9a2:	e9 55       	subi	r30, 0x59	; 89
 9a4:	ff 4f       	sbci	r31, 0xFF	; 255
 9a6:	64 c2       	rjmp	.+1224   	; 0xe70 <__tablejump2__>
	{
		case Init4:
		if(global_g == 7)
 9a8:	80 91 04 01 	lds	r24, 0x0104
 9ac:	87 30       	cpi	r24, 0x07	; 7
 9ae:	09 f0       	breq	.+2      	; 0x9b2 <ButtonPress4+0x20>
 9b0:	11 c1       	rjmp	.+546    	; 0xbd4 <ButtonPress4+0x242>
		{
			PORTA = 0x00;
 9b2:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x01)
 9b4:	18 99       	sbic	0x03, 0	; 3
 9b6:	05 c0       	rjmp	.+10     	; 0x9c2 <ButtonPress4+0x30>
			{
				while(~PINB & 0x01){}
 9b8:	18 9b       	sbis	0x03, 0	; 3
 9ba:	fe cf       	rjmp	.-4      	; 0x9b8 <ButtonPress4+0x26>
				Press_fourth_level = Press4_state1; 
 9bc:	81 e0       	ldi	r24, 0x01	; 1
 9be:	80 93 0e 01 	sts	0x010E, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 9c2:	19 9b       	sbis	0x03, 1	; 3
 9c4:	04 c0       	rjmp	.+8      	; 0x9ce <ButtonPress4+0x3c>
 9c6:	1a 9b       	sbis	0x03, 2	; 3
 9c8:	02 c0       	rjmp	.+4      	; 0x9ce <ButtonPress4+0x3c>
 9ca:	1b 99       	sbic	0x03, 3	; 3
 9cc:	cd c0       	rjmp	.+410    	; 0xb68 <ButtonPress4+0x1d6>
			{
				Press_fourth_level = Error4;
 9ce:	8d e0       	ldi	r24, 0x0D	; 13
 9d0:	80 93 0e 01 	sts	0x010E, r24
 9d4:	d4 c0       	rjmp	.+424    	; 0xb7e <ButtonPress4+0x1ec>
			}
		}
		break;
		case Press4_state1:
		if(~PINB & 0x08)
 9d6:	1b 99       	sbic	0x03, 3	; 3
 9d8:	05 c0       	rjmp	.+10     	; 0x9e4 <ButtonPress4+0x52>
		{
			while(~PINB & 0x08){}
 9da:	1b 9b       	sbis	0x03, 3	; 3
 9dc:	fe cf       	rjmp	.-4      	; 0x9da <ButtonPress4+0x48>
			Press_fourth_level = Press4_state2;
 9de:	82 e0       	ldi	r24, 0x02	; 2
 9e0:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 9e4:	19 9b       	sbis	0x03, 1	; 3
 9e6:	04 c0       	rjmp	.+8      	; 0x9f0 <ButtonPress4+0x5e>
 9e8:	1a 9b       	sbis	0x03, 2	; 3
 9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <ButtonPress4+0x5e>
 9ec:	18 99       	sbic	0x03, 0	; 3
 9ee:	bc c0       	rjmp	.+376    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 9f0:	8d e0       	ldi	r24, 0x0D	; 13
 9f2:	80 93 0e 01 	sts	0x010E, r24
 9f6:	c3 c0       	rjmp	.+390    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state2:
		if(~PINB & 0x02)
 9f8:	19 99       	sbic	0x03, 1	; 3
 9fa:	05 c0       	rjmp	.+10     	; 0xa06 <ButtonPress4+0x74>
		{
			while(~PINB & 0x02){}
 9fc:	19 9b       	sbis	0x03, 1	; 3
 9fe:	fe cf       	rjmp	.-4      	; 0x9fc <ButtonPress4+0x6a>
			Press_fourth_level = Press4_state3;
 a00:	83 e0       	ldi	r24, 0x03	; 3
 a02:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 a06:	18 9b       	sbis	0x03, 0	; 3
 a08:	04 c0       	rjmp	.+8      	; 0xa12 <ButtonPress4+0x80>
 a0a:	1a 9b       	sbis	0x03, 2	; 3
 a0c:	02 c0       	rjmp	.+4      	; 0xa12 <ButtonPress4+0x80>
 a0e:	1b 99       	sbic	0x03, 3	; 3
 a10:	ab c0       	rjmp	.+342    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 a12:	8d e0       	ldi	r24, 0x0D	; 13
 a14:	80 93 0e 01 	sts	0x010E, r24
 a18:	b2 c0       	rjmp	.+356    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state3:
		if(~PINB & 0x01)
 a1a:	18 99       	sbic	0x03, 0	; 3
 a1c:	05 c0       	rjmp	.+10     	; 0xa28 <ButtonPress4+0x96>
		{
			while(~PINB & 0x01){}
 a1e:	18 9b       	sbis	0x03, 0	; 3
 a20:	fe cf       	rjmp	.-4      	; 0xa1e <ButtonPress4+0x8c>
			Press_fourth_level = Press4_state4;
 a22:	84 e0       	ldi	r24, 0x04	; 4
 a24:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 a28:	19 9b       	sbis	0x03, 1	; 3
 a2a:	04 c0       	rjmp	.+8      	; 0xa34 <ButtonPress4+0xa2>
 a2c:	1a 9b       	sbis	0x03, 2	; 3
 a2e:	02 c0       	rjmp	.+4      	; 0xa34 <ButtonPress4+0xa2>
 a30:	1b 99       	sbic	0x03, 3	; 3
 a32:	9a c0       	rjmp	.+308    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 a34:	8d e0       	ldi	r24, 0x0D	; 13
 a36:	80 93 0e 01 	sts	0x010E, r24
 a3a:	a1 c0       	rjmp	.+322    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state4:
		if(~PINB & 0x02)
 a3c:	19 99       	sbic	0x03, 1	; 3
 a3e:	05 c0       	rjmp	.+10     	; 0xa4a <ButtonPress4+0xb8>
		{
			while(~PINB & 0x02){}
 a40:	19 9b       	sbis	0x03, 1	; 3
 a42:	fe cf       	rjmp	.-4      	; 0xa40 <ButtonPress4+0xae>
			Press_fourth_level = Press4_state5;
 a44:	85 e0       	ldi	r24, 0x05	; 5
 a46:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 a4a:	18 9b       	sbis	0x03, 0	; 3
 a4c:	04 c0       	rjmp	.+8      	; 0xa56 <ButtonPress4+0xc4>
 a4e:	1a 9b       	sbis	0x03, 2	; 3
 a50:	02 c0       	rjmp	.+4      	; 0xa56 <ButtonPress4+0xc4>
 a52:	1b 99       	sbic	0x03, 3	; 3
 a54:	89 c0       	rjmp	.+274    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 a56:	8d e0       	ldi	r24, 0x0D	; 13
 a58:	80 93 0e 01 	sts	0x010E, r24
 a5c:	90 c0       	rjmp	.+288    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state5:
		if(~PINB & 0x08)
 a5e:	1b 99       	sbic	0x03, 3	; 3
 a60:	05 c0       	rjmp	.+10     	; 0xa6c <ButtonPress4+0xda>
		{
			while(~PINB & 0x08){}
 a62:	1b 9b       	sbis	0x03, 3	; 3
 a64:	fe cf       	rjmp	.-4      	; 0xa62 <ButtonPress4+0xd0>
			Press_fourth_level = Press4_state6;
 a66:	86 e0       	ldi	r24, 0x06	; 6
 a68:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 a6c:	19 9b       	sbis	0x03, 1	; 3
 a6e:	04 c0       	rjmp	.+8      	; 0xa78 <ButtonPress4+0xe6>
 a70:	1a 9b       	sbis	0x03, 2	; 3
 a72:	02 c0       	rjmp	.+4      	; 0xa78 <ButtonPress4+0xe6>
 a74:	18 99       	sbic	0x03, 0	; 3
 a76:	78 c0       	rjmp	.+240    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 a78:	8d e0       	ldi	r24, 0x0D	; 13
 a7a:	80 93 0e 01 	sts	0x010E, r24
 a7e:	7f c0       	rjmp	.+254    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state6:
		if(~PINB & 0x02)
 a80:	19 99       	sbic	0x03, 1	; 3
 a82:	05 c0       	rjmp	.+10     	; 0xa8e <ButtonPress4+0xfc>
		{
			while(~PINB & 0x02){}
 a84:	19 9b       	sbis	0x03, 1	; 3
 a86:	fe cf       	rjmp	.-4      	; 0xa84 <ButtonPress4+0xf2>
			Press_fourth_level = Press4_state7;
 a88:	87 e0       	ldi	r24, 0x07	; 7
 a8a:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 a8e:	18 9b       	sbis	0x03, 0	; 3
 a90:	04 c0       	rjmp	.+8      	; 0xa9a <ButtonPress4+0x108>
 a92:	1a 9b       	sbis	0x03, 2	; 3
 a94:	02 c0       	rjmp	.+4      	; 0xa9a <ButtonPress4+0x108>
 a96:	1b 99       	sbic	0x03, 3	; 3
 a98:	67 c0       	rjmp	.+206    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 a9a:	8d e0       	ldi	r24, 0x0D	; 13
 a9c:	80 93 0e 01 	sts	0x010E, r24
 aa0:	6e c0       	rjmp	.+220    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state7:
		if(~PINB & 0x01)
 aa2:	18 99       	sbic	0x03, 0	; 3
 aa4:	05 c0       	rjmp	.+10     	; 0xab0 <ButtonPress4+0x11e>
		{
			while(~PINB & 0x01){}
 aa6:	18 9b       	sbis	0x03, 0	; 3
 aa8:	fe cf       	rjmp	.-4      	; 0xaa6 <ButtonPress4+0x114>
			Press_fourth_level = Press4_state8;
 aaa:	88 e0       	ldi	r24, 0x08	; 8
 aac:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 ab0:	19 9b       	sbis	0x03, 1	; 3
 ab2:	04 c0       	rjmp	.+8      	; 0xabc <ButtonPress4+0x12a>
 ab4:	1a 9b       	sbis	0x03, 2	; 3
 ab6:	02 c0       	rjmp	.+4      	; 0xabc <ButtonPress4+0x12a>
 ab8:	1b 99       	sbic	0x03, 3	; 3
 aba:	56 c0       	rjmp	.+172    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 abc:	8d e0       	ldi	r24, 0x0D	; 13
 abe:	80 93 0e 01 	sts	0x010E, r24
 ac2:	5d c0       	rjmp	.+186    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state8:
		if(~PINB & 0x08)
 ac4:	1b 99       	sbic	0x03, 3	; 3
 ac6:	05 c0       	rjmp	.+10     	; 0xad2 <ButtonPress4+0x140>
		{
			while(~PINB & 0x08){}
 ac8:	1b 9b       	sbis	0x03, 3	; 3
 aca:	fe cf       	rjmp	.-4      	; 0xac8 <ButtonPress4+0x136>
			Press_fourth_level = Press4_state9;
 acc:	89 e0       	ldi	r24, 0x09	; 9
 ace:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
 ad2:	19 9b       	sbis	0x03, 1	; 3
 ad4:	04 c0       	rjmp	.+8      	; 0xade <ButtonPress4+0x14c>
 ad6:	1a 9b       	sbis	0x03, 2	; 3
 ad8:	02 c0       	rjmp	.+4      	; 0xade <ButtonPress4+0x14c>
 ada:	18 99       	sbic	0x03, 0	; 3
 adc:	45 c0       	rjmp	.+138    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 ade:	8d e0       	ldi	r24, 0x0D	; 13
 ae0:	80 93 0e 01 	sts	0x010E, r24
 ae4:	4c c0       	rjmp	.+152    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state9:
		if(~PINB & 0x01)
 ae6:	18 99       	sbic	0x03, 0	; 3
 ae8:	05 c0       	rjmp	.+10     	; 0xaf4 <ButtonPress4+0x162>
		{
			while(~PINB & 0x01){}
 aea:	18 9b       	sbis	0x03, 0	; 3
 aec:	fe cf       	rjmp	.-4      	; 0xaea <ButtonPress4+0x158>
			Press_fourth_level = Press4_state10;
 aee:	8a e0       	ldi	r24, 0x0A	; 10
 af0:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 af4:	19 9b       	sbis	0x03, 1	; 3
 af6:	04 c0       	rjmp	.+8      	; 0xb00 <ButtonPress4+0x16e>
 af8:	1a 9b       	sbis	0x03, 2	; 3
 afa:	02 c0       	rjmp	.+4      	; 0xb00 <ButtonPress4+0x16e>
 afc:	1b 99       	sbic	0x03, 3	; 3
 afe:	34 c0       	rjmp	.+104    	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 b00:	8d e0       	ldi	r24, 0x0D	; 13
 b02:	80 93 0e 01 	sts	0x010E, r24
 b06:	3b c0       	rjmp	.+118    	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state10:
		if(~PINB & 0x02)
 b08:	19 99       	sbic	0x03, 1	; 3
 b0a:	05 c0       	rjmp	.+10     	; 0xb16 <ButtonPress4+0x184>
		{
			while(~PINB & 0x02){}
 b0c:	19 9b       	sbis	0x03, 1	; 3
 b0e:	fe cf       	rjmp	.-4      	; 0xb0c <ButtonPress4+0x17a>
			Press_fourth_level = Press4_state11;
 b10:	8b e0       	ldi	r24, 0x0B	; 11
 b12:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
 b16:	18 9b       	sbis	0x03, 0	; 3
 b18:	04 c0       	rjmp	.+8      	; 0xb22 <ButtonPress4+0x190>
 b1a:	1a 9b       	sbis	0x03, 2	; 3
 b1c:	02 c0       	rjmp	.+4      	; 0xb22 <ButtonPress4+0x190>
 b1e:	1b 99       	sbic	0x03, 3	; 3
 b20:	23 c0       	rjmp	.+70     	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 b22:	8d e0       	ldi	r24, 0x0D	; 13
 b24:	80 93 0e 01 	sts	0x010E, r24
 b28:	2a c0       	rjmp	.+84     	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		
		case Press4_state11:
		if(~PINB & 0x01)
 b2a:	18 99       	sbic	0x03, 0	; 3
 b2c:	05 c0       	rjmp	.+10     	; 0xb38 <ButtonPress4+0x1a6>
		{
			while(~PINB & 0x01){}
 b2e:	18 9b       	sbis	0x03, 0	; 3
 b30:	fe cf       	rjmp	.-4      	; 0xb2e <ButtonPress4+0x19c>
			Press_fourth_level = Press4_state12;
 b32:	8c e0       	ldi	r24, 0x0C	; 12
 b34:	80 93 0e 01 	sts	0x010E, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
 b38:	19 9b       	sbis	0x03, 1	; 3
 b3a:	04 c0       	rjmp	.+8      	; 0xb44 <ButtonPress4+0x1b2>
 b3c:	1a 9b       	sbis	0x03, 2	; 3
 b3e:	02 c0       	rjmp	.+4      	; 0xb44 <ButtonPress4+0x1b2>
 b40:	1b 99       	sbic	0x03, 3	; 3
 b42:	12 c0       	rjmp	.+36     	; 0xb68 <ButtonPress4+0x1d6>
		{
			Press_fourth_level = Error4;
 b44:	8d e0       	ldi	r24, 0x0D	; 13
 b46:	80 93 0e 01 	sts	0x010E, r24
 b4a:	19 c0       	rjmp	.+50     	; 0xb7e <ButtonPress4+0x1ec>
		}
		break;
		case Press4_state12:
		if(~PINB & 0x10)
 b4c:	1c 99       	sbic	0x03, 4	; 3
 b4e:	3b c0       	rjmp	.+118    	; 0xbc6 <ButtonPress4+0x234>
		{
			Press_fourth_level = Off4;
 b50:	8e e0       	ldi	r24, 0x0E	; 14
 b52:	80 93 0e 01 	sts	0x010E, r24
 b56:	3a c0       	rjmp	.+116    	; 0xbcc <ButtonPress4+0x23a>
		}
		break;
		case Error4:
		if(~PINB & 0x01)
 b58:	18 99       	sbic	0x03, 0	; 3
 b5a:	11 c0       	rjmp	.+34     	; 0xb7e <ButtonPress4+0x1ec>
		{
			while(~PINB & 0x01){}
 b5c:	18 9b       	sbis	0x03, 0	; 3
 b5e:	fe cf       	rjmp	.-4      	; 0xb5c <ButtonPress4+0x1ca>
			Press_fourth_level = Press4_state1;
 b60:	81 e0       	ldi	r24, 0x01	; 1
 b62:	80 93 0e 01 	sts	0x010E, r24
 b66:	0e c0       	rjmp	.+28     	; 0xb84 <ButtonPress4+0x1f2>
		}
	}
	switch(Press_fourth_level)
 b68:	80 91 0e 01 	lds	r24, 0x010E
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	fc 01       	movw	r30, r24
 b70:	31 97       	sbiw	r30, 0x01	; 1
 b72:	ee 30       	cpi	r30, 0x0E	; 14
 b74:	f1 05       	cpc	r31, r1
 b76:	70 f5       	brcc	.+92     	; 0xbd4 <ButtonPress4+0x242>
 b78:	eb 54       	subi	r30, 0x4B	; 75
 b7a:	ff 4f       	sbci	r31, 0xFF	; 255
 b7c:	79 c1       	rjmp	.+754    	; 0xe70 <__tablejump2__>
	{
		case Error4:
		PORTA = 0x10;
 b7e:	80 e1       	ldi	r24, 0x10	; 16
 b80:	82 b9       	out	0x02, r24	; 2
		break;
 b82:	08 95       	ret
		case Press4_state1:
		PORTA = 0x01;
 b84:	81 e0       	ldi	r24, 0x01	; 1
 b86:	82 b9       	out	0x02, r24	; 2
		break;
 b88:	08 95       	ret
		case Press4_state2:
		PORTA = 0x08;
 b8a:	88 e0       	ldi	r24, 0x08	; 8
 b8c:	82 b9       	out	0x02, r24	; 2
		break;
 b8e:	08 95       	ret
		case Press4_state3:
		PORTA = 0x02;
 b90:	82 e0       	ldi	r24, 0x02	; 2
 b92:	82 b9       	out	0x02, r24	; 2
		break;
 b94:	08 95       	ret
		case Press4_state4:
		PORTA = 0x01;
 b96:	81 e0       	ldi	r24, 0x01	; 1
 b98:	82 b9       	out	0x02, r24	; 2
		break;
 b9a:	08 95       	ret
		case Press4_state5:
		PORTA = 0x02;
 b9c:	82 e0       	ldi	r24, 0x02	; 2
 b9e:	82 b9       	out	0x02, r24	; 2
		break;
 ba0:	08 95       	ret
		case Press4_state6:
		PORTA = 0x08;
 ba2:	88 e0       	ldi	r24, 0x08	; 8
 ba4:	82 b9       	out	0x02, r24	; 2
		break;
 ba6:	08 95       	ret
		case Press4_state7:
		PORTA = 0x02;
 ba8:	82 e0       	ldi	r24, 0x02	; 2
 baa:	82 b9       	out	0x02, r24	; 2
		break;
 bac:	08 95       	ret
		case Press4_state8:
		PORTA = 0x01;
 bae:	81 e0       	ldi	r24, 0x01	; 1
 bb0:	82 b9       	out	0x02, r24	; 2
		break;
 bb2:	08 95       	ret
		case Press4_state9:
		PORTA = 0x08;
 bb4:	88 e0       	ldi	r24, 0x08	; 8
 bb6:	82 b9       	out	0x02, r24	; 2
		break;
 bb8:	08 95       	ret
		case Press4_state10:
		PORTA = 0x01;
 bba:	81 e0       	ldi	r24, 0x01	; 1
 bbc:	82 b9       	out	0x02, r24	; 2
		break;
 bbe:	08 95       	ret
		case Press4_state11:
		PORTA = 0x02;
 bc0:	82 e0       	ldi	r24, 0x02	; 2
 bc2:	82 b9       	out	0x02, r24	; 2
		break;
 bc4:	08 95       	ret
		case Press4_state12:
		PORTA = 0x01;
 bc6:	81 e0       	ldi	r24, 0x01	; 1
 bc8:	82 b9       	out	0x02, r24	; 2
		break;
 bca:	08 95       	ret
		case Off4:
		PORTA = 0x00;
 bcc:	12 b8       	out	0x02, r1	; 2
		global_g = 7;
 bce:	87 e0       	ldi	r24, 0x07	; 7
 bd0:	80 93 04 01 	sts	0x0104, r24
 bd4:	08 95       	ret

00000bd6 <main>:
		break;
	}
}	

int main(void)
{
 bd6:	cf 92       	push	r12
 bd8:	df 92       	push	r13
 bda:	ef 92       	push	r14
 bdc:	ff 92       	push	r15
	DDRA = 0xff;	PORTA = 0x00;
 bde:	8f ef       	ldi	r24, 0xFF	; 255
 be0:	81 b9       	out	0x01, r24	; 1
 be2:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;
 be4:	14 b8       	out	0x04, r1	; 4
 be6:	85 b9       	out	0x05, r24	; 5
	
	if(global_g == 0)
 be8:	80 91 04 01 	lds	r24, 0x0104
 bec:	81 11       	cpse	r24, r1
 bee:	39 c1       	rjmp	.+626    	; 0xe62 <main+0x28c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 bf0:	0f 2e       	mov	r0, r31
 bf2:	fc eb       	ldi	r31, 0xBC	; 188
 bf4:	cf 2e       	mov	r12, r31
 bf6:	f2 e0       	ldi	r31, 0x02	; 2
 bf8:	df 2e       	mov	r13, r31
 bfa:	e1 2c       	mov	r14, r1
 bfc:	f1 2c       	mov	r15, r1
 bfe:	f0 2d       	mov	r31, r0
 c00:	c0 92 00 01 	sts	0x0100, r12
 c04:	d0 92 01 01 	sts	0x0101, r13
 c08:	e0 92 02 01 	sts	0x0102, r14
 c0c:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 c10:	c0 92 05 01 	sts	0x0105, r12
 c14:	d0 92 06 01 	sts	0x0106, r13
 c18:	e0 92 07 01 	sts	0x0107, r14
 c1c:	f0 92 08 01 	sts	0x0108, r15
	if(global_g == 0)
	{
		while(global_g == 0)
		{
			TimerSet(700);
			TimerOn();
 c20:	d0 da       	rcall	.-2656   	; 0x1c2 <TimerOn>
			TickFct_State_machine_1();
 c22:	2f db       	rcall	.-2466   	; 0x282 <TickFct_State_machine_1>
			while(!TimerFlag);
 c24:	80 91 09 01 	lds	r24, 0x0109
 c28:	88 23       	and	r24, r24
 c2a:	e1 f3       	breq	.-8      	; 0xc24 <main+0x4e>
			TimerFlag = 0;	
 c2c:	10 92 09 01 	sts	0x0109, r1
	DDRA = 0xff;	PORTA = 0x00;
	DDRB = 0x00;	PORTB = 0xFF;
	
	if(global_g == 0)
	{
		while(global_g == 0)
 c30:	80 91 04 01 	lds	r24, 0x0104
 c34:	88 23       	and	r24, r24
 c36:	21 f3       	breq	.-56     	; 0xc00 <main+0x2a>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
 c38:	81 30       	cpi	r24, 0x01	; 1
 c3a:	19 f5       	brne	.+70     	; 0xc82 <main+0xac>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 c3c:	0f 2e       	mov	r0, r31
 c3e:	f8 ec       	ldi	r31, 0xC8	; 200
 c40:	cf 2e       	mov	r12, r31
 c42:	d1 2c       	mov	r13, r1
 c44:	e1 2c       	mov	r14, r1
 c46:	f1 2c       	mov	r15, r1
 c48:	f0 2d       	mov	r31, r0
 c4a:	c0 92 00 01 	sts	0x0100, r12
 c4e:	d0 92 01 01 	sts	0x0101, r13
 c52:	e0 92 02 01 	sts	0x0102, r14
 c56:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 c5a:	c0 92 05 01 	sts	0x0105, r12
 c5e:	d0 92 06 01 	sts	0x0106, r13
 c62:	e0 92 07 01 	sts	0x0107, r14
 c66:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;	
		}
		while(global_g == 1)
		{
			TimerSet(200);
			TimerOn();
 c6a:	ab da       	rcall	.-2730   	; 0x1c2 <TimerOn>
			ButtonPress();
 c6c:	51 db       	rcall	.-2398   	; 0x310 <ButtonPress>
			while(!TimerFlag);
 c6e:	80 91 09 01 	lds	r24, 0x0109
 c72:	88 23       	and	r24, r24
 c74:	e1 f3       	breq	.-8      	; 0xc6e <main+0x98>
			TimerFlag = 0;
 c76:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
 c7a:	80 91 04 01 	lds	r24, 0x0104
 c7e:	81 30       	cpi	r24, 0x01	; 1
 c80:	21 f3       	breq	.-56     	; 0xc4a <main+0x74>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
 c82:	80 91 04 01 	lds	r24, 0x0104
 c86:	82 30       	cpi	r24, 0x02	; 2
 c88:	21 f5       	brne	.+72     	; 0xcd2 <main+0xfc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 c8a:	0f 2e       	mov	r0, r31
 c8c:	f8 ee       	ldi	r31, 0xE8	; 232
 c8e:	cf 2e       	mov	r12, r31
 c90:	f3 e0       	ldi	r31, 0x03	; 3
 c92:	df 2e       	mov	r13, r31
 c94:	e1 2c       	mov	r14, r1
 c96:	f1 2c       	mov	r15, r1
 c98:	f0 2d       	mov	r31, r0
 c9a:	c0 92 00 01 	sts	0x0100, r12
 c9e:	d0 92 01 01 	sts	0x0101, r13
 ca2:	e0 92 02 01 	sts	0x0102, r14
 ca6:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 caa:	c0 92 05 01 	sts	0x0105, r12
 cae:	d0 92 06 01 	sts	0x0106, r13
 cb2:	e0 92 07 01 	sts	0x0107, r14
 cb6:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 2)
		{
			TimerSet(1000);
			TimerOn();
 cba:	83 da       	rcall	.-2810   	; 0x1c2 <TimerOn>
			TickFct_Machine2();
 cbc:	b6 db       	rcall	.-2196   	; 0x42a <TickFct_Machine2>
			while(!TimerFlag);
 cbe:	80 91 09 01 	lds	r24, 0x0109
 cc2:	88 23       	and	r24, r24
 cc4:	e1 f3       	breq	.-8      	; 0xcbe <main+0xe8>
			TimerFlag = 0;
 cc6:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
 cca:	80 91 04 01 	lds	r24, 0x0104
 cce:	82 30       	cpi	r24, 0x02	; 2
 cd0:	21 f3       	breq	.-56     	; 0xc9a <main+0xc4>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
 cd2:	80 91 04 01 	lds	r24, 0x0104
 cd6:	83 30       	cpi	r24, 0x03	; 3
 cd8:	21 f5       	brne	.+72     	; 0xd22 <main+0x14c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 cda:	0f 2e       	mov	r0, r31
 cdc:	f0 e9       	ldi	r31, 0x90	; 144
 cde:	cf 2e       	mov	r12, r31
 ce0:	dd 24       	eor	r13, r13
 ce2:	d3 94       	inc	r13
 ce4:	e1 2c       	mov	r14, r1
 ce6:	f1 2c       	mov	r15, r1
 ce8:	f0 2d       	mov	r31, r0
 cea:	c0 92 00 01 	sts	0x0100, r12
 cee:	d0 92 01 01 	sts	0x0101, r13
 cf2:	e0 92 02 01 	sts	0x0102, r14
 cf6:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 cfa:	c0 92 05 01 	sts	0x0105, r12
 cfe:	d0 92 06 01 	sts	0x0106, r13
 d02:	e0 92 07 01 	sts	0x0107, r14
 d06:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 3)
		{
			TimerSet(400);
			TimerOn();
 d0a:	5b da       	rcall	.-2890   	; 0x1c2 <TimerOn>
			ButtonPress2();
 d0c:	e0 db       	rcall	.-2112   	; 0x4ce <ButtonPress2>
			while(!TimerFlag);
 d0e:	80 91 09 01 	lds	r24, 0x0109
 d12:	88 23       	and	r24, r24
 d14:	e1 f3       	breq	.-8      	; 0xd0e <main+0x138>
			TimerFlag = 0;
 d16:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
 d1a:	80 91 04 01 	lds	r24, 0x0104
 d1e:	83 30       	cpi	r24, 0x03	; 3
 d20:	21 f3       	breq	.-56     	; 0xcea <main+0x114>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
 d22:	80 91 04 01 	lds	r24, 0x0104
 d26:	84 30       	cpi	r24, 0x04	; 4
 d28:	21 f5       	brne	.+72     	; 0xd72 <main+0x19c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 d2a:	0f 2e       	mov	r0, r31
 d2c:	f8 ee       	ldi	r31, 0xE8	; 232
 d2e:	cf 2e       	mov	r12, r31
 d30:	f3 e0       	ldi	r31, 0x03	; 3
 d32:	df 2e       	mov	r13, r31
 d34:	e1 2c       	mov	r14, r1
 d36:	f1 2c       	mov	r15, r1
 d38:	f0 2d       	mov	r31, r0
 d3a:	c0 92 00 01 	sts	0x0100, r12
 d3e:	d0 92 01 01 	sts	0x0101, r13
 d42:	e0 92 02 01 	sts	0x0102, r14
 d46:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 d4a:	c0 92 05 01 	sts	0x0105, r12
 d4e:	d0 92 06 01 	sts	0x0106, r13
 d52:	e0 92 07 01 	sts	0x0107, r14
 d56:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 4)
		{
			TimerSet(1000);
			TimerOn();
 d5a:	33 da       	rcall	.-2970   	; 0x1c2 <TimerOn>
			TickFct_Machine3();
 d5c:	57 dc       	rcall	.-1874   	; 0x60c <TickFct_Machine3>
			while(!TimerFlag);
 d5e:	80 91 09 01 	lds	r24, 0x0109
 d62:	88 23       	and	r24, r24
 d64:	e1 f3       	breq	.-8      	; 0xd5e <main+0x188>
			TimerFlag = 0;
 d66:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
 d6a:	80 91 04 01 	lds	r24, 0x0104
 d6e:	84 30       	cpi	r24, 0x04	; 4
 d70:	21 f3       	breq	.-56     	; 0xd3a <main+0x164>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
 d72:	80 91 04 01 	lds	r24, 0x0104
 d76:	85 30       	cpi	r24, 0x05	; 5
 d78:	21 f5       	brne	.+72     	; 0xdc2 <main+0x1ec>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 d7a:	0f 2e       	mov	r0, r31
 d7c:	f0 e9       	ldi	r31, 0x90	; 144
 d7e:	cf 2e       	mov	r12, r31
 d80:	dd 24       	eor	r13, r13
 d82:	d3 94       	inc	r13
 d84:	e1 2c       	mov	r14, r1
 d86:	f1 2c       	mov	r15, r1
 d88:	f0 2d       	mov	r31, r0
 d8a:	c0 92 00 01 	sts	0x0100, r12
 d8e:	d0 92 01 01 	sts	0x0101, r13
 d92:	e0 92 02 01 	sts	0x0102, r14
 d96:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 d9a:	c0 92 05 01 	sts	0x0105, r12
 d9e:	d0 92 06 01 	sts	0x0106, r13
 da2:	e0 92 07 01 	sts	0x0107, r14
 da6:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 5)
		{
			TimerSet(400);
			TimerOn();
 daa:	0b da       	rcall	.-3050   	; 0x1c2 <TimerOn>
			ButtonPress3();
 dac:	92 dc       	rcall	.-1756   	; 0x6d2 <ButtonPress3>
			while(!TimerFlag);
 dae:	80 91 09 01 	lds	r24, 0x0109
 db2:	88 23       	and	r24, r24
 db4:	e1 f3       	breq	.-8      	; 0xdae <main+0x1d8>
			TimerFlag = 0;
 db6:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
 dba:	80 91 04 01 	lds	r24, 0x0104
 dbe:	85 30       	cpi	r24, 0x05	; 5
 dc0:	21 f3       	breq	.-56     	; 0xd8a <main+0x1b4>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
 dc2:	80 91 04 01 	lds	r24, 0x0104
 dc6:	86 30       	cpi	r24, 0x06	; 6
 dc8:	21 f5       	brne	.+72     	; 0xe12 <main+0x23c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 dca:	0f 2e       	mov	r0, r31
 dcc:	f8 ee       	ldi	r31, 0xE8	; 232
 dce:	cf 2e       	mov	r12, r31
 dd0:	f3 e0       	ldi	r31, 0x03	; 3
 dd2:	df 2e       	mov	r13, r31
 dd4:	e1 2c       	mov	r14, r1
 dd6:	f1 2c       	mov	r15, r1
 dd8:	f0 2d       	mov	r31, r0
 dda:	c0 92 00 01 	sts	0x0100, r12
 dde:	d0 92 01 01 	sts	0x0101, r13
 de2:	e0 92 02 01 	sts	0x0102, r14
 de6:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 dea:	c0 92 05 01 	sts	0x0105, r12
 dee:	d0 92 06 01 	sts	0x0106, r13
 df2:	e0 92 07 01 	sts	0x0107, r14
 df6:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 6)
		{
			TimerSet(1000);
			TimerOn();
 dfa:	e3 d9       	rcall	.-3130   	; 0x1c2 <TimerOn>
			TickFct_Machine4();
 dfc:	50 dd       	rcall	.-1376   	; 0x89e <TickFct_Machine4>
			while(!TimerFlag);
 dfe:	80 91 09 01 	lds	r24, 0x0109
 e02:	88 23       	and	r24, r24
 e04:	e1 f3       	breq	.-8      	; 0xdfe <main+0x228>
			TimerFlag = 0;
 e06:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
 e0a:	80 91 04 01 	lds	r24, 0x0104
 e0e:	86 30       	cpi	r24, 0x06	; 6
 e10:	21 f3       	breq	.-56     	; 0xdda <main+0x204>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
 e12:	80 91 04 01 	lds	r24, 0x0104
 e16:	87 30       	cpi	r24, 0x07	; 7
 e18:	21 f5       	brne	.+72     	; 0xe62 <main+0x28c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M) 
{
	_avr_timer_M = M;
 e1a:	0f 2e       	mov	r0, r31
 e1c:	f0 e9       	ldi	r31, 0x90	; 144
 e1e:	cf 2e       	mov	r12, r31
 e20:	dd 24       	eor	r13, r13
 e22:	d3 94       	inc	r13
 e24:	e1 2c       	mov	r14, r1
 e26:	f1 2c       	mov	r15, r1
 e28:	f0 2d       	mov	r31, r0
 e2a:	c0 92 00 01 	sts	0x0100, r12
 e2e:	d0 92 01 01 	sts	0x0101, r13
 e32:	e0 92 02 01 	sts	0x0102, r14
 e36:	f0 92 03 01 	sts	0x0103, r15
	_avr_timer_cntcurr = _avr_timer_M;
 e3a:	c0 92 05 01 	sts	0x0105, r12
 e3e:	d0 92 06 01 	sts	0x0106, r13
 e42:	e0 92 07 01 	sts	0x0107, r14
 e46:	f0 92 08 01 	sts	0x0108, r15
			TimerFlag = 0;
		}
		while(global_g == 7)
		{
			TimerSet(400);
			TimerOn();
 e4a:	bb d9       	rcall	.-3210   	; 0x1c2 <TimerOn>
			ButtonPress4();
 e4c:	a2 dd       	rcall	.-1212   	; 0x992 <ButtonPress4>
			while(!TimerFlag);
 e4e:	80 91 09 01 	lds	r24, 0x0109
 e52:	88 23       	and	r24, r24
 e54:	e1 f3       	breq	.-8      	; 0xe4e <main+0x278>
			TimerFlag = 0;
 e56:	10 92 09 01 	sts	0x0109, r1
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
 e5a:	80 91 04 01 	lds	r24, 0x0104
 e5e:	87 30       	cpi	r24, 0x07	; 7
 e60:	21 f3       	breq	.-56     	; 0xe2a <main+0x254>
			TimerFlag = 0;
		}
	}
	return 0;
		
 e62:	80 e0       	ldi	r24, 0x00	; 0
 e64:	90 e0       	ldi	r25, 0x00	; 0
 e66:	ff 90       	pop	r15
 e68:	ef 90       	pop	r14
 e6a:	df 90       	pop	r13
 e6c:	cf 90       	pop	r12
 e6e:	08 95       	ret

00000e70 <__tablejump2__>:
 e70:	ee 0f       	add	r30, r30
 e72:	ff 1f       	adc	r31, r31

00000e74 <__tablejump__>:
 e74:	05 90       	lpm	r0, Z+
 e76:	f4 91       	lpm	r31, Z
 e78:	e0 2d       	mov	r30, r0
 e7a:	09 94       	ijmp

00000e7c <_exit>:
 e7c:	f8 94       	cli

00000e7e <__stop_program>:
 e7e:	ff cf       	rjmp	.-2      	; 0xe7e <__stop_program>
