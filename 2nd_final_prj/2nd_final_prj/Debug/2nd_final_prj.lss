
2nd_final_prj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800100  00001f9a  0000202e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f9a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008001ea  008001ea  00002118  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002118  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00002148  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001439  00000000  00000000  00002238  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000028c  00000000  00000000  00003671  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001e84  00000000  00000000  000038fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000244  00000000  00000000  00005784  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000874  00000000  00000000  000059c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000079a  00000000  00000000  0000623c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  000069d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	04 c1       	rjmp	.+520    	; 0x20a <__ctors_end>
       2:	00 00       	nop
       4:	21 c1       	rjmp	.+578    	; 0x248 <__bad_interrupt>
       6:	00 00       	nop
       8:	1f c1       	rjmp	.+574    	; 0x248 <__bad_interrupt>
       a:	00 00       	nop
       c:	1d c1       	rjmp	.+570    	; 0x248 <__bad_interrupt>
       e:	00 00       	nop
      10:	1b c1       	rjmp	.+566    	; 0x248 <__bad_interrupt>
      12:	00 00       	nop
      14:	19 c1       	rjmp	.+562    	; 0x248 <__bad_interrupt>
      16:	00 00       	nop
      18:	17 c1       	rjmp	.+558    	; 0x248 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	15 c1       	rjmp	.+554    	; 0x248 <__bad_interrupt>
      1e:	00 00       	nop
      20:	13 c1       	rjmp	.+550    	; 0x248 <__bad_interrupt>
      22:	00 00       	nop
      24:	11 c1       	rjmp	.+546    	; 0x248 <__bad_interrupt>
      26:	00 00       	nop
      28:	0f c1       	rjmp	.+542    	; 0x248 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0d c1       	rjmp	.+538    	; 0x248 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0b c1       	rjmp	.+534    	; 0x248 <__bad_interrupt>
      32:	00 00       	nop
      34:	8b c1       	rjmp	.+790    	; 0x34c <__vector_13>
      36:	00 00       	nop
      38:	07 c1       	rjmp	.+526    	; 0x248 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	05 c1       	rjmp	.+522    	; 0x248 <__bad_interrupt>
      3e:	00 00       	nop
      40:	03 c1       	rjmp	.+518    	; 0x248 <__bad_interrupt>
      42:	00 00       	nop
      44:	01 c1       	rjmp	.+514    	; 0x248 <__bad_interrupt>
      46:	00 00       	nop
      48:	ff c0       	rjmp	.+510    	; 0x248 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fd c0       	rjmp	.+506    	; 0x248 <__bad_interrupt>
      4e:	00 00       	nop
      50:	fb c0       	rjmp	.+502    	; 0x248 <__bad_interrupt>
      52:	00 00       	nop
      54:	f9 c0       	rjmp	.+498    	; 0x248 <__bad_interrupt>
      56:	00 00       	nop
      58:	f7 c0       	rjmp	.+494    	; 0x248 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f5 c0       	rjmp	.+490    	; 0x248 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f3 c0       	rjmp	.+486    	; 0x248 <__bad_interrupt>
      62:	00 00       	nop
      64:	f1 c0       	rjmp	.+482    	; 0x248 <__bad_interrupt>
      66:	00 00       	nop
      68:	ef c0       	rjmp	.+478    	; 0x248 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ed c0       	rjmp	.+474    	; 0x248 <__bad_interrupt>
      6e:	00 00       	nop
      70:	eb c0       	rjmp	.+470    	; 0x248 <__bad_interrupt>
      72:	00 00       	nop
      74:	e9 c0       	rjmp	.+466    	; 0x248 <__bad_interrupt>
      76:	00 00       	nop
      78:	e7 c0       	rjmp	.+462    	; 0x248 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e5 c0       	rjmp	.+458    	; 0x248 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e3 c0       	rjmp	.+454    	; 0x248 <__bad_interrupt>
      82:	00 00       	nop
      84:	e1 c0       	rjmp	.+450    	; 0x248 <__bad_interrupt>
      86:	00 00       	nop
      88:	df c0       	rjmp	.+446    	; 0x248 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	39 04       	cpc	r3, r9
      8e:	4d 04       	cpc	r4, r13
      90:	51 04       	cpc	r5, r1
      92:	55 04       	cpc	r5, r5
      94:	59 04       	cpc	r5, r9
      96:	5d 04       	cpc	r5, r13
      98:	61 04       	cpc	r6, r1
      9a:	76 04       	cpc	r7, r6
      9c:	78 04       	cpc	r7, r8
      9e:	7b 04       	cpc	r7, r11
      a0:	7e 04       	cpc	r7, r14
      a2:	81 04       	cpc	r8, r1
      a4:	84 04       	cpc	r8, r4
      a6:	87 04       	cpc	r8, r7
      a8:	96 04       	cpc	r9, r6
      aa:	b8 04       	cpc	r11, r8
      ac:	da 04       	cpc	r13, r10
      ae:	fc 04       	cpc	r15, r12
      b0:	1e 05       	cpc	r17, r14
      b2:	40 05       	cpc	r20, r0
      b4:	62 05       	cpc	r22, r2
      b6:	7f 05       	cpc	r23, r15
      b8:	86 05       	cpc	r24, r6
      ba:	8d 05       	cpc	r24, r13
      bc:	94 05       	cpc	r25, r4
      be:	9b 05       	cpc	r25, r11
      c0:	a2 05       	cpc	r26, r2
      c2:	78 05       	cpc	r23, r8
      c4:	ac 05       	cpc	r26, r12
      c6:	c0 05       	cpc	r28, r0
      c8:	d3 05       	cpc	r29, r3
      ca:	d7 05       	cpc	r29, r7
      cc:	db 05       	cpc	r29, r11
      ce:	df 05       	cpc	r29, r15
      d0:	e3 05       	cpc	r30, r3
      d2:	e7 05       	cpc	r30, r7
      d4:	eb 05       	cpc	r30, r11
      d6:	ef 05       	cpc	r30, r15
      d8:	f3 05       	cpc	r31, r3
      da:	01 06       	cpc	r0, r17
      dc:	03 06       	cpc	r0, r19
      de:	06 06       	cpc	r0, r22
      e0:	09 06       	cpc	r0, r25
      e2:	0c 06       	cpc	r0, r28
      e4:	0f 06       	cpc	r0, r31
      e6:	12 06       	cpc	r1, r18
      e8:	15 06       	cpc	r1, r21
      ea:	18 06       	cpc	r1, r24
      ec:	1b 06       	cpc	r1, r27
      ee:	31 06       	cpc	r3, r17
      f0:	61 06       	cpc	r6, r17
      f2:	83 06       	cpc	r8, r19
      f4:	a5 06       	cpc	r10, r21
      f6:	c7 06       	cpc	r12, r23
      f8:	e9 06       	cpc	r14, r25
      fa:	0b 07       	cpc	r16, r27
      fc:	2d 07       	cpc	r18, r29
      fe:	4f 07       	cpc	r20, r31
     100:	71 07       	cpc	r23, r17
     102:	59 06       	cpc	r5, r25
     104:	8b 07       	cpc	r24, r27
     106:	92 07       	cpc	r25, r18
     108:	99 07       	cpc	r25, r25
     10a:	a0 07       	cpc	r26, r16
     10c:	a7 07       	cpc	r26, r23
     10e:	ae 07       	cpc	r26, r30
     110:	b5 07       	cpc	r27, r21
     112:	bc 07       	cpc	r27, r28
     114:	c3 07       	cpc	r28, r19
     116:	84 07       	cpc	r24, r20
     118:	ce 07       	cpc	r28, r30
     11a:	e2 07       	cpc	r30, r18
     11c:	f5 07       	cpc	r31, r21
     11e:	f9 07       	cpc	r31, r25
     120:	fd 07       	cpc	r31, r29
     122:	01 08       	sbc	r0, r1
     124:	05 08       	sbc	r0, r5
     126:	09 08       	sbc	r0, r9
     128:	0d 08       	sbc	r0, r13
     12a:	11 08       	sbc	r1, r1
     12c:	15 08       	sbc	r1, r5
     12e:	19 08       	sbc	r1, r9
     130:	1d 08       	sbc	r1, r13
     132:	21 08       	sbc	r2, r1
     134:	2e 08       	sbc	r2, r14
     136:	30 08       	sbc	r3, r0
     138:	33 08       	sbc	r3, r3
     13a:	36 08       	sbc	r3, r6
     13c:	39 08       	sbc	r3, r9
     13e:	3c 08       	sbc	r3, r12
     140:	3f 08       	sbc	r3, r15
     142:	42 08       	sbc	r4, r2
     144:	45 08       	sbc	r4, r5
     146:	48 08       	sbc	r4, r8
     148:	4b 08       	sbc	r4, r11
     14a:	4e 08       	sbc	r4, r14
     14c:	51 08       	sbc	r5, r1
     14e:	66 08       	sbc	r6, r6
     150:	8e 08       	sbc	r8, r14
     152:	b0 08       	sbc	r11, r0
     154:	d2 08       	sbc	r13, r2
     156:	f4 08       	sbc	r15, r4
     158:	16 09       	sbc	r17, r6
     15a:	38 09       	sbc	r19, r8
     15c:	5a 09       	sbc	r21, r10
     15e:	7c 09       	sbc	r23, r12
     160:	9e 09       	sbc	r25, r14
     162:	c0 09       	sbc	r28, r0
     164:	e2 09       	sbc	r30, r2
     166:	04 0a       	sbc	r0, r20
     168:	0a 0a       	sbc	r0, r26
     16a:	25 0a       	sbc	r2, r21
     16c:	2c 0a       	sbc	r2, r28
     16e:	33 0a       	sbc	r3, r19
     170:	3a 0a       	sbc	r3, r26
     172:	41 0a       	sbc	r4, r17
     174:	48 0a       	sbc	r4, r24
     176:	4f 0a       	sbc	r4, r31
     178:	56 0a       	sbc	r5, r22
     17a:	5d 0a       	sbc	r5, r29
     17c:	64 0a       	sbc	r6, r20
     17e:	6b 0a       	sbc	r6, r27
     180:	72 0a       	sbc	r7, r18
     182:	1e 0a       	sbc	r1, r30
     184:	7e 0a       	sbc	r7, r30
     186:	93 0a       	sbc	r9, r19
     188:	a8 0a       	sbc	r10, r24
     18a:	ac 0a       	sbc	r10, r28
     18c:	b0 0a       	sbc	r11, r16
     18e:	b4 0a       	sbc	r11, r20
     190:	b8 0a       	sbc	r11, r24
     192:	bc 0a       	sbc	r11, r28
     194:	c0 0a       	sbc	r12, r16
     196:	c4 0a       	sbc	r12, r20
     198:	c8 0a       	sbc	r12, r24
     19a:	cc 0a       	sbc	r12, r28
     19c:	d0 0a       	sbc	r13, r16
     19e:	d4 0a       	sbc	r13, r20
     1a0:	d8 0a       	sbc	r13, r24
     1a2:	dc 0a       	sbc	r13, r28
     1a4:	e0 0a       	sbc	r14, r16
     1a6:	ed 0a       	sbc	r14, r29
     1a8:	ef 0a       	sbc	r14, r31
     1aa:	f2 0a       	sbc	r15, r18
     1ac:	f5 0a       	sbc	r15, r21
     1ae:	f8 0a       	sbc	r15, r24
     1b0:	fb 0a       	sbc	r15, r27
     1b2:	fe 0a       	sbc	r15, r30
     1b4:	01 0b       	sbc	r16, r17
     1b6:	04 0b       	sbc	r16, r20
     1b8:	07 0b       	sbc	r16, r23
     1ba:	0a 0b       	sbc	r16, r26
     1bc:	0d 0b       	sbc	r16, r29
     1be:	10 0b       	sbc	r17, r16
     1c0:	13 0b       	sbc	r17, r19
     1c2:	16 0b       	sbc	r17, r22
     1c4:	19 0b       	sbc	r17, r25
     1c6:	2f 0b       	sbc	r18, r31
     1c8:	57 0b       	sbc	r21, r23
     1ca:	79 0b       	sbc	r23, r25
     1cc:	9b 0b       	sbc	r25, r27
     1ce:	bd 0b       	sbc	r27, r29
     1d0:	df 0b       	sbc	r29, r31
     1d2:	01 0c       	add	r0, r1
     1d4:	23 0c       	add	r2, r3
     1d6:	45 0c       	add	r4, r5
     1d8:	67 0c       	add	r6, r7
     1da:	89 0c       	add	r8, r9
     1dc:	ab 0c       	add	r10, r11
     1de:	cd 0c       	add	r12, r13
     1e0:	ef 0c       	add	r14, r15
     1e2:	11 0d       	add	r17, r1
     1e4:	33 0d       	add	r19, r3
     1e6:	39 0d       	add	r19, r9
     1e8:	56 0d       	add	r21, r6
     1ea:	5f 0d       	add	r21, r15
     1ec:	68 0d       	add	r22, r8
     1ee:	71 0d       	add	r23, r1
     1f0:	7a 0d       	add	r23, r10
     1f2:	83 0d       	add	r24, r3
     1f4:	8c 0d       	add	r24, r12
     1f6:	95 0d       	add	r25, r5
     1f8:	9e 0d       	add	r25, r14
     1fa:	a7 0d       	add	r26, r7
     1fc:	b0 0d       	add	r27, r0
     1fe:	b9 0d       	add	r27, r9
     200:	c2 0d       	add	r28, r2
     202:	cb 0d       	add	r28, r11
     204:	d4 0d       	add	r29, r4
     206:	4d 0d       	add	r20, r13
     208:	e2 0d       	add	r30, r2

0000020a <__ctors_end>:
     20a:	11 24       	eor	r1, r1
     20c:	1f be       	out	0x3f, r1	; 63
     20e:	cf ef       	ldi	r28, 0xFF	; 255
     210:	d0 e4       	ldi	r29, 0x40	; 64
     212:	de bf       	out	0x3e, r29	; 62
     214:	cd bf       	out	0x3d, r28	; 61

00000216 <__do_copy_data>:
     216:	11 e0       	ldi	r17, 0x01	; 1
     218:	a0 e0       	ldi	r26, 0x00	; 0
     21a:	b1 e0       	ldi	r27, 0x01	; 1
     21c:	ea e9       	ldi	r30, 0x9A	; 154
     21e:	ff e1       	ldi	r31, 0x1F	; 31
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0b bf       	out	0x3b, r16	; 59
     224:	02 c0       	rjmp	.+4      	; 0x22a <__do_copy_data+0x14>
     226:	07 90       	elpm	r0, Z+
     228:	0d 92       	st	X+, r0
     22a:	aa 3e       	cpi	r26, 0xEA	; 234
     22c:	b1 07       	cpc	r27, r17
     22e:	d9 f7       	brne	.-10     	; 0x226 <__do_copy_data+0x10>

00000230 <__do_clear_bss>:
     230:	21 e0       	ldi	r18, 0x01	; 1
     232:	aa ee       	ldi	r26, 0xEA	; 234
     234:	b1 e0       	ldi	r27, 0x01	; 1
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	ac 3f       	cpi	r26, 0xFC	; 252
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <main>
     244:	0c 94 cb 0f 	jmp	0x1f96	; 0x1f96 <_exit>

00000248 <__bad_interrupt>:
     248:	db ce       	rjmp	.-586    	; 0x0 <__vectors>

0000024a <delay_ms>:
	else {
		data = simon_SevenSeg(0);
	}
	transmit_data(data);
	PORTD = (PORTD & 0xF8) | 0x01;
}
     24a:	18 16       	cp	r1, r24
     24c:	19 06       	cpc	r1, r25
     24e:	9c f4       	brge	.+38     	; 0x276 <delay_ms+0x2c>
     250:	40 e0       	ldi	r20, 0x00	; 0
     252:	50 e0       	ldi	r21, 0x00	; 0
     254:	77 e0       	ldi	r23, 0x07	; 7
     256:	63 e0       	ldi	r22, 0x03	; 3
     258:	0b c0       	rjmp	.+22     	; 0x270 <delay_ms+0x26>
     25a:	00 00       	nop
     25c:	21 50       	subi	r18, 0x01	; 1
     25e:	31 09       	sbc	r19, r1
     260:	21 15       	cp	r18, r1
     262:	31 05       	cpc	r19, r1
     264:	d1 f7       	brne	.-12     	; 0x25a <delay_ms+0x10>
     266:	4f 5f       	subi	r20, 0xFF	; 255
     268:	5f 4f       	sbci	r21, 0xFF	; 255
     26a:	48 17       	cp	r20, r24
     26c:	59 07       	cpc	r21, r25
     26e:	19 f0       	breq	.+6      	; 0x276 <delay_ms+0x2c>
     270:	27 2f       	mov	r18, r23
     272:	36 2f       	mov	r19, r22
     274:	f2 cf       	rjmp	.-28     	; 0x25a <delay_ms+0x10>
     276:	08 95       	ret

00000278 <LCD_WriteCommand>:
     278:	5e 98       	cbi	0x0b, 6	; 11
     27a:	88 b9       	out	0x08, r24	; 8
     27c:	5f 9a       	sbi	0x0b, 7	; 11
     27e:	00 00       	nop
     280:	5f 98       	cbi	0x0b, 7	; 11
     282:	82 e0       	ldi	r24, 0x02	; 2
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	e1 cf       	rjmp	.-62     	; 0x24a <delay_ms>
     288:	08 95       	ret

0000028a <LCD_ClearScreen>:
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	f5 cf       	rjmp	.-22     	; 0x278 <LCD_WriteCommand>
     28e:	08 95       	ret

00000290 <LCD_Cursor>:
     290:	81 31       	cpi	r24, 0x11	; 17
     292:	18 f4       	brcc	.+6      	; 0x29a <LCD_Cursor+0xa>
     294:	81 58       	subi	r24, 0x81	; 129
     296:	f0 cf       	rjmp	.-32     	; 0x278 <LCD_WriteCommand>
     298:	08 95       	ret
     29a:	81 55       	subi	r24, 0x51	; 81
     29c:	ed cf       	rjmp	.-38     	; 0x278 <LCD_WriteCommand>
     29e:	08 95       	ret

000002a0 <LCD_init>:
     2a0:	84 e6       	ldi	r24, 0x64	; 100
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	d2 df       	rcall	.-92     	; 0x24a <delay_ms>
     2a6:	88 e3       	ldi	r24, 0x38	; 56
     2a8:	e7 df       	rcall	.-50     	; 0x278 <LCD_WriteCommand>
     2aa:	86 e0       	ldi	r24, 0x06	; 6
     2ac:	e5 df       	rcall	.-54     	; 0x278 <LCD_WriteCommand>
     2ae:	8f e0       	ldi	r24, 0x0F	; 15
     2b0:	e3 df       	rcall	.-58     	; 0x278 <LCD_WriteCommand>
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	e1 df       	rcall	.-62     	; 0x278 <LCD_WriteCommand>
     2b6:	8a e0       	ldi	r24, 0x0A	; 10
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	c7 cf       	rjmp	.-114    	; 0x24a <delay_ms>
     2bc:	08 95       	ret

000002be <LCD_WriteData>:
     2be:	5e 9a       	sbi	0x0b, 6	; 11
     2c0:	88 b9       	out	0x08, r24	; 8
     2c2:	5f 9a       	sbi	0x0b, 7	; 11
     2c4:	00 00       	nop
     2c6:	5f 98       	cbi	0x0b, 7	; 11
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	be cf       	rjmp	.-132    	; 0x24a <delay_ms>
     2ce:	08 95       	ret

000002d0 <LCD_DisplayString>:
     2d0:	0f 93       	push	r16
     2d2:	1f 93       	push	r17
     2d4:	cf 93       	push	r28
     2d6:	df 93       	push	r29
     2d8:	18 2f       	mov	r17, r24
     2da:	eb 01       	movw	r28, r22
     2dc:	d6 df       	rcall	.-84     	; 0x28a <LCD_ClearScreen>
     2de:	88 81       	ld	r24, Y
     2e0:	88 23       	and	r24, r24
     2e2:	59 f0       	breq	.+22     	; 0x2fa <LCD_DisplayString+0x2a>
     2e4:	01 e0       	ldi	r16, 0x01	; 1
     2e6:	01 0f       	add	r16, r17
     2e8:	81 2f       	mov	r24, r17
     2ea:	d2 df       	rcall	.-92     	; 0x290 <LCD_Cursor>
     2ec:	89 91       	ld	r24, Y+
     2ee:	e7 df       	rcall	.-50     	; 0x2be <LCD_WriteData>
     2f0:	88 81       	ld	r24, Y
     2f2:	88 23       	and	r24, r24
     2f4:	11 f0       	breq	.+4      	; 0x2fa <LCD_DisplayString+0x2a>
     2f6:	10 2f       	mov	r17, r16
     2f8:	f5 cf       	rjmp	.-22     	; 0x2e4 <LCD_DisplayString+0x14>
     2fa:	df 91       	pop	r29
     2fc:	cf 91       	pop	r28
     2fe:	1f 91       	pop	r17
     300:	0f 91       	pop	r16
     302:	08 95       	ret

00000304 <TimerOn>:
     304:	8b e0       	ldi	r24, 0x0B	; 11
     306:	80 93 81 00 	sts	0x0081, r24
     30a:	8d e7       	ldi	r24, 0x7D	; 125
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	90 93 89 00 	sts	0x0089, r25
     312:	80 93 88 00 	sts	0x0088, r24
     316:	82 e0       	ldi	r24, 0x02	; 2
     318:	80 93 6f 00 	sts	0x006F, r24
     31c:	10 92 85 00 	sts	0x0085, r1
     320:	10 92 84 00 	sts	0x0084, r1
     324:	80 91 01 01 	lds	r24, 0x0101
     328:	90 91 02 01 	lds	r25, 0x0102
     32c:	a0 91 03 01 	lds	r26, 0x0103
     330:	b0 91 04 01 	lds	r27, 0x0104
     334:	80 93 eb 01 	sts	0x01EB, r24
     338:	90 93 ec 01 	sts	0x01EC, r25
     33c:	a0 93 ed 01 	sts	0x01ED, r26
     340:	b0 93 ee 01 	sts	0x01EE, r27
     344:	8f b7       	in	r24, 0x3f	; 63
     346:	80 68       	ori	r24, 0x80	; 128
     348:	8f bf       	out	0x3f, r24	; 63
     34a:	08 95       	ret

0000034c <__vector_13>:
     34c:	1f 92       	push	r1
     34e:	0f 92       	push	r0
     350:	0f b6       	in	r0, 0x3f	; 63
     352:	0f 92       	push	r0
     354:	11 24       	eor	r1, r1
     356:	8f 93       	push	r24
     358:	9f 93       	push	r25
     35a:	af 93       	push	r26
     35c:	bf 93       	push	r27
     35e:	80 91 eb 01 	lds	r24, 0x01EB
     362:	90 91 ec 01 	lds	r25, 0x01EC
     366:	a0 91 ed 01 	lds	r26, 0x01ED
     36a:	b0 91 ee 01 	lds	r27, 0x01EE
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	a1 09       	sbc	r26, r1
     372:	b1 09       	sbc	r27, r1
     374:	80 93 eb 01 	sts	0x01EB, r24
     378:	90 93 ec 01 	sts	0x01EC, r25
     37c:	a0 93 ed 01 	sts	0x01ED, r26
     380:	b0 93 ee 01 	sts	0x01EE, r27
     384:	89 2b       	or	r24, r25
     386:	8a 2b       	or	r24, r26
     388:	8b 2b       	or	r24, r27
     38a:	99 f4       	brne	.+38     	; 0x3b2 <__vector_13+0x66>
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	80 93 ef 01 	sts	0x01EF, r24
     392:	80 91 01 01 	lds	r24, 0x0101
     396:	90 91 02 01 	lds	r25, 0x0102
     39a:	a0 91 03 01 	lds	r26, 0x0103
     39e:	b0 91 04 01 	lds	r27, 0x0104
     3a2:	80 93 eb 01 	sts	0x01EB, r24
     3a6:	90 93 ec 01 	sts	0x01EC, r25
     3aa:	a0 93 ed 01 	sts	0x01ED, r26
     3ae:	b0 93 ee 01 	sts	0x01EE, r27
     3b2:	bf 91       	pop	r27
     3b4:	af 91       	pop	r26
     3b6:	9f 91       	pop	r25
     3b8:	8f 91       	pop	r24
     3ba:	0f 90       	pop	r0
     3bc:	0f be       	out	0x3f, r0	; 63
     3be:	0f 90       	pop	r0
     3c0:	1f 90       	pop	r1
     3c2:	18 95       	reti

000003c4 <Custom_Char>:
     3c4:	ef 92       	push	r14
     3c6:	ff 92       	push	r15
     3c8:	0f 93       	push	r16
     3ca:	1f 93       	push	r17
     3cc:	cf 93       	push	r28
     3ce:	df 93       	push	r29
     3d0:	cd b7       	in	r28, 0x3d	; 61
     3d2:	de b7       	in	r29, 0x3e	; 62
     3d4:	a8 97       	sbiw	r28, 0x28	; 40
     3d6:	0f b6       	in	r0, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	de bf       	out	0x3e, r29	; 62
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	cd bf       	out	0x3d, r28	; 61
     3e0:	98 e0       	ldi	r25, 0x08	; 8
     3e2:	8e 01       	movw	r16, r28
     3e4:	0f 5f       	subi	r16, 0xFF	; 255
     3e6:	1f 4f       	sbci	r17, 0xFF	; 255
     3e8:	d8 01       	movw	r26, r16
     3ea:	e9 2f       	mov	r30, r25
     3ec:	1d 92       	st	X+, r1
     3ee:	ea 95       	dec	r30
     3f0:	e9 f7       	brne	.-6      	; 0x3ec <Custom_Char+0x28>
     3f2:	3e e0       	ldi	r19, 0x0E	; 14
     3f4:	39 83       	std	Y+1, r19	; 0x01
     3f6:	8b e1       	ldi	r24, 0x1B	; 27
     3f8:	8a 83       	std	Y+2, r24	; 0x02
     3fa:	8e e1       	ldi	r24, 0x1E	; 30
     3fc:	8b 83       	std	Y+3, r24	; 0x03
     3fe:	2c e1       	ldi	r18, 0x1C	; 28
     400:	2c 83       	std	Y+4, r18	; 0x04
     402:	8d 83       	std	Y+5, r24	; 0x05
     404:	2f e1       	ldi	r18, 0x1F	; 31
     406:	2e 83       	std	Y+6, r18	; 0x06
     408:	3f 83       	std	Y+7, r19	; 0x07
     40a:	7e 01       	movw	r14, r28
     40c:	f9 e0       	ldi	r31, 0x09	; 9
     40e:	ef 0e       	add	r14, r31
     410:	f1 1c       	adc	r15, r1
     412:	d7 01       	movw	r26, r14
     414:	e9 2f       	mov	r30, r25
     416:	1d 92       	st	X+, r1
     418:	ea 95       	dec	r30
     41a:	e9 f7       	brne	.-6      	; 0x416 <Custom_Char+0x52>
     41c:	8c e0       	ldi	r24, 0x0C	; 12
     41e:	8d 87       	std	Y+13, r24	; 0x0d
     420:	8e 87       	std	Y+14, r24	; 0x0e
     422:	fe 01       	movw	r30, r28
     424:	71 96       	adiw	r30, 0x11	; 17
     426:	df 01       	movw	r26, r30
     428:	49 2f       	mov	r20, r25
     42a:	1d 92       	st	X+, r1
     42c:	4a 95       	dec	r20
     42e:	e9 f7       	brne	.-6      	; 0x42a <Custom_Char+0x66>
     430:	8d 8b       	std	Y+21, r24	; 0x15
     432:	8e 8b       	std	Y+22, r24	; 0x16
     434:	38 96       	adiw	r30, 0x08	; 8
     436:	df 01       	movw	r26, r30
     438:	49 2f       	mov	r20, r25
     43a:	1d 92       	st	X+, r1
     43c:	4a 95       	dec	r20
     43e:	e9 f7       	brne	.-6      	; 0x43a <Custom_Char+0x76>
     440:	8d 8f       	std	Y+29, r24	; 0x1d
     442:	8e 8f       	std	Y+30, r24	; 0x1e
     444:	38 96       	adiw	r30, 0x08	; 8
     446:	df 01       	movw	r26, r30
     448:	1d 92       	st	X+, r1
     44a:	9a 95       	dec	r25
     44c:	e9 f7       	brne	.-6      	; 0x448 <Custom_Char+0x84>
     44e:	39 a3       	std	Y+33, r19	; 0x21
     450:	3a a3       	std	Y+34, r19	; 0x22
     452:	2b a3       	std	Y+35, r18	; 0x23
     454:	85 e1       	ldi	r24, 0x15	; 21
     456:	8c a3       	std	Y+36, r24	; 0x24
     458:	2d a3       	std	Y+37, r18	; 0x25
     45a:	2e a3       	std	Y+38, r18	; 0x26
     45c:	8f a3       	std	Y+39, r24	; 0x27
     45e:	80 e4       	ldi	r24, 0x40	; 64
     460:	0b df       	rcall	.-490    	; 0x278 <LCD_WriteCommand>
     462:	f8 01       	movw	r30, r16
     464:	81 91       	ld	r24, Z+
     466:	8f 01       	movw	r16, r30
     468:	2a df       	rcall	.-428    	; 0x2be <LCD_WriteData>
     46a:	0e 15       	cp	r16, r14
     46c:	1f 05       	cpc	r17, r15
     46e:	c9 f7       	brne	.-14     	; 0x462 <Custom_Char+0x9e>
     470:	8e 01       	movw	r16, r28
     472:	07 5f       	subi	r16, 0xF7	; 247
     474:	1f 4f       	sbci	r17, 0xFF	; 255
     476:	7e 01       	movw	r14, r28
     478:	f1 e1       	ldi	r31, 0x11	; 17
     47a:	ef 0e       	add	r14, r31
     47c:	f1 1c       	adc	r15, r1
     47e:	d8 01       	movw	r26, r16
     480:	8d 91       	ld	r24, X+
     482:	8d 01       	movw	r16, r26
     484:	1c df       	rcall	.-456    	; 0x2be <LCD_WriteData>
     486:	0e 15       	cp	r16, r14
     488:	1f 05       	cpc	r17, r15
     48a:	c9 f7       	brne	.-14     	; 0x47e <Custom_Char+0xba>
     48c:	8e 01       	movw	r16, r28
     48e:	0f 5e       	subi	r16, 0xEF	; 239
     490:	1f 4f       	sbci	r17, 0xFF	; 255
     492:	7e 01       	movw	r14, r28
     494:	b9 e1       	ldi	r27, 0x19	; 25
     496:	eb 0e       	add	r14, r27
     498:	f1 1c       	adc	r15, r1
     49a:	f8 01       	movw	r30, r16
     49c:	81 91       	ld	r24, Z+
     49e:	8f 01       	movw	r16, r30
     4a0:	0e df       	rcall	.-484    	; 0x2be <LCD_WriteData>
     4a2:	0e 15       	cp	r16, r14
     4a4:	1f 05       	cpc	r17, r15
     4a6:	c9 f7       	brne	.-14     	; 0x49a <Custom_Char+0xd6>
     4a8:	8e 01       	movw	r16, r28
     4aa:	07 5e       	subi	r16, 0xE7	; 231
     4ac:	1f 4f       	sbci	r17, 0xFF	; 255
     4ae:	7e 01       	movw	r14, r28
     4b0:	f1 e2       	ldi	r31, 0x21	; 33
     4b2:	ef 0e       	add	r14, r31
     4b4:	f1 1c       	adc	r15, r1
     4b6:	d8 01       	movw	r26, r16
     4b8:	8d 91       	ld	r24, X+
     4ba:	8d 01       	movw	r16, r26
     4bc:	00 df       	rcall	.-512    	; 0x2be <LCD_WriteData>
     4be:	0e 15       	cp	r16, r14
     4c0:	1f 05       	cpc	r17, r15
     4c2:	c9 f7       	brne	.-14     	; 0x4b6 <Custom_Char+0xf2>
     4c4:	8e 01       	movw	r16, r28
     4c6:	0f 5d       	subi	r16, 0xDF	; 223
     4c8:	1f 4f       	sbci	r17, 0xFF	; 255
     4ca:	7e 01       	movw	r14, r28
     4cc:	b9 e2       	ldi	r27, 0x29	; 41
     4ce:	eb 0e       	add	r14, r27
     4d0:	f1 1c       	adc	r15, r1
     4d2:	f8 01       	movw	r30, r16
     4d4:	81 91       	ld	r24, Z+
     4d6:	8f 01       	movw	r16, r30
     4d8:	f2 de       	rcall	.-540    	; 0x2be <LCD_WriteData>
     4da:	0e 15       	cp	r16, r14
     4dc:	1f 05       	cpc	r17, r15
     4de:	c9 f7       	brne	.-14     	; 0x4d2 <Custom_Char+0x10e>
     4e0:	80 e8       	ldi	r24, 0x80	; 128
     4e2:	ca de       	rcall	.-620    	; 0x278 <LCD_WriteCommand>
     4e4:	a8 96       	adiw	r28, 0x28	; 40
     4e6:	0f b6       	in	r0, 0x3f	; 63
     4e8:	f8 94       	cli
     4ea:	de bf       	out	0x3e, r29	; 62
     4ec:	0f be       	out	0x3f, r0	; 63
     4ee:	cd bf       	out	0x3d, r28	; 61
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	1f 91       	pop	r17
     4f6:	0f 91       	pop	r16
     4f8:	ff 90       	pop	r15
     4fa:	ef 90       	pop	r14
     4fc:	08 95       	ret

000004fe <transmit_data>:
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	4b b1       	in	r20, 0x0b	; 11
     506:	40 7f       	andi	r20, 0xF0	; 240
     508:	48 60       	ori	r20, 0x08	; 8
     50a:	4b b9       	out	0x0b, r20	; 11
     50c:	6b b1       	in	r22, 0x0b	; 11
     50e:	ac 01       	movw	r20, r24
     510:	02 2e       	mov	r0, r18
     512:	02 c0       	rjmp	.+4      	; 0x518 <transmit_data+0x1a>
     514:	55 95       	asr	r21
     516:	47 95       	ror	r20
     518:	0a 94       	dec	r0
     51a:	e2 f7       	brpl	.-8      	; 0x514 <transmit_data+0x16>
     51c:	41 70       	andi	r20, 0x01	; 1
     51e:	46 2b       	or	r20, r22
     520:	4b b9       	out	0x0b, r20	; 11
     522:	59 9a       	sbi	0x0b, 1	; 11
     524:	2f 5f       	subi	r18, 0xFF	; 255
     526:	3f 4f       	sbci	r19, 0xFF	; 255
     528:	28 30       	cpi	r18, 0x08	; 8
     52a:	31 05       	cpc	r19, r1
     52c:	59 f7       	brne	.-42     	; 0x504 <transmit_data+0x6>
     52e:	5a 9a       	sbi	0x0b, 2	; 11
     530:	8b b1       	in	r24, 0x0b	; 11
     532:	80 7f       	andi	r24, 0xF0	; 240
     534:	8b b9       	out	0x0b, r24	; 11
     536:	08 95       	ret

00000538 <simon_SevenSeg>:
     538:	89 30       	cpi	r24, 0x09	; 9
     53a:	a1 f0       	breq	.+40     	; 0x564 <simon_SevenSeg+0x2c>
     53c:	88 30       	cpi	r24, 0x08	; 8
     53e:	a1 f0       	breq	.+40     	; 0x568 <simon_SevenSeg+0x30>
     540:	87 30       	cpi	r24, 0x07	; 7
     542:	a1 f0       	breq	.+40     	; 0x56c <simon_SevenSeg+0x34>
     544:	86 30       	cpi	r24, 0x06	; 6
     546:	a1 f0       	breq	.+40     	; 0x570 <simon_SevenSeg+0x38>
     548:	85 30       	cpi	r24, 0x05	; 5
     54a:	a1 f0       	breq	.+40     	; 0x574 <simon_SevenSeg+0x3c>
     54c:	84 30       	cpi	r24, 0x04	; 4
     54e:	a1 f0       	breq	.+40     	; 0x578 <simon_SevenSeg+0x40>
     550:	83 30       	cpi	r24, 0x03	; 3
     552:	a1 f0       	breq	.+40     	; 0x57c <simon_SevenSeg+0x44>
     554:	82 30       	cpi	r24, 0x02	; 2
     556:	a1 f0       	breq	.+40     	; 0x580 <simon_SevenSeg+0x48>
     558:	81 30       	cpi	r24, 0x01	; 1
     55a:	a1 f0       	breq	.+40     	; 0x584 <simon_SevenSeg+0x4c>
     55c:	88 23       	and	r24, r24
     55e:	a1 f0       	breq	.+40     	; 0x588 <simon_SevenSeg+0x50>
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	08 95       	ret
     564:	89 e1       	ldi	r24, 0x19	; 25
     566:	08 95       	ret
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	08 95       	ret
     56c:	8f e1       	ldi	r24, 0x1F	; 31
     56e:	08 95       	ret
     570:	80 e4       	ldi	r24, 0x40	; 64
     572:	08 95       	ret
     574:	88 e4       	ldi	r24, 0x48	; 72
     576:	08 95       	ret
     578:	88 e9       	ldi	r24, 0x98	; 152
     57a:	08 95       	ret
     57c:	8c e0       	ldi	r24, 0x0C	; 12
     57e:	08 95       	ret
     580:	84 e2       	ldi	r24, 0x24	; 36
     582:	08 95       	ret
     584:	8e e9       	ldi	r24, 0x9E	; 158
     586:	08 95       	ret
     588:	82 e0       	ldi	r24, 0x02	; 2
     58a:	08 95       	ret

0000058c <TickFct_State_machine_1>:
//////////////////////////////////////////7 seg BCD////////////////////////////////////////////////////////////////////////////////////
enum SM1_States { init10, SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;
void TickFct_State_machine_1() 
{
	switch(SM1_State) 
     58c:	80 91 f6 01 	lds	r24, 0x01F6
     590:	82 30       	cpi	r24, 0x02	; 2
     592:	09 f4       	brne	.+2      	; 0x596 <TickFct_State_machine_1+0xa>
     594:	3e c0       	rjmp	.+124    	; 0x612 <TickFct_State_machine_1+0x86>
     596:	28 f4       	brcc	.+10     	; 0x5a2 <TickFct_State_machine_1+0x16>
     598:	88 23       	and	r24, r24
     59a:	61 f0       	breq	.+24     	; 0x5b4 <TickFct_State_machine_1+0x28>
     59c:	81 30       	cpi	r24, 0x01	; 1
     59e:	79 f1       	breq	.+94     	; 0x5fe <TickFct_State_machine_1+0x72>
     5a0:	49 c0       	rjmp	.+146    	; 0x634 <TickFct_State_machine_1+0xa8>
     5a2:	84 30       	cpi	r24, 0x04	; 4
     5a4:	09 f4       	brne	.+2      	; 0x5a8 <TickFct_State_machine_1+0x1c>
     5a6:	3d c0       	rjmp	.+122    	; 0x622 <TickFct_State_machine_1+0x96>
     5a8:	08 f4       	brcc	.+2      	; 0x5ac <TickFct_State_machine_1+0x20>
     5aa:	37 c0       	rjmp	.+110    	; 0x61a <TickFct_State_machine_1+0x8e>
     5ac:	85 30       	cpi	r24, 0x05	; 5
     5ae:	09 f4       	brne	.+2      	; 0x5b2 <TickFct_State_machine_1+0x26>
     5b0:	3c c0       	rjmp	.+120    	; 0x62a <TickFct_State_machine_1+0x9e>
     5b2:	40 c0       	rjmp	.+128    	; 0x634 <TickFct_State_machine_1+0xa8>
	{
		case init10:
		if(global_g == 0)
     5b4:	80 91 ea 01 	lds	r24, 0x01EA
     5b8:	81 11       	cpse	r24, r1
     5ba:	21 c0       	rjmp	.+66     	; 0x5fe <TickFct_State_machine_1+0x72>
		{
			LCD_ClearScreen();
     5bc:	66 de       	rcall	.-820    	; 0x28a <LCD_ClearScreen>
			LCD_DisplayString(1,"Simon Press");
     5be:	65 e0       	ldi	r22, 0x05	; 5
     5c0:	71 e0       	ldi	r23, 0x01	; 1
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	85 de       	rcall	.-758    	; 0x2d0 <LCD_DisplayString>
			Custom_Char();
     5c6:	fe de       	rcall	.-516    	; 0x3c4 <Custom_Char>
			LCD_Cursor(17);
     5c8:	81 e1       	ldi	r24, 0x11	; 17
     5ca:	62 de       	rcall	.-828    	; 0x290 <LCD_Cursor>
			LCD_WriteData(0);
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	77 de       	rcall	.-786    	; 0x2be <LCD_WriteData>
			LCD_Cursor(19);
     5d0:	83 e1       	ldi	r24, 0x13	; 19
     5d2:	5e de       	rcall	.-836    	; 0x290 <LCD_Cursor>
			LCD_WriteData(1);
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	73 de       	rcall	.-794    	; 0x2be <LCD_WriteData>
			LCD_Cursor(21);
     5d8:	85 e1       	ldi	r24, 0x15	; 21
     5da:	5a de       	rcall	.-844    	; 0x290 <LCD_Cursor>
			LCD_WriteData(2);
     5dc:	82 e0       	ldi	r24, 0x02	; 2
     5de:	6f de       	rcall	.-802    	; 0x2be <LCD_WriteData>
			LCD_Cursor(23);
     5e0:	87 e1       	ldi	r24, 0x17	; 23
     5e2:	56 de       	rcall	.-852    	; 0x290 <LCD_Cursor>
			LCD_WriteData(3);
     5e4:	83 e0       	ldi	r24, 0x03	; 3
     5e6:	6b de       	rcall	.-810    	; 0x2be <LCD_WriteData>
			LCD_Cursor(25);
     5e8:	89 e1       	ldi	r24, 0x19	; 25
     5ea:	52 de       	rcall	.-860    	; 0x290 <LCD_Cursor>
			LCD_WriteData(4);
     5ec:	84 e0       	ldi	r24, 0x04	; 4
     5ee:	67 de       	rcall	.-818    	; 0x2be <LCD_WriteData>
			transmit_data(simon_SevenSeg(lives));
     5f0:	80 91 00 01 	lds	r24, 0x0100
     5f4:	a1 df       	rcall	.-190    	; 0x538 <simon_SevenSeg>
     5f6:	83 df       	rcall	.-250    	; 0x4fe <transmit_data>
			SM1_State = SM1_off;
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	80 93 f6 01 	sts	0x01F6, r24
		}
		case SM1_off:
		if(~PINB & 0x10)
     5fe:	1c 99       	sbic	0x03, 4	; 3
     600:	04 c0       	rjmp	.+8      	; 0x60a <TickFct_State_machine_1+0x7e>
		{
			SM1_State = SM1_on1;
     602:	82 e0       	ldi	r24, 0x02	; 2
     604:	80 93 f6 01 	sts	0x01F6, r24
     608:	26 c0       	rjmp	.+76     	; 0x656 <TickFct_State_machine_1+0xca>
		}
		else
		{
			SM1_State = SM1_off;
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	80 93 f6 01 	sts	0x01F6, r24
     610:	20 c0       	rjmp	.+64     	; 0x652 <TickFct_State_machine_1+0xc6>
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
     612:	83 e0       	ldi	r24, 0x03	; 3
     614:	80 93 f6 01 	sts	0x01F6, r24
     618:	26 c0       	rjmp	.+76     	; 0x666 <TickFct_State_machine_1+0xda>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
     61a:	84 e0       	ldi	r24, 0x04	; 4
     61c:	80 93 f6 01 	sts	0x01F6, r24
     620:	25 c0       	rjmp	.+74     	; 0x66c <TickFct_State_machine_1+0xe0>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
     622:	85 e0       	ldi	r24, 0x05	; 5
     624:	80 93 f6 01 	sts	0x01F6, r24
     628:	24 c0       	rjmp	.+72     	; 0x672 <TickFct_State_machine_1+0xe6>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
     62a:	81 e0       	ldi	r24, 0x01	; 1
     62c:	80 93 f6 01 	sts	0x01F6, r24
		global_g = 1;
     630:	80 93 ea 01 	sts	0x01EA, r24
	}
	switch(SM1_State) 
     634:	80 91 f6 01 	lds	r24, 0x01F6
     638:	83 30       	cpi	r24, 0x03	; 3
     63a:	a9 f0       	breq	.+42     	; 0x666 <TickFct_State_machine_1+0xda>
     63c:	28 f4       	brcc	.+10     	; 0x648 <TickFct_State_machine_1+0xbc>
     63e:	81 30       	cpi	r24, 0x01	; 1
     640:	41 f0       	breq	.+16     	; 0x652 <TickFct_State_machine_1+0xc6>
     642:	82 30       	cpi	r24, 0x02	; 2
     644:	c1 f4       	brne	.+48     	; 0x676 <TickFct_State_machine_1+0xea>
     646:	07 c0       	rjmp	.+14     	; 0x656 <TickFct_State_machine_1+0xca>
     648:	84 30       	cpi	r24, 0x04	; 4
     64a:	81 f0       	breq	.+32     	; 0x66c <TickFct_State_machine_1+0xe0>
     64c:	85 30       	cpi	r24, 0x05	; 5
     64e:	99 f4       	brne	.+38     	; 0x676 <TickFct_State_machine_1+0xea>
     650:	10 c0       	rjmp	.+32     	; 0x672 <TickFct_State_machine_1+0xe6>
	{
		case SM1_off:
		PORTA = 0X00;
     652:	12 b8       	out	0x02, r1	; 2
		break;
     654:	08 95       	ret
		case SM1_on1:
		LCD_ClearScreen();
     656:	19 de       	rcall	.-974    	; 0x28a <LCD_ClearScreen>
		LCD_DisplayString(1, "Level One");
     658:	61 e1       	ldi	r22, 0x11	; 17
     65a:	71 e0       	ldi	r23, 0x01	; 1
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	38 de       	rcall	.-912    	; 0x2d0 <LCD_DisplayString>
		PORTA = 0x01;
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	82 b9       	out	0x02, r24	; 2
		break;
     664:	08 95       	ret
		case SM1_on2:
		PORTA = 0x02;
     666:	82 e0       	ldi	r24, 0x02	; 2
     668:	82 b9       	out	0x02, r24	; 2
		break;
     66a:	08 95       	ret
		case SM1_on3:
		PORTA = 0x04;
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	82 b9       	out	0x02, r24	; 2
		break;
     670:	08 95       	ret
		case SM1_on4:
		PORTA = 0x08;
     672:	88 e0       	ldi	r24, 0x08	; 8
     674:	82 b9       	out	0x02, r24	; 2
     676:	08 95       	ret

00000678 <ButtonPress>:
	}
}
enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
     678:	80 91 fb 01 	lds	r24, 0x01FB
     67c:	82 30       	cpi	r24, 0x02	; 2
     67e:	09 f4       	brne	.+2      	; 0x682 <ButtonPress+0xa>
     680:	5b c0       	rjmp	.+182    	; 0x738 <ButtonPress+0xc0>
     682:	28 f4       	brcc	.+10     	; 0x68e <ButtonPress+0x16>
     684:	88 23       	and	r24, r24
     686:	61 f0       	breq	.+24     	; 0x6a0 <ButtonPress+0x28>
     688:	81 30       	cpi	r24, 0x01	; 1
     68a:	a1 f1       	breq	.+104    	; 0x6f4 <ButtonPress+0x7c>
     68c:	a7 c0       	rjmp	.+334    	; 0x7dc <ButtonPress+0x164>
     68e:	84 30       	cpi	r24, 0x04	; 4
     690:	09 f4       	brne	.+2      	; 0x694 <ButtonPress+0x1c>
     692:	96 c0       	rjmp	.+300    	; 0x7c0 <ButtonPress+0x148>
     694:	08 f4       	brcc	.+2      	; 0x698 <ButtonPress+0x20>
     696:	72 c0       	rjmp	.+228    	; 0x77c <ButtonPress+0x104>
     698:	85 30       	cpi	r24, 0x05	; 5
     69a:	09 f4       	brne	.+2      	; 0x69e <ButtonPress+0x26>
     69c:	97 c0       	rjmp	.+302    	; 0x7cc <ButtonPress+0x154>
     69e:	9e c0       	rjmp	.+316    	; 0x7dc <ButtonPress+0x164>
	{
		case Init:
		if(global_g == 1)
     6a0:	80 91 ea 01 	lds	r24, 0x01EA
     6a4:	81 30       	cpi	r24, 0x01	; 1
     6a6:	09 f0       	breq	.+2      	; 0x6aa <ButtonPress+0x32>
     6a8:	d8 c0       	rjmp	.+432    	; 0x85a <ButtonPress+0x1e2>
		{
			LCD_DisplayString(1, "Begin Pressing");
     6aa:	6b e1       	ldi	r22, 0x1B	; 27
     6ac:	71 e0       	ldi	r23, 0x01	; 1
     6ae:	10 de       	rcall	.-992    	; 0x2d0 <LCD_DisplayString>
			if(~PINB & 0x01)
     6b0:	18 99       	sbic	0x03, 0	; 3
     6b2:	05 c0       	rjmp	.+10     	; 0x6be <ButtonPress+0x46>
			{
				while(~PINB & 0x01){}
     6b4:	18 9b       	sbis	0x03, 0	; 3
     6b6:	fe cf       	rjmp	.-4      	; 0x6b4 <ButtonPress+0x3c>
				Press_States = Press1;	
     6b8:	81 e0       	ldi	r24, 0x01	; 1
     6ba:	80 93 fb 01 	sts	0x01FB, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     6be:	19 9b       	sbis	0x03, 1	; 3
     6c0:	04 c0       	rjmp	.+8      	; 0x6ca <ButtonPress+0x52>
     6c2:	1a 9b       	sbis	0x03, 2	; 3
     6c4:	02 c0       	rjmp	.+4      	; 0x6ca <ButtonPress+0x52>
     6c6:	1b 99       	sbic	0x03, 3	; 3
     6c8:	89 c0       	rjmp	.+274    	; 0x7dc <ButtonPress+0x164>
			{
				if(lives - 1 > -1)
     6ca:	20 91 00 01 	lds	r18, 0x0100
     6ce:	82 2f       	mov	r24, r18
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	01 97       	sbiw	r24, 0x01	; 1
     6d4:	99 23       	and	r25, r25
     6d6:	1c f0       	brlt	.+6      	; 0x6de <ButtonPress+0x66>
				{
					lives--;
     6d8:	21 50       	subi	r18, 0x01	; 1
     6da:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
     6de:	80 91 00 01 	lds	r24, 0x0100
     6e2:	81 11       	cpse	r24, r1
     6e4:	03 c0       	rjmp	.+6      	; 0x6ec <ButtonPress+0x74>
				{
					global_g = 20;
     6e6:	84 e1       	ldi	r24, 0x14	; 20
     6e8:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_States = Error;
     6ec:	85 e0       	ldi	r24, 0x05	; 5
     6ee:	80 93 fb 01 	sts	0x01FB, r24
     6f2:	84 c0       	rjmp	.+264    	; 0x7fc <ButtonPress+0x184>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
     6f4:	19 99       	sbic	0x03, 1	; 3
     6f6:	05 c0       	rjmp	.+10     	; 0x702 <ButtonPress+0x8a>
		{
			while(~PINB & 0x02){}
     6f8:	19 9b       	sbis	0x03, 1	; 3
     6fa:	fe cf       	rjmp	.-4      	; 0x6f8 <ButtonPress+0x80>
			Press_States = Press2;
     6fc:	82 e0       	ldi	r24, 0x02	; 2
     6fe:	80 93 fb 01 	sts	0x01FB, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     702:	18 9b       	sbis	0x03, 0	; 3
     704:	04 c0       	rjmp	.+8      	; 0x70e <ButtonPress+0x96>
     706:	1a 9b       	sbis	0x03, 2	; 3
     708:	02 c0       	rjmp	.+4      	; 0x70e <ButtonPress+0x96>
     70a:	1b 99       	sbic	0x03, 3	; 3
     70c:	67 c0       	rjmp	.+206    	; 0x7dc <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     70e:	20 91 00 01 	lds	r18, 0x0100
     712:	82 2f       	mov	r24, r18
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	01 97       	sbiw	r24, 0x01	; 1
     718:	99 23       	and	r25, r25
     71a:	1c f0       	brlt	.+6      	; 0x722 <ButtonPress+0xaa>
			{
				lives--;
     71c:	21 50       	subi	r18, 0x01	; 1
     71e:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     722:	80 91 00 01 	lds	r24, 0x0100
     726:	81 11       	cpse	r24, r1
     728:	03 c0       	rjmp	.+6      	; 0x730 <ButtonPress+0xb8>
			{
				global_g = 20;
     72a:	84 e1       	ldi	r24, 0x14	; 20
     72c:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_States = Error;
     730:	85 e0       	ldi	r24, 0x05	; 5
     732:	80 93 fb 01 	sts	0x01FB, r24
     736:	62 c0       	rjmp	.+196    	; 0x7fc <ButtonPress+0x184>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
     738:	1a 99       	sbic	0x03, 2	; 3
     73a:	05 c0       	rjmp	.+10     	; 0x746 <ButtonPress+0xce>
		{
			while(~PINB & 0x04){}
     73c:	1a 9b       	sbis	0x03, 2	; 3
     73e:	fe cf       	rjmp	.-4      	; 0x73c <ButtonPress+0xc4>
			Press_States = Press3;
     740:	83 e0       	ldi	r24, 0x03	; 3
     742:	80 93 fb 01 	sts	0x01FB, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     746:	19 9b       	sbis	0x03, 1	; 3
     748:	04 c0       	rjmp	.+8      	; 0x752 <ButtonPress+0xda>
     74a:	18 9b       	sbis	0x03, 0	; 3
     74c:	02 c0       	rjmp	.+4      	; 0x752 <ButtonPress+0xda>
     74e:	1b 99       	sbic	0x03, 3	; 3
     750:	45 c0       	rjmp	.+138    	; 0x7dc <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     752:	20 91 00 01 	lds	r18, 0x0100
     756:	82 2f       	mov	r24, r18
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	01 97       	sbiw	r24, 0x01	; 1
     75c:	99 23       	and	r25, r25
     75e:	1c f0       	brlt	.+6      	; 0x766 <ButtonPress+0xee>
			{
				lives--;
     760:	21 50       	subi	r18, 0x01	; 1
     762:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     766:	80 91 00 01 	lds	r24, 0x0100
     76a:	81 11       	cpse	r24, r1
     76c:	03 c0       	rjmp	.+6      	; 0x774 <ButtonPress+0xfc>
			{
				global_g = 20;
     76e:	84 e1       	ldi	r24, 0x14	; 20
     770:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_States = Error;
     774:	85 e0       	ldi	r24, 0x05	; 5
     776:	80 93 fb 01 	sts	0x01FB, r24
     77a:	40 c0       	rjmp	.+128    	; 0x7fc <ButtonPress+0x184>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
     77c:	1b 99       	sbic	0x03, 3	; 3
     77e:	05 c0       	rjmp	.+10     	; 0x78a <ButtonPress+0x112>
		{
			while(~PINB & 0x08){}
     780:	1b 9b       	sbis	0x03, 3	; 3
     782:	fe cf       	rjmp	.-4      	; 0x780 <ButtonPress+0x108>
			Press_States = Press4;
     784:	84 e0       	ldi	r24, 0x04	; 4
     786:	80 93 fb 01 	sts	0x01FB, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     78a:	19 9b       	sbis	0x03, 1	; 3
     78c:	04 c0       	rjmp	.+8      	; 0x796 <ButtonPress+0x11e>
     78e:	1a 9b       	sbis	0x03, 2	; 3
     790:	02 c0       	rjmp	.+4      	; 0x796 <ButtonPress+0x11e>
     792:	18 99       	sbic	0x03, 0	; 3
     794:	23 c0       	rjmp	.+70     	; 0x7dc <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     796:	20 91 00 01 	lds	r18, 0x0100
     79a:	82 2f       	mov	r24, r18
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	99 23       	and	r25, r25
     7a2:	1c f0       	brlt	.+6      	; 0x7aa <ButtonPress+0x132>
			{
				lives--;
     7a4:	21 50       	subi	r18, 0x01	; 1
     7a6:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     7aa:	80 91 00 01 	lds	r24, 0x0100
     7ae:	81 11       	cpse	r24, r1
     7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <ButtonPress+0x140>
			{
				global_g = 20;
     7b2:	84 e1       	ldi	r24, 0x14	; 20
     7b4:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_States = Error;
     7b8:	85 e0       	ldi	r24, 0x05	; 5
     7ba:	80 93 fb 01 	sts	0x01FB, r24
     7be:	1e c0       	rjmp	.+60     	; 0x7fc <ButtonPress+0x184>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
     7c0:	1c 99       	sbic	0x03, 4	; 3
     7c2:	38 c0       	rjmp	.+112    	; 0x834 <ButtonPress+0x1bc>
		{
			Press_States = Off;	
     7c4:	86 e0       	ldi	r24, 0x06	; 6
     7c6:	80 93 fb 01 	sts	0x01FB, r24
     7ca:	3f c0       	rjmp	.+126    	; 0x84a <ButtonPress+0x1d2>
		}
		break;
		case Error:
		if(~PINB & 0x01)
     7cc:	18 99       	sbic	0x03, 0	; 3
     7ce:	16 c0       	rjmp	.+44     	; 0x7fc <ButtonPress+0x184>
		{
			while(~PINB & 0x01){}
     7d0:	18 9b       	sbis	0x03, 0	; 3
     7d2:	fe cf       	rjmp	.-4      	; 0x7d0 <ButtonPress+0x158>
			Press_States = Press1;
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	80 93 fb 01 	sts	0x01FB, r24
     7da:	17 c0       	rjmp	.+46     	; 0x80a <ButtonPress+0x192>
		}
		break;
	}
	switch(Press_States)
     7dc:	80 91 fb 01 	lds	r24, 0x01FB
     7e0:	83 30       	cpi	r24, 0x03	; 3
     7e2:	09 f1       	breq	.+66     	; 0x826 <ButtonPress+0x1ae>
     7e4:	28 f4       	brcc	.+10     	; 0x7f0 <ButtonPress+0x178>
     7e6:	81 30       	cpi	r24, 0x01	; 1
     7e8:	81 f0       	breq	.+32     	; 0x80a <ButtonPress+0x192>
     7ea:	82 30       	cpi	r24, 0x02	; 2
     7ec:	a9 f0       	breq	.+42     	; 0x818 <ButtonPress+0x1a0>
     7ee:	08 95       	ret
     7f0:	85 30       	cpi	r24, 0x05	; 5
     7f2:	21 f0       	breq	.+8      	; 0x7fc <ButtonPress+0x184>
     7f4:	f8 f0       	brcs	.+62     	; 0x834 <ButtonPress+0x1bc>
     7f6:	86 30       	cpi	r24, 0x06	; 6
     7f8:	41 f1       	breq	.+80     	; 0x84a <ButtonPress+0x1d2>
     7fa:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
     7fc:	80 e1       	ldi	r24, 0x10	; 16
     7fe:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     800:	80 91 00 01 	lds	r24, 0x0100
     804:	99 de       	rcall	.-718    	; 0x538 <simon_SevenSeg>
     806:	7b ce       	rjmp	.-778    	; 0x4fe <transmit_data>
		break;
     808:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     80e:	80 91 00 01 	lds	r24, 0x0100
     812:	92 de       	rcall	.-732    	; 0x538 <simon_SevenSeg>
     814:	74 ce       	rjmp	.-792    	; 0x4fe <transmit_data>
		break;
     816:	08 95       	ret
		
		case Press2:
		PORTA = 0x02;
     818:	82 e0       	ldi	r24, 0x02	; 2
     81a:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     81c:	80 91 00 01 	lds	r24, 0x0100
     820:	8b de       	rcall	.-746    	; 0x538 <simon_SevenSeg>
     822:	6d ce       	rjmp	.-806    	; 0x4fe <transmit_data>
		break;
     824:	08 95       	ret
		
		case Press3:
		PORTA = 0x04;
     826:	84 e0       	ldi	r24, 0x04	; 4
     828:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     82a:	80 91 00 01 	lds	r24, 0x0100
     82e:	84 de       	rcall	.-760    	; 0x538 <simon_SevenSeg>
     830:	66 ce       	rjmp	.-820    	; 0x4fe <transmit_data>
		break;
     832:	08 95       	ret
		
		case Press4:
		PORTA = 0x08;
     834:	88 e0       	ldi	r24, 0x08	; 8
     836:	82 b9       	out	0x02, r24	; 2
		LCD_DisplayString(1,"Good Job");
     838:	6a e2       	ldi	r22, 0x2A	; 42
     83a:	71 e0       	ldi	r23, 0x01	; 1
     83c:	81 e0       	ldi	r24, 0x01	; 1
     83e:	48 dd       	rcall	.-1392   	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
     840:	80 91 00 01 	lds	r24, 0x0100
     844:	79 de       	rcall	.-782    	; 0x538 <simon_SevenSeg>
     846:	5b ce       	rjmp	.-842    	; 0x4fe <transmit_data>
		break;
     848:	08 95       	ret
		case Off:
		PORTA = 0x00;
     84a:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     84c:	80 91 00 01 	lds	r24, 0x0100
     850:	73 de       	rcall	.-794    	; 0x538 <simon_SevenSeg>
     852:	55 de       	rcall	.-854    	; 0x4fe <transmit_data>
		global_g = 2;
     854:	82 e0       	ldi	r24, 0x02	; 2
     856:	80 93 ea 01 	sts	0x01EA, r24
     85a:	08 95       	ret

0000085c <TickFct_Machine2>:
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
     85c:	80 91 f5 01 	lds	r24, 0x01F5
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	87 30       	cpi	r24, 0x07	; 7
     864:	91 05       	cpc	r25, r1
     866:	b8 f5       	brcc	.+110    	; 0x8d6 <TickFct_Machine2+0x7a>
     868:	fc 01       	movw	r30, r24
     86a:	ea 5b       	subi	r30, 0xBA	; 186
     86c:	ff 4f       	sbci	r31, 0xFF	; 255
     86e:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{
		case SM2_off:
		if(global_g == 2)
     872:	80 91 ea 01 	lds	r24, 0x01EA
     876:	82 30       	cpi	r24, 0x02	; 2
     878:	c9 f5       	brne	.+114    	; 0x8ec <TickFct_Machine2+0x90>
		{
			LCD_DisplayString(1, "Level Two");
     87a:	63 e3       	ldi	r22, 0x33	; 51
     87c:	71 e0       	ldi	r23, 0x01	; 1
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	27 dd       	rcall	.-1458   	; 0x2d0 <LCD_DisplayString>
			if(~PINB & 0x01)
     882:	18 99       	sbic	0x03, 0	; 3
     884:	03 c0       	rjmp	.+6      	; 0x88c <TickFct_Machine2+0x30>
			{
				SM2_States = SM2_on1;
     886:	81 e0       	ldi	r24, 0x01	; 1
     888:	80 93 f5 01 	sts	0x01F5, r24
			}
			while(!(~PINB & 0x01))
     88c:	18 9b       	sbis	0x03, 0	; 3
     88e:	23 c0       	rjmp	.+70     	; 0x8d6 <TickFct_Machine2+0x7a>
			{
				SM2_States = SM2_off;
     890:	10 92 f5 01 	sts	0x01F5, r1
			LCD_DisplayString(1, "Level Two");
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
     894:	18 99       	sbic	0x03, 0	; 3
     896:	fc cf       	rjmp	.-8      	; 0x890 <TickFct_Machine2+0x34>
     898:	29 c0       	rjmp	.+82     	; 0x8ec <TickFct_Machine2+0x90>
		{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
     89a:	82 e0       	ldi	r24, 0x02	; 2
     89c:	80 93 f5 01 	sts	0x01F5, r24
     8a0:	2a c0       	rjmp	.+84     	; 0x8f6 <TickFct_Machine2+0x9a>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
     8a2:	83 e0       	ldi	r24, 0x03	; 3
     8a4:	80 93 f5 01 	sts	0x01F5, r24
     8a8:	29 c0       	rjmp	.+82     	; 0x8fc <TickFct_Machine2+0xa0>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
     8aa:	84 e0       	ldi	r24, 0x04	; 4
     8ac:	80 93 f5 01 	sts	0x01F5, r24
     8b0:	28 c0       	rjmp	.+80     	; 0x902 <TickFct_Machine2+0xa6>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
     8b2:	85 e0       	ldi	r24, 0x05	; 5
     8b4:	80 93 f5 01 	sts	0x01F5, r24
     8b8:	27 c0       	rjmp	.+78     	; 0x908 <TickFct_Machine2+0xac>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
     8ba:	86 e0       	ldi	r24, 0x06	; 6
     8bc:	80 93 f5 01 	sts	0x01F5, r24
     8c0:	26 c0       	rjmp	.+76     	; 0x90e <TickFct_Machine2+0xb2>
		break;
		case SM2_on6:
		LCD_DisplayString(1, "Lets test your  memory out");
     8c2:	6d e3       	ldi	r22, 0x3D	; 61
     8c4:	71 e0       	ldi	r23, 0x01	; 1
     8c6:	81 e0       	ldi	r24, 0x01	; 1
     8c8:	03 dd       	rcall	.-1530   	; 0x2d0 <LCD_DisplayString>
		global_g = 3;
     8ca:	83 e0       	ldi	r24, 0x03	; 3
     8cc:	80 93 ea 01 	sts	0x01EA, r24
		SM2_States = SM2_off;
     8d0:	10 92 f5 01 	sts	0x01F5, r1
		break;
     8d4:	0b c0       	rjmp	.+22     	; 0x8ec <TickFct_Machine2+0x90>
	}

	switch(SM2_States)
     8d6:	80 91 f5 01 	lds	r24, 0x01F5
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	87 30       	cpi	r24, 0x07	; 7
     8de:	91 05       	cpc	r25, r1
     8e0:	c0 f4       	brcc	.+48     	; 0x912 <TickFct_Machine2+0xb6>
     8e2:	fc 01       	movw	r30, r24
     8e4:	e3 5b       	subi	r30, 0xB3	; 179
     8e6:	ff 4f       	sbci	r31, 0xFF	; 255
     8e8:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
     8ec:	12 b8       	out	0x02, r1	; 2
		break;
     8ee:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	82 b9       	out	0x02, r24	; 2
		break;
     8f4:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
     8f6:	84 e0       	ldi	r24, 0x04	; 4
     8f8:	82 b9       	out	0x02, r24	; 2
		break;
     8fa:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
     8fc:	88 e0       	ldi	r24, 0x08	; 8
     8fe:	82 b9       	out	0x02, r24	; 2
		break;
     900:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
     902:	81 e0       	ldi	r24, 0x01	; 1
     904:	82 b9       	out	0x02, r24	; 2
		break;
     906:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
     908:	82 e0       	ldi	r24, 0x02	; 2
     90a:	82 b9       	out	0x02, r24	; 2
		break;
     90c:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
     90e:	81 e0       	ldi	r24, 0x01	; 1
     910:	82 b9       	out	0x02, r24	; 2
     912:	08 95       	ret

00000914 <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
     914:	80 91 f0 01 	lds	r24, 0x01F0
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	87 30       	cpi	r24, 0x07	; 7
     91c:	91 05       	cpc	r25, r1
     91e:	08 f0       	brcs	.+2      	; 0x922 <ButtonPress2+0xe>
     920:	d7 c0       	rjmp	.+430    	; 0xad0 <ButtonPress2+0x1bc>
     922:	fc 01       	movw	r30, r24
     924:	ec 5a       	subi	r30, 0xAC	; 172
     926:	ff 4f       	sbci	r31, 0xFF	; 255
     928:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
     92c:	18 99       	sbic	0x03, 0	; 3
     92e:	05 c0       	rjmp	.+10     	; 0x93a <ButtonPress2+0x26>
		{
			while(~PINB & 0x01){}
     930:	18 9b       	sbis	0x03, 0	; 3
     932:	fe cf       	rjmp	.-4      	; 0x930 <ButtonPress2+0x1c>
			Press_sec_level = Press_state1;
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     93a:	19 9b       	sbis	0x03, 1	; 3
     93c:	04 c0       	rjmp	.+8      	; 0x946 <ButtonPress2+0x32>
     93e:	1a 9b       	sbis	0x03, 2	; 3
     940:	02 c0       	rjmp	.+4      	; 0x946 <ButtonPress2+0x32>
     942:	1b 99       	sbic	0x03, 3	; 3
     944:	c8 c0       	rjmp	.+400    	; 0xad6 <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     946:	20 91 00 01 	lds	r18, 0x0100
     94a:	82 2f       	mov	r24, r18
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	01 97       	sbiw	r24, 0x01	; 1
     950:	99 23       	and	r25, r25
     952:	1c f0       	brlt	.+6      	; 0x95a <ButtonPress2+0x46>
			{
				lives--;
     954:	21 50       	subi	r18, 0x01	; 1
     956:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     95a:	80 91 00 01 	lds	r24, 0x0100
     95e:	81 11       	cpse	r24, r1
     960:	03 c0       	rjmp	.+6      	; 0x968 <ButtonPress2+0x54>
			{
				global_g = 20;
     962:	84 e1       	ldi	r24, 0x14	; 20
     964:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     968:	87 e0       	ldi	r24, 0x07	; 7
     96a:	80 93 f0 01 	sts	0x01F0, r24
     96e:	c0 c0       	rjmp	.+384    	; 0xaf0 <ButtonPress2+0x1dc>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
     970:	1a 99       	sbic	0x03, 2	; 3
     972:	05 c0       	rjmp	.+10     	; 0x97e <ButtonPress2+0x6a>
		{
			while(~PINB & 0x04){}
     974:	1a 9b       	sbis	0x03, 2	; 3
     976:	fe cf       	rjmp	.-4      	; 0x974 <ButtonPress2+0x60>
			Press_sec_level = Press_state2;
     978:	82 e0       	ldi	r24, 0x02	; 2
     97a:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     97e:	19 9b       	sbis	0x03, 1	; 3
     980:	04 c0       	rjmp	.+8      	; 0x98a <ButtonPress2+0x76>
     982:	18 9b       	sbis	0x03, 0	; 3
     984:	02 c0       	rjmp	.+4      	; 0x98a <ButtonPress2+0x76>
     986:	1b 99       	sbic	0x03, 3	; 3
     988:	a6 c0       	rjmp	.+332    	; 0xad6 <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     98a:	20 91 00 01 	lds	r18, 0x0100
     98e:	82 2f       	mov	r24, r18
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	01 97       	sbiw	r24, 0x01	; 1
     994:	99 23       	and	r25, r25
     996:	1c f0       	brlt	.+6      	; 0x99e <ButtonPress2+0x8a>
			{
				lives--;
     998:	21 50       	subi	r18, 0x01	; 1
     99a:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     99e:	80 91 00 01 	lds	r24, 0x0100
     9a2:	81 11       	cpse	r24, r1
     9a4:	03 c0       	rjmp	.+6      	; 0x9ac <ButtonPress2+0x98>
			{
				global_g = 20;
     9a6:	84 e1       	ldi	r24, 0x14	; 20
     9a8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     9ac:	87 e0       	ldi	r24, 0x07	; 7
     9ae:	80 93 f0 01 	sts	0x01F0, r24
     9b2:	9e c0       	rjmp	.+316    	; 0xaf0 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
     9b4:	1b 99       	sbic	0x03, 3	; 3
     9b6:	05 c0       	rjmp	.+10     	; 0x9c2 <ButtonPress2+0xae>
		{
			while(~PINB & 0x08){}
     9b8:	1b 9b       	sbis	0x03, 3	; 3
     9ba:	fe cf       	rjmp	.-4      	; 0x9b8 <ButtonPress2+0xa4>
			Press_sec_level = Press_state3;
     9bc:	83 e0       	ldi	r24, 0x03	; 3
     9be:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     9c2:	19 9b       	sbis	0x03, 1	; 3
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <ButtonPress2+0xba>
     9c6:	1a 9b       	sbis	0x03, 2	; 3
     9c8:	02 c0       	rjmp	.+4      	; 0x9ce <ButtonPress2+0xba>
     9ca:	18 99       	sbic	0x03, 0	; 3
     9cc:	84 c0       	rjmp	.+264    	; 0xad6 <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     9ce:	20 91 00 01 	lds	r18, 0x0100
     9d2:	82 2f       	mov	r24, r18
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	01 97       	sbiw	r24, 0x01	; 1
     9d8:	99 23       	and	r25, r25
     9da:	1c f0       	brlt	.+6      	; 0x9e2 <ButtonPress2+0xce>
			{
				lives--;
     9dc:	21 50       	subi	r18, 0x01	; 1
     9de:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     9e2:	80 91 00 01 	lds	r24, 0x0100
     9e6:	81 11       	cpse	r24, r1
     9e8:	03 c0       	rjmp	.+6      	; 0x9f0 <ButtonPress2+0xdc>
			{
				global_g = 20;
     9ea:	84 e1       	ldi	r24, 0x14	; 20
     9ec:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     9f0:	87 e0       	ldi	r24, 0x07	; 7
     9f2:	80 93 f0 01 	sts	0x01F0, r24
     9f6:	7c c0       	rjmp	.+248    	; 0xaf0 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
     9f8:	18 99       	sbic	0x03, 0	; 3
     9fa:	05 c0       	rjmp	.+10     	; 0xa06 <ButtonPress2+0xf2>
		{
			while(~PINB & 0x01){}
     9fc:	18 9b       	sbis	0x03, 0	; 3
     9fe:	fe cf       	rjmp	.-4      	; 0x9fc <ButtonPress2+0xe8>
			Press_sec_level = Press_state4;
     a00:	84 e0       	ldi	r24, 0x04	; 4
     a02:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     a06:	19 9b       	sbis	0x03, 1	; 3
     a08:	04 c0       	rjmp	.+8      	; 0xa12 <ButtonPress2+0xfe>
     a0a:	1a 9b       	sbis	0x03, 2	; 3
     a0c:	02 c0       	rjmp	.+4      	; 0xa12 <ButtonPress2+0xfe>
     a0e:	1b 99       	sbic	0x03, 3	; 3
     a10:	62 c0       	rjmp	.+196    	; 0xad6 <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     a12:	20 91 00 01 	lds	r18, 0x0100
     a16:	82 2f       	mov	r24, r18
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	99 23       	and	r25, r25
     a1e:	1c f0       	brlt	.+6      	; 0xa26 <ButtonPress2+0x112>
			{
				lives--;
     a20:	21 50       	subi	r18, 0x01	; 1
     a22:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     a26:	80 91 00 01 	lds	r24, 0x0100
     a2a:	81 11       	cpse	r24, r1
     a2c:	03 c0       	rjmp	.+6      	; 0xa34 <ButtonPress2+0x120>
			{
				global_g = 20;
     a2e:	84 e1       	ldi	r24, 0x14	; 20
     a30:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     a34:	87 e0       	ldi	r24, 0x07	; 7
     a36:	80 93 f0 01 	sts	0x01F0, r24
     a3a:	5a c0       	rjmp	.+180    	; 0xaf0 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
     a3c:	19 99       	sbic	0x03, 1	; 3
     a3e:	05 c0       	rjmp	.+10     	; 0xa4a <ButtonPress2+0x136>
		{
			while(~PINB & 0x02){}
     a40:	19 9b       	sbis	0x03, 1	; 3
     a42:	fe cf       	rjmp	.-4      	; 0xa40 <ButtonPress2+0x12c>
			Press_sec_level = Press_state5;
     a44:	85 e0       	ldi	r24, 0x05	; 5
     a46:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     a4a:	18 9b       	sbis	0x03, 0	; 3
     a4c:	04 c0       	rjmp	.+8      	; 0xa56 <ButtonPress2+0x142>
     a4e:	1a 9b       	sbis	0x03, 2	; 3
     a50:	02 c0       	rjmp	.+4      	; 0xa56 <ButtonPress2+0x142>
     a52:	1b 99       	sbic	0x03, 3	; 3
     a54:	40 c0       	rjmp	.+128    	; 0xad6 <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     a56:	20 91 00 01 	lds	r18, 0x0100
     a5a:	82 2f       	mov	r24, r18
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	01 97       	sbiw	r24, 0x01	; 1
     a60:	99 23       	and	r25, r25
     a62:	1c f0       	brlt	.+6      	; 0xa6a <ButtonPress2+0x156>
			{
				lives--;
     a64:	21 50       	subi	r18, 0x01	; 1
     a66:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     a6a:	80 91 00 01 	lds	r24, 0x0100
     a6e:	81 11       	cpse	r24, r1
     a70:	03 c0       	rjmp	.+6      	; 0xa78 <ButtonPress2+0x164>
			{
				global_g = 20;
     a72:	84 e1       	ldi	r24, 0x14	; 20
     a74:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     a78:	87 e0       	ldi	r24, 0x07	; 7
     a7a:	80 93 f0 01 	sts	0x01F0, r24
     a7e:	38 c0       	rjmp	.+112    	; 0xaf0 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
     a80:	18 99       	sbic	0x03, 0	; 3
     a82:	05 c0       	rjmp	.+10     	; 0xa8e <ButtonPress2+0x17a>
		{
			while(~PINB & 0x01){}
     a84:	18 9b       	sbis	0x03, 0	; 3
     a86:	fe cf       	rjmp	.-4      	; 0xa84 <ButtonPress2+0x170>
			Press_sec_level = Press_state6;
     a88:	86 e0       	ldi	r24, 0x06	; 6
     a8a:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     a8e:	19 9b       	sbis	0x03, 1	; 3
     a90:	04 c0       	rjmp	.+8      	; 0xa9a <ButtonPress2+0x186>
     a92:	1a 9b       	sbis	0x03, 2	; 3
     a94:	02 c0       	rjmp	.+4      	; 0xa9a <ButtonPress2+0x186>
     a96:	1b 99       	sbic	0x03, 3	; 3
     a98:	1e c0       	rjmp	.+60     	; 0xad6 <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     a9a:	20 91 00 01 	lds	r18, 0x0100
     a9e:	82 2f       	mov	r24, r18
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	99 23       	and	r25, r25
     aa6:	1c f0       	brlt	.+6      	; 0xaae <ButtonPress2+0x19a>
			{
				lives--;
     aa8:	21 50       	subi	r18, 0x01	; 1
     aaa:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     aae:	80 91 00 01 	lds	r24, 0x0100
     ab2:	81 11       	cpse	r24, r1
     ab4:	03 c0       	rjmp	.+6      	; 0xabc <ButtonPress2+0x1a8>
			{
				global_g = 20;
     ab6:	84 e1       	ldi	r24, 0x14	; 20
     ab8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     abc:	87 e0       	ldi	r24, 0x07	; 7
     abe:	80 93 f0 01 	sts	0x01F0, r24
     ac2:	16 c0       	rjmp	.+44     	; 0xaf0 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
     ac4:	1c 99       	sbic	0x03, 4	; 3
     ac6:	3e c0       	rjmp	.+124    	; 0xb44 <ButtonPress2+0x230>
		{
			Press_sec_level = Off2;
     ac8:	88 e0       	ldi	r24, 0x08	; 8
     aca:	80 93 f0 01 	sts	0x01F0, r24
     ace:	44 c0       	rjmp	.+136    	; 0xb58 <ButtonPress2+0x244>
		}
		break;
		default:
		Press_sec_level = Init2;
     ad0:	10 92 f0 01 	sts	0x01F0, r1
     ad4:	08 95       	ret
	}
	switch(Press_sec_level)
     ad6:	80 91 f0 01 	lds	r24, 0x01F0
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	fc 01       	movw	r30, r24
     ade:	31 97       	sbiw	r30, 0x01	; 1
     ae0:	e8 30       	cpi	r30, 0x08	; 8
     ae2:	f1 05       	cpc	r31, r1
     ae4:	08 f0       	brcs	.+2      	; 0xae8 <ButtonPress2+0x1d4>
     ae6:	40 c0       	rjmp	.+128    	; 0xb68 <ButtonPress2+0x254>
     ae8:	e5 5a       	subi	r30, 0xA5	; 165
     aea:	ff 4f       	sbci	r31, 0xFF	; 255
     aec:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{		
		case Error2:
		PORTA = 0x10;
     af0:	80 e1       	ldi	r24, 0x10	; 16
     af2:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     af4:	80 91 00 01 	lds	r24, 0x0100
     af8:	1f dd       	rcall	.-1474   	; 0x538 <simon_SevenSeg>
     afa:	01 cd       	rjmp	.-1534   	; 0x4fe <transmit_data>
		break;
     afc:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
     afe:	81 e0       	ldi	r24, 0x01	; 1
     b00:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b02:	80 91 00 01 	lds	r24, 0x0100
     b06:	18 dd       	rcall	.-1488   	; 0x538 <simon_SevenSeg>
     b08:	fa cc       	rjmp	.-1548   	; 0x4fe <transmit_data>
		break;
     b0a:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
     b0c:	84 e0       	ldi	r24, 0x04	; 4
     b0e:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b10:	80 91 00 01 	lds	r24, 0x0100
     b14:	11 dd       	rcall	.-1502   	; 0x538 <simon_SevenSeg>
     b16:	f3 cc       	rjmp	.-1562   	; 0x4fe <transmit_data>
		break;
     b18:	08 95       	ret

		case Press_state3:
		PORTA = 0x08;
     b1a:	88 e0       	ldi	r24, 0x08	; 8
     b1c:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b1e:	80 91 00 01 	lds	r24, 0x0100
     b22:	0a dd       	rcall	.-1516   	; 0x538 <simon_SevenSeg>
     b24:	ec cc       	rjmp	.-1576   	; 0x4fe <transmit_data>
		break;
     b26:	08 95       	ret

		case Press_state4:
		PORTA = 0x01;
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b2c:	80 91 00 01 	lds	r24, 0x0100
     b30:	03 dd       	rcall	.-1530   	; 0x538 <simon_SevenSeg>
     b32:	e5 cc       	rjmp	.-1590   	; 0x4fe <transmit_data>
		break;
     b34:	08 95       	ret

		case Press_state5:
		PORTA = 0x02;
     b36:	82 e0       	ldi	r24, 0x02	; 2
     b38:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     b3a:	80 91 00 01 	lds	r24, 0x0100
     b3e:	fc dc       	rcall	.-1544   	; 0x538 <simon_SevenSeg>
     b40:	de cc       	rjmp	.-1604   	; 0x4fe <transmit_data>
		break;
     b42:	08 95       	ret

		case Press_state6:
		PORTA = 0x01;
     b44:	81 e0       	ldi	r24, 0x01	; 1
     b46:	82 b9       	out	0x02, r24	; 2
		LCD_DisplayString(1, "Good Job");
     b48:	6a e2       	ldi	r22, 0x2A	; 42
     b4a:	71 e0       	ldi	r23, 0x01	; 1
     b4c:	c1 db       	rcall	.-2174   	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
     b4e:	80 91 00 01 	lds	r24, 0x0100
     b52:	f2 dc       	rcall	.-1564   	; 0x538 <simon_SevenSeg>
     b54:	d4 cc       	rjmp	.-1624   	; 0x4fe <transmit_data>
		break;
     b56:	08 95       	ret

		case Off2:
		PORTA = 0x00;
     b58:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     b5a:	80 91 00 01 	lds	r24, 0x0100
     b5e:	ec dc       	rcall	.-1576   	; 0x538 <simon_SevenSeg>
     b60:	ce dc       	rcall	.-1636   	; 0x4fe <transmit_data>
		global_g = 4;
     b62:	84 e0       	ldi	r24, 0x04	; 4
     b64:	80 93 ea 01 	sts	0x01EA, r24
     b68:	08 95       	ret

00000b6a <TickFct_Machine3>:
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
     b6a:	80 91 f1 01 	lds	r24, 0x01F1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	8a 30       	cpi	r24, 0x0A	; 10
     b72:	91 05       	cpc	r25, r1
     b74:	d8 f5       	brcc	.+118    	; 0xbec <TickFct_Machine3+0x82>
     b76:	fc 01       	movw	r30, r24
     b78:	ed 59       	subi	r30, 0x9D	; 157
     b7a:	ff 4f       	sbci	r31, 0xFF	; 255
     b7c:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{
		case SM3_off:
		LCD_DisplayString(1, "Level Three");
     b80:	68 e5       	ldi	r22, 0x58	; 88
     b82:	71 e0       	ldi	r23, 0x01	; 1
     b84:	81 e0       	ldi	r24, 0x01	; 1
     b86:	a4 db       	rcall	.-2232   	; 0x2d0 <LCD_DisplayString>
		if(global_g == 4)
     b88:	80 91 ea 01 	lds	r24, 0x01EA
     b8c:	84 30       	cpi	r24, 0x04	; 4
     b8e:	71 f5       	brne	.+92     	; 0xbec <TickFct_Machine3+0x82>
		{
			if(~PINB & 0x01)
     b90:	18 99       	sbic	0x03, 0	; 3
     b92:	06 c0       	rjmp	.+12     	; 0xba0 <TickFct_Machine3+0x36>
			{
				while(~PINB & 0x01){}
     b94:	18 9b       	sbis	0x03, 0	; 3
     b96:	fe cf       	rjmp	.-4      	; 0xb94 <TickFct_Machine3+0x2a>
				SM3_State = SM3_on1;
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	80 93 f1 01 	sts	0x01F1, r24
     b9e:	33 c0       	rjmp	.+102    	; 0xc06 <TickFct_Machine3+0x9c>
			}
			else
			{
				SM3_State = SM3_off;
     ba0:	10 92 f1 01 	sts	0x01F1, r1
     ba4:	2e c0       	rjmp	.+92     	; 0xc02 <TickFct_Machine3+0x98>
			}	
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
     ba6:	82 e0       	ldi	r24, 0x02	; 2
     ba8:	80 93 f1 01 	sts	0x01F1, r24
     bac:	2f c0       	rjmp	.+94     	; 0xc0c <TickFct_Machine3+0xa2>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
     bae:	83 e0       	ldi	r24, 0x03	; 3
     bb0:	80 93 f1 01 	sts	0x01F1, r24
     bb4:	2e c0       	rjmp	.+92     	; 0xc12 <TickFct_Machine3+0xa8>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
     bb6:	84 e0       	ldi	r24, 0x04	; 4
     bb8:	80 93 f1 01 	sts	0x01F1, r24
     bbc:	2d c0       	rjmp	.+90     	; 0xc18 <TickFct_Machine3+0xae>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
     bbe:	85 e0       	ldi	r24, 0x05	; 5
     bc0:	80 93 f1 01 	sts	0x01F1, r24
     bc4:	2c c0       	rjmp	.+88     	; 0xc1e <TickFct_Machine3+0xb4>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
     bc6:	86 e0       	ldi	r24, 0x06	; 6
     bc8:	80 93 f1 01 	sts	0x01F1, r24
     bcc:	2b c0       	rjmp	.+86     	; 0xc24 <TickFct_Machine3+0xba>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	80 93 f1 01 	sts	0x01F1, r24
     bd4:	2a c0       	rjmp	.+84     	; 0xc2a <TickFct_Machine3+0xc0>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
     bd6:	88 e0       	ldi	r24, 0x08	; 8
     bd8:	80 93 f1 01 	sts	0x01F1, r24
     bdc:	29 c0       	rjmp	.+82     	; 0xc30 <TickFct_Machine3+0xc6>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
     bde:	89 e0       	ldi	r24, 0x09	; 9
     be0:	80 93 f1 01 	sts	0x01F1, r24
     be4:	28 c0       	rjmp	.+80     	; 0xc36 <TickFct_Machine3+0xcc>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
     be6:	10 92 f1 01 	sts	0x01F1, r1
     bea:	0b c0       	rjmp	.+22     	; 0xc02 <TickFct_Machine3+0x98>
	}
	switch(SM3_State)
     bec:	80 91 f1 01 	lds	r24, 0x01F1
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	8a 30       	cpi	r24, 0x0A	; 10
     bf4:	91 05       	cpc	r25, r1
     bf6:	40 f5       	brcc	.+80     	; 0xc48 <TickFct_Machine3+0xde>
     bf8:	fc 01       	movw	r30, r24
     bfa:	e3 59       	subi	r30, 0x93	; 147
     bfc:	ff 4f       	sbci	r31, 0xFF	; 255
     bfe:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
     c02:	12 b8       	out	0x02, r1	; 2
		break;
     c04:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
     c06:	82 e0       	ldi	r24, 0x02	; 2
     c08:	82 b9       	out	0x02, r24	; 2
		break;
     c0a:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
     c0c:	84 e0       	ldi	r24, 0x04	; 4
     c0e:	82 b9       	out	0x02, r24	; 2
		break;
     c10:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	82 b9       	out	0x02, r24	; 2
		break;
     c16:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
     c18:	88 e0       	ldi	r24, 0x08	; 8
     c1a:	82 b9       	out	0x02, r24	; 2
		break;
     c1c:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
     c1e:	82 e0       	ldi	r24, 0x02	; 2
     c20:	82 b9       	out	0x02, r24	; 2
		break;
     c22:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
     c24:	84 e0       	ldi	r24, 0x04	; 4
     c26:	82 b9       	out	0x02, r24	; 2
		break;
     c28:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
     c2a:	81 e0       	ldi	r24, 0x01	; 1
     c2c:	82 b9       	out	0x02, r24	; 2
		break;
     c2e:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
     c30:	82 e0       	ldi	r24, 0x02	; 2
     c32:	82 b9       	out	0x02, r24	; 2
		break;
     c34:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
     c36:	88 e0       	ldi	r24, 0x08	; 8
     c38:	82 b9       	out	0x02, r24	; 2
		LCD_DisplayString(1, "Leggo");
     c3a:	64 e6       	ldi	r22, 0x64	; 100
     c3c:	71 e0       	ldi	r23, 0x01	; 1
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	47 db       	rcall	.-2418   	; 0x2d0 <LCD_DisplayString>
		global_g = 5;
     c42:	85 e0       	ldi	r24, 0x05	; 5
     c44:	80 93 ea 01 	sts	0x01EA, r24
     c48:	08 95       	ret

00000c4a <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
     c4a:	80 91 f7 01 	lds	r24, 0x01F7
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	8b 30       	cpi	r24, 0x0B	; 11
     c52:	91 05       	cpc	r25, r1
     c54:	08 f0       	brcs	.+2      	; 0xc58 <ButtonPress3+0xe>
     c56:	4b c1       	rjmp	.+662    	; 0xeee <ButtonPress3+0x2a4>
     c58:	fc 01       	movw	r30, r24
     c5a:	e9 58       	subi	r30, 0x89	; 137
     c5c:	ff 4f       	sbci	r31, 0xFF	; 255
     c5e:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
     c62:	80 91 ea 01 	lds	r24, 0x01EA
     c66:	85 30       	cpi	r24, 0x05	; 5
     c68:	09 f0       	breq	.+2      	; 0xc6c <ButtonPress3+0x22>
     c6a:	a0 c1       	rjmp	.+832    	; 0xfac <ButtonPress3+0x362>
		{
			PORTA = 0x00;
     c6c:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
     c6e:	19 99       	sbic	0x03, 1	; 3
     c70:	05 c0       	rjmp	.+10     	; 0xc7c <ButtonPress3+0x32>
			{
				while(~PINB & 0x02){}
     c72:	19 9b       	sbis	0x03, 1	; 3
     c74:	fe cf       	rjmp	.-4      	; 0xc72 <ButtonPress3+0x28>
				Press_third_level = Press3_state1;
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	80 93 f7 01 	sts	0x01F7, r24
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     c7c:	18 9b       	sbis	0x03, 0	; 3
     c7e:	04 c0       	rjmp	.+8      	; 0xc88 <ButtonPress3+0x3e>
     c80:	1a 9b       	sbis	0x03, 2	; 3
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <ButtonPress3+0x3e>
     c84:	1b 99       	sbic	0x03, 3	; 3
     c86:	33 c1       	rjmp	.+614    	; 0xeee <ButtonPress3+0x2a4>
			{
				if(lives - 1 > -1)
     c88:	20 91 00 01 	lds	r18, 0x0100
     c8c:	82 2f       	mov	r24, r18
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	01 97       	sbiw	r24, 0x01	; 1
     c92:	99 23       	and	r25, r25
     c94:	1c f0       	brlt	.+6      	; 0xc9c <ButtonPress3+0x52>
				{
					lives--;
     c96:	21 50       	subi	r18, 0x01	; 1
     c98:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
     c9c:	80 91 00 01 	lds	r24, 0x0100
     ca0:	81 11       	cpse	r24, r1
     ca2:	03 c0       	rjmp	.+6      	; 0xcaa <ButtonPress3+0x60>
				{
					global_g = 20;
     ca4:	84 e1       	ldi	r24, 0x14	; 20
     ca6:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_third_level = Error3;
     caa:	8a e0       	ldi	r24, 0x0A	; 10
     cac:	80 93 f7 01 	sts	0x01F7, r24
     cb0:	2b c1       	rjmp	.+598    	; 0xf08 <ButtonPress3+0x2be>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
     cb2:	19 99       	sbic	0x03, 1	; 3
     cb4:	29 c1       	rjmp	.+594    	; 0xf08 <ButtonPress3+0x2be>
		{
			while(~PINB & 0x02){}
     cb6:	19 9b       	sbis	0x03, 1	; 3
     cb8:	fe cf       	rjmp	.-4      	; 0xcb6 <ButtonPress3+0x6c>
			Press_third_level = Press3_state1;
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	80 93 f7 01 	sts	0x01F7, r24
     cc0:	2a c1       	rjmp	.+596    	; 0xf16 <ButtonPress3+0x2cc>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
     cc2:	1a 99       	sbic	0x03, 2	; 3
     cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <ButtonPress3+0x86>
		{
			
			while(~PINB & 0x04){}
     cc6:	1a 9b       	sbis	0x03, 2	; 3
     cc8:	fe cf       	rjmp	.-4      	; 0xcc6 <ButtonPress3+0x7c>
			Press_third_level = Press3_state2;
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     cd0:	19 9b       	sbis	0x03, 1	; 3
     cd2:	04 c0       	rjmp	.+8      	; 0xcdc <ButtonPress3+0x92>
     cd4:	18 9b       	sbis	0x03, 0	; 3
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <ButtonPress3+0x92>
     cd8:	1b 99       	sbic	0x03, 3	; 3
     cda:	09 c1       	rjmp	.+530    	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     cdc:	20 91 00 01 	lds	r18, 0x0100
     ce0:	82 2f       	mov	r24, r18
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	01 97       	sbiw	r24, 0x01	; 1
     ce6:	99 23       	and	r25, r25
     ce8:	1c f0       	brlt	.+6      	; 0xcf0 <ButtonPress3+0xa6>
			{
				lives--;
     cea:	21 50       	subi	r18, 0x01	; 1
     cec:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     cf0:	80 91 00 01 	lds	r24, 0x0100
     cf4:	81 11       	cpse	r24, r1
     cf6:	03 c0       	rjmp	.+6      	; 0xcfe <ButtonPress3+0xb4>
			{
				global_g = 20;
     cf8:	84 e1       	ldi	r24, 0x14	; 20
     cfa:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     cfe:	8a e0       	ldi	r24, 0x0A	; 10
     d00:	80 93 f7 01 	sts	0x01F7, r24
     d04:	01 c1       	rjmp	.+514    	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
     d06:	18 99       	sbic	0x03, 0	; 3
     d08:	05 c0       	rjmp	.+10     	; 0xd14 <ButtonPress3+0xca>
		{
			while(~PINB & 0x01){}
     d0a:	18 9b       	sbis	0x03, 0	; 3
     d0c:	fe cf       	rjmp	.-4      	; 0xd0a <ButtonPress3+0xc0>
			Press_third_level = Press3_state3;
     d0e:	83 e0       	ldi	r24, 0x03	; 3
     d10:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     d14:	19 9b       	sbis	0x03, 1	; 3
     d16:	04 c0       	rjmp	.+8      	; 0xd20 <ButtonPress3+0xd6>
     d18:	1a 9b       	sbis	0x03, 2	; 3
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <ButtonPress3+0xd6>
     d1c:	1b 99       	sbic	0x03, 3	; 3
     d1e:	e7 c0       	rjmp	.+462    	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     d20:	20 91 00 01 	lds	r18, 0x0100
     d24:	82 2f       	mov	r24, r18
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	01 97       	sbiw	r24, 0x01	; 1
     d2a:	99 23       	and	r25, r25
     d2c:	1c f0       	brlt	.+6      	; 0xd34 <ButtonPress3+0xea>
			{
				lives--;
     d2e:	21 50       	subi	r18, 0x01	; 1
     d30:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     d34:	80 91 00 01 	lds	r24, 0x0100
     d38:	81 11       	cpse	r24, r1
     d3a:	03 c0       	rjmp	.+6      	; 0xd42 <ButtonPress3+0xf8>
			{
				global_g = 20;
     d3c:	84 e1       	ldi	r24, 0x14	; 20
     d3e:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     d42:	8a e0       	ldi	r24, 0x0A	; 10
     d44:	80 93 f7 01 	sts	0x01F7, r24
     d48:	df c0       	rjmp	.+446    	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
     d4a:	1b 99       	sbic	0x03, 3	; 3
     d4c:	05 c0       	rjmp	.+10     	; 0xd58 <ButtonPress3+0x10e>
		{
			while(~PINB & 0x08){}
     d4e:	1b 9b       	sbis	0x03, 3	; 3
     d50:	fe cf       	rjmp	.-4      	; 0xd4e <ButtonPress3+0x104>
			Press_third_level = Press3_state4;
     d52:	84 e0       	ldi	r24, 0x04	; 4
     d54:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     d58:	19 9b       	sbis	0x03, 1	; 3
     d5a:	04 c0       	rjmp	.+8      	; 0xd64 <ButtonPress3+0x11a>
     d5c:	1a 9b       	sbis	0x03, 2	; 3
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <ButtonPress3+0x11a>
     d60:	18 99       	sbic	0x03, 0	; 3
     d62:	c5 c0       	rjmp	.+394    	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     d64:	20 91 00 01 	lds	r18, 0x0100
     d68:	82 2f       	mov	r24, r18
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	01 97       	sbiw	r24, 0x01	; 1
     d6e:	99 23       	and	r25, r25
     d70:	1c f0       	brlt	.+6      	; 0xd78 <ButtonPress3+0x12e>
			{
				lives--;
     d72:	21 50       	subi	r18, 0x01	; 1
     d74:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     d78:	80 91 00 01 	lds	r24, 0x0100
     d7c:	81 11       	cpse	r24, r1
     d7e:	03 c0       	rjmp	.+6      	; 0xd86 <ButtonPress3+0x13c>
			{
				global_g = 20;
     d80:	84 e1       	ldi	r24, 0x14	; 20
     d82:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     d86:	8a e0       	ldi	r24, 0x0A	; 10
     d88:	80 93 f7 01 	sts	0x01F7, r24
     d8c:	bd c0       	rjmp	.+378    	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
     d8e:	19 99       	sbic	0x03, 1	; 3
     d90:	05 c0       	rjmp	.+10     	; 0xd9c <ButtonPress3+0x152>
		{
			while(~PINB & 0x02){}
     d92:	19 9b       	sbis	0x03, 1	; 3
     d94:	fe cf       	rjmp	.-4      	; 0xd92 <ButtonPress3+0x148>
			Press_third_level = Press3_state5;
     d96:	85 e0       	ldi	r24, 0x05	; 5
     d98:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     d9c:	18 9b       	sbis	0x03, 0	; 3
     d9e:	04 c0       	rjmp	.+8      	; 0xda8 <ButtonPress3+0x15e>
     da0:	1a 9b       	sbis	0x03, 2	; 3
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <ButtonPress3+0x15e>
     da4:	1b 99       	sbic	0x03, 3	; 3
     da6:	a3 c0       	rjmp	.+326    	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     da8:	20 91 00 01 	lds	r18, 0x0100
     dac:	82 2f       	mov	r24, r18
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	99 23       	and	r25, r25
     db4:	1c f0       	brlt	.+6      	; 0xdbc <ButtonPress3+0x172>
			{
				lives--;
     db6:	21 50       	subi	r18, 0x01	; 1
     db8:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     dbc:	80 91 00 01 	lds	r24, 0x0100
     dc0:	81 11       	cpse	r24, r1
     dc2:	03 c0       	rjmp	.+6      	; 0xdca <ButtonPress3+0x180>
			{
				global_g = 20;
     dc4:	84 e1       	ldi	r24, 0x14	; 20
     dc6:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     dca:	8a e0       	ldi	r24, 0x0A	; 10
     dcc:	80 93 f7 01 	sts	0x01F7, r24
     dd0:	9b c0       	rjmp	.+310    	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
     dd2:	1a 99       	sbic	0x03, 2	; 3
     dd4:	05 c0       	rjmp	.+10     	; 0xde0 <ButtonPress3+0x196>
		{
			
			while(~PINB & 0x04){}
     dd6:	1a 9b       	sbis	0x03, 2	; 3
     dd8:	fe cf       	rjmp	.-4      	; 0xdd6 <ButtonPress3+0x18c>
			Press_third_level = Press3_state6;
     dda:	86 e0       	ldi	r24, 0x06	; 6
     ddc:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     de0:	19 9b       	sbis	0x03, 1	; 3
     de2:	04 c0       	rjmp	.+8      	; 0xdec <ButtonPress3+0x1a2>
     de4:	18 9b       	sbis	0x03, 0	; 3
     de6:	02 c0       	rjmp	.+4      	; 0xdec <ButtonPress3+0x1a2>
     de8:	1b 99       	sbic	0x03, 3	; 3
     dea:	81 c0       	rjmp	.+258    	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     dec:	20 91 00 01 	lds	r18, 0x0100
     df0:	82 2f       	mov	r24, r18
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	01 97       	sbiw	r24, 0x01	; 1
     df6:	99 23       	and	r25, r25
     df8:	1c f0       	brlt	.+6      	; 0xe00 <ButtonPress3+0x1b6>
			{
				lives--;
     dfa:	21 50       	subi	r18, 0x01	; 1
     dfc:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     e00:	80 91 00 01 	lds	r24, 0x0100
     e04:	81 11       	cpse	r24, r1
     e06:	03 c0       	rjmp	.+6      	; 0xe0e <ButtonPress3+0x1c4>
			{
				global_g = 20;
     e08:	84 e1       	ldi	r24, 0x14	; 20
     e0a:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     e0e:	8a e0       	ldi	r24, 0x0A	; 10
     e10:	80 93 f7 01 	sts	0x01F7, r24
     e14:	79 c0       	rjmp	.+242    	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
     e16:	18 99       	sbic	0x03, 0	; 3
     e18:	05 c0       	rjmp	.+10     	; 0xe24 <ButtonPress3+0x1da>
		{
			while(~PINB & 0x01){}
     e1a:	18 9b       	sbis	0x03, 0	; 3
     e1c:	fe cf       	rjmp	.-4      	; 0xe1a <ButtonPress3+0x1d0>
			Press_third_level = Press3_state7;
     e1e:	87 e0       	ldi	r24, 0x07	; 7
     e20:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     e24:	19 9b       	sbis	0x03, 1	; 3
     e26:	04 c0       	rjmp	.+8      	; 0xe30 <ButtonPress3+0x1e6>
     e28:	1a 9b       	sbis	0x03, 2	; 3
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <ButtonPress3+0x1e6>
     e2c:	1b 99       	sbic	0x03, 3	; 3
     e2e:	5f c0       	rjmp	.+190    	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     e30:	20 91 00 01 	lds	r18, 0x0100
     e34:	82 2f       	mov	r24, r18
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	01 97       	sbiw	r24, 0x01	; 1
     e3a:	99 23       	and	r25, r25
     e3c:	1c f0       	brlt	.+6      	; 0xe44 <ButtonPress3+0x1fa>
			{
				lives--;
     e3e:	21 50       	subi	r18, 0x01	; 1
     e40:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     e44:	80 91 00 01 	lds	r24, 0x0100
     e48:	81 11       	cpse	r24, r1
     e4a:	03 c0       	rjmp	.+6      	; 0xe52 <ButtonPress3+0x208>
			{
				global_g = 20;
     e4c:	84 e1       	ldi	r24, 0x14	; 20
     e4e:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     e52:	8a e0       	ldi	r24, 0x0A	; 10
     e54:	80 93 f7 01 	sts	0x01F7, r24
     e58:	57 c0       	rjmp	.+174    	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
     e5a:	19 99       	sbic	0x03, 1	; 3
     e5c:	05 c0       	rjmp	.+10     	; 0xe68 <ButtonPress3+0x21e>
		{
			while(~PINB & 0x02){}
     e5e:	19 9b       	sbis	0x03, 1	; 3
     e60:	fe cf       	rjmp	.-4      	; 0xe5e <ButtonPress3+0x214>
			Press_third_level = Press3_state8;
     e62:	88 e0       	ldi	r24, 0x08	; 8
     e64:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     e68:	18 9b       	sbis	0x03, 0	; 3
     e6a:	04 c0       	rjmp	.+8      	; 0xe74 <ButtonPress3+0x22a>
     e6c:	1a 9b       	sbis	0x03, 2	; 3
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <ButtonPress3+0x22a>
     e70:	1b 99       	sbic	0x03, 3	; 3
     e72:	3d c0       	rjmp	.+122    	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     e74:	20 91 00 01 	lds	r18, 0x0100
     e78:	82 2f       	mov	r24, r18
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	01 97       	sbiw	r24, 0x01	; 1
     e7e:	99 23       	and	r25, r25
     e80:	1c f0       	brlt	.+6      	; 0xe88 <ButtonPress3+0x23e>
			{
				lives--;
     e82:	21 50       	subi	r18, 0x01	; 1
     e84:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     e88:	80 91 00 01 	lds	r24, 0x0100
     e8c:	81 11       	cpse	r24, r1
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <ButtonPress3+0x24c>
			{
				global_g = 20;
     e90:	84 e1       	ldi	r24, 0x14	; 20
     e92:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     e96:	8a e0       	ldi	r24, 0x0A	; 10
     e98:	80 93 f7 01 	sts	0x01F7, r24
     e9c:	35 c0       	rjmp	.+106    	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
     e9e:	1b 99       	sbic	0x03, 3	; 3
     ea0:	05 c0       	rjmp	.+10     	; 0xeac <ButtonPress3+0x262>
		{
			while(~PINB & 0x08){}
     ea2:	1b 9b       	sbis	0x03, 3	; 3
     ea4:	fe cf       	rjmp	.-4      	; 0xea2 <ButtonPress3+0x258>
			Press_third_level = Press3_state9;
     ea6:	89 e0       	ldi	r24, 0x09	; 9
     ea8:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     eac:	19 9b       	sbis	0x03, 1	; 3
     eae:	04 c0       	rjmp	.+8      	; 0xeb8 <ButtonPress3+0x26e>
     eb0:	1a 9b       	sbis	0x03, 2	; 3
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <ButtonPress3+0x26e>
     eb4:	18 99       	sbic	0x03, 0	; 3
     eb6:	1b c0       	rjmp	.+54     	; 0xeee <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     eb8:	20 91 00 01 	lds	r18, 0x0100
     ebc:	82 2f       	mov	r24, r18
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	01 97       	sbiw	r24, 0x01	; 1
     ec2:	99 23       	and	r25, r25
     ec4:	1c f0       	brlt	.+6      	; 0xecc <ButtonPress3+0x282>
			{
				lives--;
     ec6:	21 50       	subi	r18, 0x01	; 1
     ec8:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     ecc:	80 91 00 01 	lds	r24, 0x0100
     ed0:	81 11       	cpse	r24, r1
     ed2:	03 c0       	rjmp	.+6      	; 0xeda <ButtonPress3+0x290>
			{
				global_g = 20;
     ed4:	84 e1       	ldi	r24, 0x14	; 20
     ed6:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     eda:	8a e0       	ldi	r24, 0x0A	; 10
     edc:	80 93 f7 01 	sts	0x01F7, r24
     ee0:	13 c0       	rjmp	.+38     	; 0xf08 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
     ee2:	1c 99       	sbic	0x03, 4	; 3
     ee4:	50 c0       	rjmp	.+160    	; 0xf86 <ButtonPress3+0x33c>
		{
			Press_third_level = Off3;
     ee6:	8b e0       	ldi	r24, 0x0B	; 11
     ee8:	80 93 f7 01 	sts	0x01F7, r24
     eec:	57 c0       	rjmp	.+174    	; 0xf9c <ButtonPress3+0x352>
		}
		break;
	}
	switch(Press_third_level)
     eee:	80 91 f7 01 	lds	r24, 0x01F7
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	fc 01       	movw	r30, r24
     ef6:	31 97       	sbiw	r30, 0x01	; 1
     ef8:	eb 30       	cpi	r30, 0x0B	; 11
     efa:	f1 05       	cpc	r31, r1
     efc:	08 f0       	brcs	.+2      	; 0xf00 <ButtonPress3+0x2b6>
     efe:	56 c0       	rjmp	.+172    	; 0xfac <ButtonPress3+0x362>
     f00:	ee 57       	subi	r30, 0x7E	; 126
     f02:	ff 4f       	sbci	r31, 0xFF	; 255
     f04:	0c 94 c5 0f 	jmp	0x1f8a	; 0x1f8a <__tablejump2__>
	{
		case Error3:
		transmit_data(simon_SevenSeg(lives));
     f08:	80 91 00 01 	lds	r24, 0x0100
     f0c:	15 db       	rcall	.-2518   	; 0x538 <simon_SevenSeg>
     f0e:	f7 da       	rcall	.-2578   	; 0x4fe <transmit_data>
		PORTA = 0x10;
     f10:	80 e1       	ldi	r24, 0x10	; 16
     f12:	82 b9       	out	0x02, r24	; 2
		break;
     f14:	08 95       	ret
		case Press3_state1:
		transmit_data(simon_SevenSeg(lives));
     f16:	80 91 00 01 	lds	r24, 0x0100
     f1a:	0e db       	rcall	.-2532   	; 0x538 <simon_SevenSeg>
     f1c:	f0 da       	rcall	.-2592   	; 0x4fe <transmit_data>
		PORTA = 0x02;
     f1e:	82 e0       	ldi	r24, 0x02	; 2
     f20:	82 b9       	out	0x02, r24	; 2
		break;
     f22:	08 95       	ret
		case Press3_state2:
		transmit_data(simon_SevenSeg(lives));
     f24:	80 91 00 01 	lds	r24, 0x0100
     f28:	07 db       	rcall	.-2546   	; 0x538 <simon_SevenSeg>
     f2a:	e9 da       	rcall	.-2606   	; 0x4fe <transmit_data>
		PORTA = 0x04;
     f2c:	84 e0       	ldi	r24, 0x04	; 4
     f2e:	82 b9       	out	0x02, r24	; 2
		break;
     f30:	08 95       	ret
		case Press3_state3:
		transmit_data(simon_SevenSeg(lives));
     f32:	80 91 00 01 	lds	r24, 0x0100
     f36:	00 db       	rcall	.-2560   	; 0x538 <simon_SevenSeg>
     f38:	e2 da       	rcall	.-2620   	; 0x4fe <transmit_data>
		PORTA = 0x01;
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	82 b9       	out	0x02, r24	; 2
		break;
     f3e:	08 95       	ret
		case Press3_state4:
		transmit_data(simon_SevenSeg(lives));
     f40:	80 91 00 01 	lds	r24, 0x0100
     f44:	f9 da       	rcall	.-2574   	; 0x538 <simon_SevenSeg>
     f46:	db da       	rcall	.-2634   	; 0x4fe <transmit_data>
		PORTA = 0x08;
     f48:	88 e0       	ldi	r24, 0x08	; 8
     f4a:	82 b9       	out	0x02, r24	; 2
		break;
     f4c:	08 95       	ret
		case Press3_state5:
		transmit_data(simon_SevenSeg(lives));
     f4e:	80 91 00 01 	lds	r24, 0x0100
     f52:	f2 da       	rcall	.-2588   	; 0x538 <simon_SevenSeg>
     f54:	d4 da       	rcall	.-2648   	; 0x4fe <transmit_data>
		PORTA = 0x02;
     f56:	82 e0       	ldi	r24, 0x02	; 2
     f58:	82 b9       	out	0x02, r24	; 2
		break;
     f5a:	08 95       	ret
		case Press3_state6:
		transmit_data(simon_SevenSeg(lives));
     f5c:	80 91 00 01 	lds	r24, 0x0100
     f60:	eb da       	rcall	.-2602   	; 0x538 <simon_SevenSeg>
     f62:	cd da       	rcall	.-2662   	; 0x4fe <transmit_data>
		PORTA = 0x04;
     f64:	84 e0       	ldi	r24, 0x04	; 4
     f66:	82 b9       	out	0x02, r24	; 2
		break;
     f68:	08 95       	ret
		case Press3_state7:
		transmit_data(simon_SevenSeg(lives));
     f6a:	80 91 00 01 	lds	r24, 0x0100
     f6e:	e4 da       	rcall	.-2616   	; 0x538 <simon_SevenSeg>
     f70:	c6 da       	rcall	.-2676   	; 0x4fe <transmit_data>
		PORTA = 0x01;
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	82 b9       	out	0x02, r24	; 2
		break;
     f76:	08 95       	ret
		case Press3_state8:
		transmit_data(simon_SevenSeg(lives));
     f78:	80 91 00 01 	lds	r24, 0x0100
     f7c:	dd da       	rcall	.-2630   	; 0x538 <simon_SevenSeg>
     f7e:	bf da       	rcall	.-2690   	; 0x4fe <transmit_data>
		PORTA = 0x02;
     f80:	82 e0       	ldi	r24, 0x02	; 2
     f82:	82 b9       	out	0x02, r24	; 2
		break;
     f84:	08 95       	ret
		case Press3_state9:
		LCD_DisplayString(1, "Success");
     f86:	6a e6       	ldi	r22, 0x6A	; 106
     f88:	71 e0       	ldi	r23, 0x01	; 1
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	a1 d9       	rcall	.-3262   	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
     f8e:	80 91 00 01 	lds	r24, 0x0100
     f92:	d2 da       	rcall	.-2652   	; 0x538 <simon_SevenSeg>
     f94:	b4 da       	rcall	.-2712   	; 0x4fe <transmit_data>
		PORTA = 0x08;
     f96:	88 e0       	ldi	r24, 0x08	; 8
     f98:	82 b9       	out	0x02, r24	; 2
		break;
     f9a:	08 95       	ret
		case Off3:
		PORTA = 0x00;
     f9c:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     f9e:	80 91 00 01 	lds	r24, 0x0100
     fa2:	ca da       	rcall	.-2668   	; 0x538 <simon_SevenSeg>
     fa4:	ac da       	rcall	.-2728   	; 0x4fe <transmit_data>
		global_g = 6;
     fa6:	86 e0       	ldi	r24, 0x06	; 6
     fa8:	80 93 ea 01 	sts	0x01EA, r24
     fac:	08 95       	ret

00000fae <TickFct_Machine4>:
}

enum SM4_States {SM4_off, SM4_on1, SM4_on2, SM4_on3, SM4_on4, SM4_on5, SM4_on6, SM4_on7, SM4_on8, SM4_on9, SM4_on10, SM4_on11, SM4_on12} SM4_States;
void TickFct_Machine4()
{
	switch(SM4_States)
     fae:	80 91 f2 01 	lds	r24, 0x01F2
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	8d 30       	cpi	r24, 0x0D	; 13
     fb6:	91 05       	cpc	r25, r1
     fb8:	08 f0       	brcs	.+2      	; 0xfbc <TickFct_Machine4+0xe>
     fba:	46 c0       	rjmp	.+140    	; 0x1048 <TickFct_Machine4+0x9a>
     fbc:	fc 01       	movw	r30, r24
     fbe:	e3 57       	subi	r30, 0x73	; 115
     fc0:	ff 4f       	sbci	r31, 0xFF	; 255
     fc2:	e3 c7       	rjmp	.+4038   	; 0x1f8a <__tablejump2__>
	{
		case SM4_off:
		LCD_DisplayString(1, "Level Four");
     fc4:	62 e7       	ldi	r22, 0x72	; 114
     fc6:	71 e0       	ldi	r23, 0x01	; 1
     fc8:	81 e0       	ldi	r24, 0x01	; 1
     fca:	82 d9       	rcall	.-3324   	; 0x2d0 <LCD_DisplayString>
		if(global_g == 6)
     fcc:	80 91 ea 01 	lds	r24, 0x01EA
     fd0:	86 30       	cpi	r24, 0x06	; 6
     fd2:	d1 f5       	brne	.+116    	; 0x1048 <TickFct_Machine4+0x9a>
		{
			if(~PINB & 0x01)
     fd4:	18 99       	sbic	0x03, 0	; 3
     fd6:	06 c0       	rjmp	.+12     	; 0xfe4 <TickFct_Machine4+0x36>
			{
				while(~PINB & 0x01){}
     fd8:	18 9b       	sbis	0x03, 0	; 3
     fda:	fe cf       	rjmp	.-4      	; 0xfd8 <TickFct_Machine4+0x2a>
				SM4_States = SM4_on1;
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	80 93 f2 01 	sts	0x01F2, r24
     fe2:	3e c0       	rjmp	.+124    	; 0x1060 <TickFct_Machine4+0xb2>
			}
			else
			{	
				SM4_States = SM4_off;
     fe4:	10 92 f2 01 	sts	0x01F2, r1
     fe8:	39 c0       	rjmp	.+114    	; 0x105c <TickFct_Machine4+0xae>
			}
		}
		break;
		case SM4_on1:
		SM4_States = SM4_on2;
     fea:	82 e0       	ldi	r24, 0x02	; 2
     fec:	80 93 f2 01 	sts	0x01F2, r24
     ff0:	3a c0       	rjmp	.+116    	; 0x1066 <TickFct_Machine4+0xb8>
		break;
		case SM4_on2:
		SM4_States = SM4_on3;
     ff2:	83 e0       	ldi	r24, 0x03	; 3
     ff4:	80 93 f2 01 	sts	0x01F2, r24
     ff8:	39 c0       	rjmp	.+114    	; 0x106c <TickFct_Machine4+0xbe>
		break;
		case SM4_on3:
		SM4_States = SM4_on4;
     ffa:	84 e0       	ldi	r24, 0x04	; 4
     ffc:	80 93 f2 01 	sts	0x01F2, r24
    1000:	38 c0       	rjmp	.+112    	; 0x1072 <TickFct_Machine4+0xc4>
		break;
		case SM4_on4:
		SM4_States = SM4_on5;
    1002:	85 e0       	ldi	r24, 0x05	; 5
    1004:	80 93 f2 01 	sts	0x01F2, r24
    1008:	37 c0       	rjmp	.+110    	; 0x1078 <TickFct_Machine4+0xca>
		break;
		case SM4_on5:
		SM4_States = SM4_on6;
    100a:	86 e0       	ldi	r24, 0x06	; 6
    100c:	80 93 f2 01 	sts	0x01F2, r24
    1010:	36 c0       	rjmp	.+108    	; 0x107e <TickFct_Machine4+0xd0>
		break;
		case SM4_on6:
		SM4_States = SM4_on7;
    1012:	87 e0       	ldi	r24, 0x07	; 7
    1014:	80 93 f2 01 	sts	0x01F2, r24
    1018:	35 c0       	rjmp	.+106    	; 0x1084 <TickFct_Machine4+0xd6>
		break;
		case SM4_on7:
		SM4_States = SM4_on8;
    101a:	88 e0       	ldi	r24, 0x08	; 8
    101c:	80 93 f2 01 	sts	0x01F2, r24
    1020:	34 c0       	rjmp	.+104    	; 0x108a <TickFct_Machine4+0xdc>
		break;
		case SM4_on8:
		SM4_States = SM4_on9;
    1022:	89 e0       	ldi	r24, 0x09	; 9
    1024:	80 93 f2 01 	sts	0x01F2, r24
    1028:	33 c0       	rjmp	.+102    	; 0x1090 <TickFct_Machine4+0xe2>
		break;
		case SM4_on9:
		SM4_States = SM4_on10;
    102a:	8a e0       	ldi	r24, 0x0A	; 10
    102c:	80 93 f2 01 	sts	0x01F2, r24
    1030:	32 c0       	rjmp	.+100    	; 0x1096 <TickFct_Machine4+0xe8>
		break;
		case SM4_on10:
		SM4_States = SM4_on11;
    1032:	8b e0       	ldi	r24, 0x0B	; 11
    1034:	80 93 f2 01 	sts	0x01F2, r24
    1038:	31 c0       	rjmp	.+98     	; 0x109c <TickFct_Machine4+0xee>
		break;
		case SM4_on11:
		SM4_States = SM4_on12;
    103a:	8c e0       	ldi	r24, 0x0C	; 12
    103c:	80 93 f2 01 	sts	0x01F2, r24
    1040:	30 c0       	rjmp	.+96     	; 0x10a2 <TickFct_Machine4+0xf4>
		break;
		case SM4_on12:
		SM4_States = SM4_off;
    1042:	10 92 f2 01 	sts	0x01F2, r1
		break;
    1046:	0a c0       	rjmp	.+20     	; 0x105c <TickFct_Machine4+0xae>
	}
	switch(SM4_States)
    1048:	80 91 f2 01 	lds	r24, 0x01F2
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	8d 30       	cpi	r24, 0x0D	; 13
    1050:	91 05       	cpc	r25, r1
    1052:	80 f5       	brcc	.+96     	; 0x10b4 <TickFct_Machine4+0x106>
    1054:	fc 01       	movw	r30, r24
    1056:	e6 56       	subi	r30, 0x66	; 102
    1058:	ff 4f       	sbci	r31, 0xFF	; 255
    105a:	97 c7       	rjmp	.+3886   	; 0x1f8a <__tablejump2__>
	{
		case SM4_off:
		PORTA = 0x00;
    105c:	12 b8       	out	0x02, r1	; 2
		break;
    105e:	08 95       	ret
		case SM4_on1:
		PORTA = 0x01;
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	82 b9       	out	0x02, r24	; 2
		break;
    1064:	08 95       	ret
		case SM4_on2:
		PORTA = 0x08;
    1066:	88 e0       	ldi	r24, 0x08	; 8
    1068:	82 b9       	out	0x02, r24	; 2
		break;
    106a:	08 95       	ret
		case SM4_on3:
		PORTA = 0x02;
    106c:	82 e0       	ldi	r24, 0x02	; 2
    106e:	82 b9       	out	0x02, r24	; 2
		break;
    1070:	08 95       	ret
		case SM4_on4:
		PORTA = 0x01;
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	82 b9       	out	0x02, r24	; 2
		break;
    1076:	08 95       	ret
		case SM4_on5:
		PORTA = 0x02;
    1078:	82 e0       	ldi	r24, 0x02	; 2
    107a:	82 b9       	out	0x02, r24	; 2
		break;
    107c:	08 95       	ret
		case SM4_on6:
		PORTA = 0x08;
    107e:	88 e0       	ldi	r24, 0x08	; 8
    1080:	82 b9       	out	0x02, r24	; 2
		break;
    1082:	08 95       	ret
		case SM4_on7:
		PORTA = 0x02;
    1084:	82 e0       	ldi	r24, 0x02	; 2
    1086:	82 b9       	out	0x02, r24	; 2
		break;
    1088:	08 95       	ret
		case SM4_on8:
		PORTA = 0x01;
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	82 b9       	out	0x02, r24	; 2
		break;
    108e:	08 95       	ret
		case SM4_on9:
		PORTA = 0x08;
    1090:	88 e0       	ldi	r24, 0x08	; 8
    1092:	82 b9       	out	0x02, r24	; 2
		break;
    1094:	08 95       	ret
		case SM4_on10:
		PORTA = 0x01;
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	82 b9       	out	0x02, r24	; 2
		break;
    109a:	08 95       	ret
		case SM4_on11:
		PORTA = 0x02;
    109c:	82 e0       	ldi	r24, 0x02	; 2
    109e:	82 b9       	out	0x02, r24	; 2
		break;
    10a0:	08 95       	ret
		case SM4_on12:
		LCD_DisplayString(1,"Good Job so far Almost done");
    10a2:	6d e7       	ldi	r22, 0x7D	; 125
    10a4:	71 e0       	ldi	r23, 0x01	; 1
    10a6:	81 e0       	ldi	r24, 0x01	; 1
    10a8:	13 d9       	rcall	.-3546   	; 0x2d0 <LCD_DisplayString>
		PORTA = 0x01;
    10aa:	81 e0       	ldi	r24, 0x01	; 1
    10ac:	82 b9       	out	0x02, r24	; 2
		global_g = 7;
    10ae:	87 e0       	ldi	r24, 0x07	; 7
    10b0:	80 93 ea 01 	sts	0x01EA, r24
    10b4:	08 95       	ret

000010b6 <ButtonPress4>:
}

enum Press_fourth_level{Init4, Press4_state1, Press4_state2, Press4_state3, Press4_state4, Press4_state5, Press4_state6, Press4_state7, Press4_state8, Press4_state9, Press4_state10, Press4_state11, Press4_state12, Error4, Off4} Press_fourth_level;
void ButtonPress4()
{
	switch(Press_fourth_level)
    10b6:	80 91 f4 01 	lds	r24, 0x01F4
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	8e 30       	cpi	r24, 0x0E	; 14
    10be:	91 05       	cpc	r25, r1
    10c0:	08 f0       	brcs	.+2      	; 0x10c4 <ButtonPress4+0xe>
    10c2:	b0 c1       	rjmp	.+864    	; 0x1424 <ButtonPress4+0x36e>
    10c4:	fc 01       	movw	r30, r24
    10c6:	e9 55       	subi	r30, 0x59	; 89
    10c8:	ff 4f       	sbci	r31, 0xFF	; 255
    10ca:	5f c7       	rjmp	.+3774   	; 0x1f8a <__tablejump2__>
	{
		case Init4:
		if(global_g == 7)
    10cc:	80 91 ea 01 	lds	r24, 0x01EA
    10d0:	87 30       	cpi	r24, 0x07	; 7
    10d2:	09 f0       	breq	.+2      	; 0x10d6 <ButtonPress4+0x20>
    10d4:	1c c2       	rjmp	.+1080   	; 0x150e <ButtonPress4+0x458>
		{
			PORTA = 0x00;
    10d6:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x01)
    10d8:	18 99       	sbic	0x03, 0	; 3
    10da:	05 c0       	rjmp	.+10     	; 0x10e6 <ButtonPress4+0x30>
			{
				while(~PINB & 0x01){}
    10dc:	18 9b       	sbis	0x03, 0	; 3
    10de:	fe cf       	rjmp	.-4      	; 0x10dc <ButtonPress4+0x26>
				Press_fourth_level = Press4_state1; 
    10e0:	81 e0       	ldi	r24, 0x01	; 1
    10e2:	80 93 f4 01 	sts	0x01F4, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    10e6:	19 9b       	sbis	0x03, 1	; 3
    10e8:	04 c0       	rjmp	.+8      	; 0x10f2 <ButtonPress4+0x3c>
    10ea:	1a 9b       	sbis	0x03, 2	; 3
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <ButtonPress4+0x3c>
    10ee:	1b 99       	sbic	0x03, 3	; 3
    10f0:	99 c1       	rjmp	.+818    	; 0x1424 <ButtonPress4+0x36e>
			{
				if(lives - 1 > -1)
    10f2:	20 91 00 01 	lds	r18, 0x0100
    10f6:	82 2f       	mov	r24, r18
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	01 97       	sbiw	r24, 0x01	; 1
    10fc:	99 23       	and	r25, r25
    10fe:	1c f0       	brlt	.+6      	; 0x1106 <ButtonPress4+0x50>
				{
					lives--;
    1100:	21 50       	subi	r18, 0x01	; 1
    1102:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
    1106:	80 91 00 01 	lds	r24, 0x0100
    110a:	81 11       	cpse	r24, r1
    110c:	03 c0       	rjmp	.+6      	; 0x1114 <ButtonPress4+0x5e>
				{
					global_g = 20;
    110e:	84 e1       	ldi	r24, 0x14	; 20
    1110:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_fourth_level = Error4;
    1114:	8d e0       	ldi	r24, 0x0D	; 13
    1116:	80 93 f4 01 	sts	0x01F4, r24
    111a:	90 c1       	rjmp	.+800    	; 0x143c <ButtonPress4+0x386>
			}
		}
		break;
		case Press4_state1:
		if(~PINB & 0x08)
    111c:	1b 99       	sbic	0x03, 3	; 3
    111e:	05 c0       	rjmp	.+10     	; 0x112a <ButtonPress4+0x74>
		{
			while(~PINB & 0x08){}
    1120:	1b 9b       	sbis	0x03, 3	; 3
    1122:	fe cf       	rjmp	.-4      	; 0x1120 <ButtonPress4+0x6a>
			Press_fourth_level = Press4_state2;
    1124:	82 e0       	ldi	r24, 0x02	; 2
    1126:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    112a:	19 9b       	sbis	0x03, 1	; 3
    112c:	04 c0       	rjmp	.+8      	; 0x1136 <ButtonPress4+0x80>
    112e:	1a 9b       	sbis	0x03, 2	; 3
    1130:	02 c0       	rjmp	.+4      	; 0x1136 <ButtonPress4+0x80>
    1132:	18 99       	sbic	0x03, 0	; 3
    1134:	77 c1       	rjmp	.+750    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1136:	20 91 00 01 	lds	r18, 0x0100
    113a:	82 2f       	mov	r24, r18
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	01 97       	sbiw	r24, 0x01	; 1
    1140:	99 23       	and	r25, r25
    1142:	1c f0       	brlt	.+6      	; 0x114a <ButtonPress4+0x94>
			{
				lives--;
    1144:	21 50       	subi	r18, 0x01	; 1
    1146:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    114a:	80 91 00 01 	lds	r24, 0x0100
    114e:	81 11       	cpse	r24, r1
    1150:	03 c0       	rjmp	.+6      	; 0x1158 <ButtonPress4+0xa2>
			{
				global_g = 20;
    1152:	84 e1       	ldi	r24, 0x14	; 20
    1154:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1158:	8d e0       	ldi	r24, 0x0D	; 13
    115a:	80 93 f4 01 	sts	0x01F4, r24
    115e:	6e c1       	rjmp	.+732    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state2:
		if(~PINB & 0x02)
    1160:	19 99       	sbic	0x03, 1	; 3
    1162:	05 c0       	rjmp	.+10     	; 0x116e <ButtonPress4+0xb8>
		{
			while(~PINB & 0x02){}
    1164:	19 9b       	sbis	0x03, 1	; 3
    1166:	fe cf       	rjmp	.-4      	; 0x1164 <ButtonPress4+0xae>
			Press_fourth_level = Press4_state3;
    1168:	83 e0       	ldi	r24, 0x03	; 3
    116a:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    116e:	18 9b       	sbis	0x03, 0	; 3
    1170:	04 c0       	rjmp	.+8      	; 0x117a <ButtonPress4+0xc4>
    1172:	1a 9b       	sbis	0x03, 2	; 3
    1174:	02 c0       	rjmp	.+4      	; 0x117a <ButtonPress4+0xc4>
    1176:	1b 99       	sbic	0x03, 3	; 3
    1178:	55 c1       	rjmp	.+682    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    117a:	20 91 00 01 	lds	r18, 0x0100
    117e:	82 2f       	mov	r24, r18
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	01 97       	sbiw	r24, 0x01	; 1
    1184:	99 23       	and	r25, r25
    1186:	1c f0       	brlt	.+6      	; 0x118e <ButtonPress4+0xd8>
			{
				lives--;
    1188:	21 50       	subi	r18, 0x01	; 1
    118a:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    118e:	80 91 00 01 	lds	r24, 0x0100
    1192:	81 11       	cpse	r24, r1
    1194:	03 c0       	rjmp	.+6      	; 0x119c <ButtonPress4+0xe6>
			{
				global_g = 20;
    1196:	84 e1       	ldi	r24, 0x14	; 20
    1198:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    119c:	8d e0       	ldi	r24, 0x0D	; 13
    119e:	80 93 f4 01 	sts	0x01F4, r24
    11a2:	4c c1       	rjmp	.+664    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state3:
		if(~PINB & 0x01)
    11a4:	18 99       	sbic	0x03, 0	; 3
    11a6:	05 c0       	rjmp	.+10     	; 0x11b2 <ButtonPress4+0xfc>
		{
			while(~PINB & 0x01){}
    11a8:	18 9b       	sbis	0x03, 0	; 3
    11aa:	fe cf       	rjmp	.-4      	; 0x11a8 <ButtonPress4+0xf2>
			Press_fourth_level = Press4_state4;
    11ac:	84 e0       	ldi	r24, 0x04	; 4
    11ae:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    11b2:	19 9b       	sbis	0x03, 1	; 3
    11b4:	04 c0       	rjmp	.+8      	; 0x11be <ButtonPress4+0x108>
    11b6:	1a 9b       	sbis	0x03, 2	; 3
    11b8:	02 c0       	rjmp	.+4      	; 0x11be <ButtonPress4+0x108>
    11ba:	1b 99       	sbic	0x03, 3	; 3
    11bc:	33 c1       	rjmp	.+614    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    11be:	20 91 00 01 	lds	r18, 0x0100
    11c2:	82 2f       	mov	r24, r18
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	01 97       	sbiw	r24, 0x01	; 1
    11c8:	99 23       	and	r25, r25
    11ca:	1c f0       	brlt	.+6      	; 0x11d2 <ButtonPress4+0x11c>
			{
				lives--;
    11cc:	21 50       	subi	r18, 0x01	; 1
    11ce:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    11d2:	80 91 00 01 	lds	r24, 0x0100
    11d6:	81 11       	cpse	r24, r1
    11d8:	03 c0       	rjmp	.+6      	; 0x11e0 <ButtonPress4+0x12a>
			{
				global_g = 20;
    11da:	84 e1       	ldi	r24, 0x14	; 20
    11dc:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    11e0:	8d e0       	ldi	r24, 0x0D	; 13
    11e2:	80 93 f4 01 	sts	0x01F4, r24
    11e6:	2a c1       	rjmp	.+596    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state4:
		if(~PINB & 0x02)
    11e8:	19 99       	sbic	0x03, 1	; 3
    11ea:	05 c0       	rjmp	.+10     	; 0x11f6 <ButtonPress4+0x140>
		{
			while(~PINB & 0x02){}
    11ec:	19 9b       	sbis	0x03, 1	; 3
    11ee:	fe cf       	rjmp	.-4      	; 0x11ec <ButtonPress4+0x136>
			Press_fourth_level = Press4_state5;
    11f0:	85 e0       	ldi	r24, 0x05	; 5
    11f2:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    11f6:	18 9b       	sbis	0x03, 0	; 3
    11f8:	04 c0       	rjmp	.+8      	; 0x1202 <ButtonPress4+0x14c>
    11fa:	1a 9b       	sbis	0x03, 2	; 3
    11fc:	02 c0       	rjmp	.+4      	; 0x1202 <ButtonPress4+0x14c>
    11fe:	1b 99       	sbic	0x03, 3	; 3
    1200:	11 c1       	rjmp	.+546    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1202:	20 91 00 01 	lds	r18, 0x0100
    1206:	82 2f       	mov	r24, r18
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	01 97       	sbiw	r24, 0x01	; 1
    120c:	99 23       	and	r25, r25
    120e:	1c f0       	brlt	.+6      	; 0x1216 <ButtonPress4+0x160>
			{
				lives--;
    1210:	21 50       	subi	r18, 0x01	; 1
    1212:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1216:	80 91 00 01 	lds	r24, 0x0100
    121a:	81 11       	cpse	r24, r1
    121c:	03 c0       	rjmp	.+6      	; 0x1224 <ButtonPress4+0x16e>
			{
				global_g = 20;
    121e:	84 e1       	ldi	r24, 0x14	; 20
    1220:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1224:	8d e0       	ldi	r24, 0x0D	; 13
    1226:	80 93 f4 01 	sts	0x01F4, r24
    122a:	08 c1       	rjmp	.+528    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state5:
		if(~PINB & 0x08)
    122c:	1b 99       	sbic	0x03, 3	; 3
    122e:	05 c0       	rjmp	.+10     	; 0x123a <ButtonPress4+0x184>
		{
			while(~PINB & 0x08){}
    1230:	1b 9b       	sbis	0x03, 3	; 3
    1232:	fe cf       	rjmp	.-4      	; 0x1230 <ButtonPress4+0x17a>
			Press_fourth_level = Press4_state6;
    1234:	86 e0       	ldi	r24, 0x06	; 6
    1236:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    123a:	19 9b       	sbis	0x03, 1	; 3
    123c:	04 c0       	rjmp	.+8      	; 0x1246 <ButtonPress4+0x190>
    123e:	1a 9b       	sbis	0x03, 2	; 3
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <ButtonPress4+0x190>
    1242:	18 99       	sbic	0x03, 0	; 3
    1244:	ef c0       	rjmp	.+478    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1246:	20 91 00 01 	lds	r18, 0x0100
    124a:	82 2f       	mov	r24, r18
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	01 97       	sbiw	r24, 0x01	; 1
    1250:	99 23       	and	r25, r25
    1252:	1c f0       	brlt	.+6      	; 0x125a <ButtonPress4+0x1a4>
			{
				lives--;
    1254:	21 50       	subi	r18, 0x01	; 1
    1256:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    125a:	80 91 00 01 	lds	r24, 0x0100
    125e:	81 11       	cpse	r24, r1
    1260:	03 c0       	rjmp	.+6      	; 0x1268 <ButtonPress4+0x1b2>
			{
				global_g = 20;
    1262:	84 e1       	ldi	r24, 0x14	; 20
    1264:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1268:	8d e0       	ldi	r24, 0x0D	; 13
    126a:	80 93 f4 01 	sts	0x01F4, r24
    126e:	e6 c0       	rjmp	.+460    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state6:
		if(~PINB & 0x02)
    1270:	19 99       	sbic	0x03, 1	; 3
    1272:	05 c0       	rjmp	.+10     	; 0x127e <ButtonPress4+0x1c8>
		{
			while(~PINB & 0x02){}
    1274:	19 9b       	sbis	0x03, 1	; 3
    1276:	fe cf       	rjmp	.-4      	; 0x1274 <ButtonPress4+0x1be>
			Press_fourth_level = Press4_state7;
    1278:	87 e0       	ldi	r24, 0x07	; 7
    127a:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    127e:	18 9b       	sbis	0x03, 0	; 3
    1280:	04 c0       	rjmp	.+8      	; 0x128a <ButtonPress4+0x1d4>
    1282:	1a 9b       	sbis	0x03, 2	; 3
    1284:	02 c0       	rjmp	.+4      	; 0x128a <ButtonPress4+0x1d4>
    1286:	1b 99       	sbic	0x03, 3	; 3
    1288:	cd c0       	rjmp	.+410    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    128a:	20 91 00 01 	lds	r18, 0x0100
    128e:	82 2f       	mov	r24, r18
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	01 97       	sbiw	r24, 0x01	; 1
    1294:	99 23       	and	r25, r25
    1296:	1c f0       	brlt	.+6      	; 0x129e <ButtonPress4+0x1e8>
			{
				lives--;
    1298:	21 50       	subi	r18, 0x01	; 1
    129a:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    129e:	80 91 00 01 	lds	r24, 0x0100
    12a2:	81 11       	cpse	r24, r1
    12a4:	03 c0       	rjmp	.+6      	; 0x12ac <ButtonPress4+0x1f6>
			{
				global_g = 20;
    12a6:	84 e1       	ldi	r24, 0x14	; 20
    12a8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    12ac:	8d e0       	ldi	r24, 0x0D	; 13
    12ae:	80 93 f4 01 	sts	0x01F4, r24
    12b2:	c4 c0       	rjmp	.+392    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state7:
		if(~PINB & 0x01)
    12b4:	18 99       	sbic	0x03, 0	; 3
    12b6:	05 c0       	rjmp	.+10     	; 0x12c2 <ButtonPress4+0x20c>
		{
			while(~PINB & 0x01){}
    12b8:	18 9b       	sbis	0x03, 0	; 3
    12ba:	fe cf       	rjmp	.-4      	; 0x12b8 <ButtonPress4+0x202>
			Press_fourth_level = Press4_state8;
    12bc:	88 e0       	ldi	r24, 0x08	; 8
    12be:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    12c2:	19 9b       	sbis	0x03, 1	; 3
    12c4:	04 c0       	rjmp	.+8      	; 0x12ce <ButtonPress4+0x218>
    12c6:	1a 9b       	sbis	0x03, 2	; 3
    12c8:	02 c0       	rjmp	.+4      	; 0x12ce <ButtonPress4+0x218>
    12ca:	1b 99       	sbic	0x03, 3	; 3
    12cc:	ab c0       	rjmp	.+342    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    12ce:	20 91 00 01 	lds	r18, 0x0100
    12d2:	82 2f       	mov	r24, r18
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	01 97       	sbiw	r24, 0x01	; 1
    12d8:	99 23       	and	r25, r25
    12da:	1c f0       	brlt	.+6      	; 0x12e2 <ButtonPress4+0x22c>
			{
				lives--;
    12dc:	21 50       	subi	r18, 0x01	; 1
    12de:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    12e2:	80 91 00 01 	lds	r24, 0x0100
    12e6:	81 11       	cpse	r24, r1
    12e8:	03 c0       	rjmp	.+6      	; 0x12f0 <ButtonPress4+0x23a>
			{
				global_g = 20;
    12ea:	84 e1       	ldi	r24, 0x14	; 20
    12ec:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    12f0:	8d e0       	ldi	r24, 0x0D	; 13
    12f2:	80 93 f4 01 	sts	0x01F4, r24
    12f6:	a2 c0       	rjmp	.+324    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state8:
		if(~PINB & 0x08)
    12f8:	1b 99       	sbic	0x03, 3	; 3
    12fa:	05 c0       	rjmp	.+10     	; 0x1306 <ButtonPress4+0x250>
		{
			while(~PINB & 0x08){}
    12fc:	1b 9b       	sbis	0x03, 3	; 3
    12fe:	fe cf       	rjmp	.-4      	; 0x12fc <ButtonPress4+0x246>
			Press_fourth_level = Press4_state9;
    1300:	89 e0       	ldi	r24, 0x09	; 9
    1302:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1306:	19 9b       	sbis	0x03, 1	; 3
    1308:	04 c0       	rjmp	.+8      	; 0x1312 <ButtonPress4+0x25c>
    130a:	1a 9b       	sbis	0x03, 2	; 3
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <ButtonPress4+0x25c>
    130e:	18 99       	sbic	0x03, 0	; 3
    1310:	89 c0       	rjmp	.+274    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1312:	20 91 00 01 	lds	r18, 0x0100
    1316:	82 2f       	mov	r24, r18
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	01 97       	sbiw	r24, 0x01	; 1
    131c:	99 23       	and	r25, r25
    131e:	1c f0       	brlt	.+6      	; 0x1326 <ButtonPress4+0x270>
			{
				lives--;
    1320:	21 50       	subi	r18, 0x01	; 1
    1322:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1326:	80 91 00 01 	lds	r24, 0x0100
    132a:	81 11       	cpse	r24, r1
    132c:	03 c0       	rjmp	.+6      	; 0x1334 <ButtonPress4+0x27e>
			{
				global_g = 20;
    132e:	84 e1       	ldi	r24, 0x14	; 20
    1330:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1334:	8d e0       	ldi	r24, 0x0D	; 13
    1336:	80 93 f4 01 	sts	0x01F4, r24
    133a:	80 c0       	rjmp	.+256    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state9:
		if(~PINB & 0x01)
    133c:	18 99       	sbic	0x03, 0	; 3
    133e:	05 c0       	rjmp	.+10     	; 0x134a <ButtonPress4+0x294>
		{
			while(~PINB & 0x01){}
    1340:	18 9b       	sbis	0x03, 0	; 3
    1342:	fe cf       	rjmp	.-4      	; 0x1340 <ButtonPress4+0x28a>
			Press_fourth_level = Press4_state10;
    1344:	8a e0       	ldi	r24, 0x0A	; 10
    1346:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    134a:	19 9b       	sbis	0x03, 1	; 3
    134c:	04 c0       	rjmp	.+8      	; 0x1356 <ButtonPress4+0x2a0>
    134e:	1a 9b       	sbis	0x03, 2	; 3
    1350:	02 c0       	rjmp	.+4      	; 0x1356 <ButtonPress4+0x2a0>
    1352:	1b 99       	sbic	0x03, 3	; 3
    1354:	67 c0       	rjmp	.+206    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1356:	20 91 00 01 	lds	r18, 0x0100
    135a:	82 2f       	mov	r24, r18
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	01 97       	sbiw	r24, 0x01	; 1
    1360:	99 23       	and	r25, r25
    1362:	1c f0       	brlt	.+6      	; 0x136a <ButtonPress4+0x2b4>
			{
				lives--;
    1364:	21 50       	subi	r18, 0x01	; 1
    1366:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    136a:	80 91 00 01 	lds	r24, 0x0100
    136e:	81 11       	cpse	r24, r1
    1370:	03 c0       	rjmp	.+6      	; 0x1378 <ButtonPress4+0x2c2>
			{
				global_g = 20;
    1372:	84 e1       	ldi	r24, 0x14	; 20
    1374:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1378:	8d e0       	ldi	r24, 0x0D	; 13
    137a:	80 93 f4 01 	sts	0x01F4, r24
    137e:	5e c0       	rjmp	.+188    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state10:
		if(~PINB & 0x02)
    1380:	19 99       	sbic	0x03, 1	; 3
    1382:	05 c0       	rjmp	.+10     	; 0x138e <ButtonPress4+0x2d8>
		{
			while(~PINB & 0x02){}
    1384:	19 9b       	sbis	0x03, 1	; 3
    1386:	fe cf       	rjmp	.-4      	; 0x1384 <ButtonPress4+0x2ce>
			Press_fourth_level = Press4_state11;
    1388:	8b e0       	ldi	r24, 0x0B	; 11
    138a:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    138e:	18 9b       	sbis	0x03, 0	; 3
    1390:	04 c0       	rjmp	.+8      	; 0x139a <ButtonPress4+0x2e4>
    1392:	1a 9b       	sbis	0x03, 2	; 3
    1394:	02 c0       	rjmp	.+4      	; 0x139a <ButtonPress4+0x2e4>
    1396:	1b 99       	sbic	0x03, 3	; 3
    1398:	45 c0       	rjmp	.+138    	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    139a:	20 91 00 01 	lds	r18, 0x0100
    139e:	82 2f       	mov	r24, r18
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	01 97       	sbiw	r24, 0x01	; 1
    13a4:	99 23       	and	r25, r25
    13a6:	1c f0       	brlt	.+6      	; 0x13ae <ButtonPress4+0x2f8>
			{
				lives--;
    13a8:	21 50       	subi	r18, 0x01	; 1
    13aa:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    13ae:	80 91 00 01 	lds	r24, 0x0100
    13b2:	81 11       	cpse	r24, r1
    13b4:	03 c0       	rjmp	.+6      	; 0x13bc <ButtonPress4+0x306>
			{
				global_g = 20;
    13b6:	84 e1       	ldi	r24, 0x14	; 20
    13b8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    13bc:	8d e0       	ldi	r24, 0x0D	; 13
    13be:	80 93 f4 01 	sts	0x01F4, r24
    13c2:	3c c0       	rjmp	.+120    	; 0x143c <ButtonPress4+0x386>
		}
		break;
		
		case Press4_state11:
		if(~PINB & 0x01)
    13c4:	18 99       	sbic	0x03, 0	; 3
    13c6:	05 c0       	rjmp	.+10     	; 0x13d2 <ButtonPress4+0x31c>
		{
			while(~PINB & 0x01){}
    13c8:	18 9b       	sbis	0x03, 0	; 3
    13ca:	fe cf       	rjmp	.-4      	; 0x13c8 <ButtonPress4+0x312>
			Press_fourth_level = Press4_state12;
    13cc:	8c e0       	ldi	r24, 0x0C	; 12
    13ce:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    13d2:	19 9b       	sbis	0x03, 1	; 3
    13d4:	04 c0       	rjmp	.+8      	; 0x13de <ButtonPress4+0x328>
    13d6:	1a 9b       	sbis	0x03, 2	; 3
    13d8:	02 c0       	rjmp	.+4      	; 0x13de <ButtonPress4+0x328>
    13da:	1b 99       	sbic	0x03, 3	; 3
    13dc:	23 c0       	rjmp	.+70     	; 0x1424 <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    13de:	20 91 00 01 	lds	r18, 0x0100
    13e2:	82 2f       	mov	r24, r18
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	01 97       	sbiw	r24, 0x01	; 1
    13e8:	99 23       	and	r25, r25
    13ea:	1c f0       	brlt	.+6      	; 0x13f2 <ButtonPress4+0x33c>
			{
				lives--;
    13ec:	21 50       	subi	r18, 0x01	; 1
    13ee:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    13f2:	80 91 00 01 	lds	r24, 0x0100
    13f6:	81 11       	cpse	r24, r1
    13f8:	03 c0       	rjmp	.+6      	; 0x1400 <ButtonPress4+0x34a>
			{
				global_g = 20;
    13fa:	84 e1       	ldi	r24, 0x14	; 20
    13fc:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1400:	8d e0       	ldi	r24, 0x0D	; 13
    1402:	80 93 f4 01 	sts	0x01F4, r24
    1406:	1a c0       	rjmp	.+52     	; 0x143c <ButtonPress4+0x386>
		}
		break;
		case Press4_state12:
		if(~PINB & 0x10)
    1408:	1c 99       	sbic	0x03, 4	; 3
    140a:	6c c0       	rjmp	.+216    	; 0x14e4 <ButtonPress4+0x42e>
		{
			Press_fourth_level = Off4;
    140c:	8e e0       	ldi	r24, 0x0E	; 14
    140e:	80 93 f4 01 	sts	0x01F4, r24
    1412:	74 c0       	rjmp	.+232    	; 0x14fc <ButtonPress4+0x446>
		}
		break;
		case Error4:
		if(~PINB & 0x01)
    1414:	18 99       	sbic	0x03, 0	; 3
    1416:	12 c0       	rjmp	.+36     	; 0x143c <ButtonPress4+0x386>
		{
			while(~PINB & 0x01){}
    1418:	18 9b       	sbis	0x03, 0	; 3
    141a:	fe cf       	rjmp	.-4      	; 0x1418 <ButtonPress4+0x362>
			Press_fourth_level = Press4_state1;
    141c:	81 e0       	ldi	r24, 0x01	; 1
    141e:	80 93 f4 01 	sts	0x01F4, r24
    1422:	13 c0       	rjmp	.+38     	; 0x144a <ButtonPress4+0x394>
		}
	}
	switch(Press_fourth_level)
    1424:	80 91 f4 01 	lds	r24, 0x01F4
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	fc 01       	movw	r30, r24
    142c:	31 97       	sbiw	r30, 0x01	; 1
    142e:	ee 30       	cpi	r30, 0x0E	; 14
    1430:	f1 05       	cpc	r31, r1
    1432:	08 f0       	brcs	.+2      	; 0x1436 <ButtonPress4+0x380>
    1434:	6c c0       	rjmp	.+216    	; 0x150e <ButtonPress4+0x458>
    1436:	eb 54       	subi	r30, 0x4B	; 75
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	a7 c5       	rjmp	.+2894   	; 0x1f8a <__tablejump2__>
	{
		case Error4:
		transmit_data(simon_SevenSeg(lives));
    143c:	80 91 00 01 	lds	r24, 0x0100
    1440:	7b d8       	rcall	.-3850   	; 0x538 <simon_SevenSeg>
    1442:	5d d8       	rcall	.-3910   	; 0x4fe <transmit_data>
		PORTA = 0x10;
    1444:	80 e1       	ldi	r24, 0x10	; 16
    1446:	82 b9       	out	0x02, r24	; 2
		break;
    1448:	08 95       	ret
		case Press4_state1:
		transmit_data(simon_SevenSeg(lives));
    144a:	80 91 00 01 	lds	r24, 0x0100
    144e:	74 d8       	rcall	.-3864   	; 0x538 <simon_SevenSeg>
    1450:	56 d8       	rcall	.-3924   	; 0x4fe <transmit_data>
		PORTA = 0x01;
    1452:	81 e0       	ldi	r24, 0x01	; 1
    1454:	82 b9       	out	0x02, r24	; 2
		break;
    1456:	08 95       	ret
		case Press4_state2:
		transmit_data(simon_SevenSeg(lives));
    1458:	80 91 00 01 	lds	r24, 0x0100
    145c:	6d d8       	rcall	.-3878   	; 0x538 <simon_SevenSeg>
    145e:	4f d8       	rcall	.-3938   	; 0x4fe <transmit_data>
		PORTA = 0x08;
    1460:	88 e0       	ldi	r24, 0x08	; 8
    1462:	82 b9       	out	0x02, r24	; 2
		break;
    1464:	08 95       	ret
		case Press4_state3:
		transmit_data(simon_SevenSeg(lives));
    1466:	80 91 00 01 	lds	r24, 0x0100
    146a:	66 d8       	rcall	.-3892   	; 0x538 <simon_SevenSeg>
    146c:	48 d8       	rcall	.-3952   	; 0x4fe <transmit_data>
		PORTA = 0x02;
    146e:	82 e0       	ldi	r24, 0x02	; 2
    1470:	82 b9       	out	0x02, r24	; 2
		break;
    1472:	08 95       	ret
		case Press4_state4:
		transmit_data(simon_SevenSeg(lives));
    1474:	80 91 00 01 	lds	r24, 0x0100
    1478:	5f d8       	rcall	.-3906   	; 0x538 <simon_SevenSeg>
    147a:	41 d8       	rcall	.-3966   	; 0x4fe <transmit_data>
		PORTA = 0x01;
    147c:	81 e0       	ldi	r24, 0x01	; 1
    147e:	82 b9       	out	0x02, r24	; 2
		break;
    1480:	08 95       	ret
		case Press4_state5:
		transmit_data(simon_SevenSeg(lives));
    1482:	80 91 00 01 	lds	r24, 0x0100
    1486:	58 d8       	rcall	.-3920   	; 0x538 <simon_SevenSeg>
    1488:	3a d8       	rcall	.-3980   	; 0x4fe <transmit_data>
		PORTA = 0x02;
    148a:	82 e0       	ldi	r24, 0x02	; 2
    148c:	82 b9       	out	0x02, r24	; 2
		break;
    148e:	08 95       	ret
		case Press4_state6:
		transmit_data(simon_SevenSeg(lives));
    1490:	80 91 00 01 	lds	r24, 0x0100
    1494:	51 d8       	rcall	.-3934   	; 0x538 <simon_SevenSeg>
    1496:	33 d8       	rcall	.-3994   	; 0x4fe <transmit_data>
		PORTA = 0x08;
    1498:	88 e0       	ldi	r24, 0x08	; 8
    149a:	82 b9       	out	0x02, r24	; 2
		break;
    149c:	08 95       	ret
		case Press4_state7:
		transmit_data(simon_SevenSeg(lives));
    149e:	80 91 00 01 	lds	r24, 0x0100
    14a2:	4a d8       	rcall	.-3948   	; 0x538 <simon_SevenSeg>
    14a4:	2c d8       	rcall	.-4008   	; 0x4fe <transmit_data>
		PORTA = 0x02;
    14a6:	82 e0       	ldi	r24, 0x02	; 2
    14a8:	82 b9       	out	0x02, r24	; 2
		break;
    14aa:	08 95       	ret
		case Press4_state8:
		transmit_data(simon_SevenSeg(lives));
    14ac:	80 91 00 01 	lds	r24, 0x0100
    14b0:	43 d8       	rcall	.-3962   	; 0x538 <simon_SevenSeg>
    14b2:	25 d8       	rcall	.-4022   	; 0x4fe <transmit_data>
		PORTA = 0x01;
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	82 b9       	out	0x02, r24	; 2
		break;
    14b8:	08 95       	ret
		case Press4_state9:
		transmit_data(simon_SevenSeg(lives));
    14ba:	80 91 00 01 	lds	r24, 0x0100
    14be:	3c d8       	rcall	.-3976   	; 0x538 <simon_SevenSeg>
    14c0:	1e d8       	rcall	.-4036   	; 0x4fe <transmit_data>
		PORTA = 0x08;
    14c2:	88 e0       	ldi	r24, 0x08	; 8
    14c4:	82 b9       	out	0x02, r24	; 2
		break;
    14c6:	08 95       	ret
		case Press4_state10:
		transmit_data(simon_SevenSeg(lives));
    14c8:	80 91 00 01 	lds	r24, 0x0100
    14cc:	35 d8       	rcall	.-3990   	; 0x538 <simon_SevenSeg>
    14ce:	17 d8       	rcall	.-4050   	; 0x4fe <transmit_data>
		PORTA = 0x01;
    14d0:	81 e0       	ldi	r24, 0x01	; 1
    14d2:	82 b9       	out	0x02, r24	; 2
		break;
    14d4:	08 95       	ret
		case Press4_state11:
		transmit_data(simon_SevenSeg(lives));
    14d6:	80 91 00 01 	lds	r24, 0x0100
    14da:	2e d8       	rcall	.-4004   	; 0x538 <simon_SevenSeg>
    14dc:	10 d8       	rcall	.-4064   	; 0x4fe <transmit_data>
		PORTA = 0x02;
    14de:	82 e0       	ldi	r24, 0x02	; 2
    14e0:	82 b9       	out	0x02, r24	; 2
		break;
    14e2:	08 95       	ret
		case Press4_state12:
		LCD_DisplayString(1, "Awesomeness");
    14e4:	69 e9       	ldi	r22, 0x99	; 153
    14e6:	71 e0       	ldi	r23, 0x01	; 1
    14e8:	81 e0       	ldi	r24, 0x01	; 1
    14ea:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
    14ee:	80 91 00 01 	lds	r24, 0x0100
    14f2:	22 d8       	rcall	.-4028   	; 0x538 <simon_SevenSeg>
    14f4:	04 d8       	rcall	.-4088   	; 0x4fe <transmit_data>
		PORTA = 0x01;
    14f6:	81 e0       	ldi	r24, 0x01	; 1
    14f8:	82 b9       	out	0x02, r24	; 2
		break;
    14fa:	08 95       	ret
		case Off4:
		transmit_data(simon_SevenSeg(lives));
    14fc:	80 91 00 01 	lds	r24, 0x0100
    1500:	1b d8       	rcall	.-4042   	; 0x538 <simon_SevenSeg>
    1502:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x00;
    1506:	12 b8       	out	0x02, r1	; 2
		global_g = 8;
    1508:	88 e0       	ldi	r24, 0x08	; 8
    150a:	80 93 ea 01 	sts	0x01EA, r24
    150e:	08 95       	ret

00001510 <TickFct_Machine5>:
}	

enum SM5_States{SM5_off, SM5_on1, SM5_on2, SM5_on3, SM5_on4, SM5_on5, SM5_on6, SM5_on7, SM5_on8, SM5_on9, SM5_on10, SM5_on11, SM5_on12, SM5_on13, SM5_on14, SM5_on15} SM5_States;
void TickFct_Machine5()
{
	switch(SM5_States)
    1510:	80 91 f8 01 	lds	r24, 0x01F8
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	80 31       	cpi	r24, 0x10	; 16
    1518:	91 05       	cpc	r25, r1
    151a:	08 f0       	brcs	.+2      	; 0x151e <TickFct_Machine5+0xe>
    151c:	54 c0       	rjmp	.+168    	; 0x15c6 <TickFct_Machine5+0xb6>
    151e:	fc 01       	movw	r30, r24
    1520:	ed 53       	subi	r30, 0x3D	; 61
    1522:	ff 4f       	sbci	r31, 0xFF	; 255
    1524:	32 c5       	rjmp	.+2660   	; 0x1f8a <__tablejump2__>
	{
		case SM5_off:
		LCD_DisplayString(1, "Level Five");
    1526:	65 ea       	ldi	r22, 0xA5	; 165
    1528:	71 e0       	ldi	r23, 0x01	; 1
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		if(global_g == 8)
    1530:	80 91 ea 01 	lds	r24, 0x01EA
    1534:	88 30       	cpi	r24, 0x08	; 8
    1536:	09 f0       	breq	.+2      	; 0x153a <TickFct_Machine5+0x2a>
    1538:	46 c0       	rjmp	.+140    	; 0x15c6 <TickFct_Machine5+0xb6>
		{
			if(~PINB & 0x01)
    153a:	18 99       	sbic	0x03, 0	; 3
    153c:	06 c0       	rjmp	.+12     	; 0x154a <TickFct_Machine5+0x3a>
			{
				while(~PINB & 0x01){}
    153e:	18 9b       	sbis	0x03, 0	; 3
    1540:	fe cf       	rjmp	.-4      	; 0x153e <TickFct_Machine5+0x2e>
				SM5_States = SM5_on1;
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	80 93 f8 01 	sts	0x01F8, r24
    1548:	4a c0       	rjmp	.+148    	; 0x15de <TickFct_Machine5+0xce>
			}
			else
			{
				SM5_States = SM5_off;
    154a:	10 92 f8 01 	sts	0x01F8, r1
    154e:	45 c0       	rjmp	.+138    	; 0x15da <TickFct_Machine5+0xca>
			}
		}
		break;
		case SM5_on1:
		SM5_States = SM5_on2;
    1550:	82 e0       	ldi	r24, 0x02	; 2
    1552:	80 93 f8 01 	sts	0x01F8, r24
    1556:	46 c0       	rjmp	.+140    	; 0x15e4 <TickFct_Machine5+0xd4>
		break;
		case SM5_on2:
		SM5_States = SM5_on3;
    1558:	83 e0       	ldi	r24, 0x03	; 3
    155a:	80 93 f8 01 	sts	0x01F8, r24
    155e:	45 c0       	rjmp	.+138    	; 0x15ea <TickFct_Machine5+0xda>
		break;
		case SM5_on3:
		SM5_States = SM5_on4;
    1560:	84 e0       	ldi	r24, 0x04	; 4
    1562:	80 93 f8 01 	sts	0x01F8, r24
    1566:	44 c0       	rjmp	.+136    	; 0x15f0 <TickFct_Machine5+0xe0>
		break;
		case SM5_on4:
		SM5_States = SM5_on5;
    1568:	85 e0       	ldi	r24, 0x05	; 5
    156a:	80 93 f8 01 	sts	0x01F8, r24
    156e:	43 c0       	rjmp	.+134    	; 0x15f6 <TickFct_Machine5+0xe6>
		break;
		case SM5_on5:
		SM5_States = SM5_on6;
    1570:	86 e0       	ldi	r24, 0x06	; 6
    1572:	80 93 f8 01 	sts	0x01F8, r24
    1576:	42 c0       	rjmp	.+132    	; 0x15fc <TickFct_Machine5+0xec>
		break;
		case SM5_on6:
		SM5_States = SM5_on7;
    1578:	87 e0       	ldi	r24, 0x07	; 7
    157a:	80 93 f8 01 	sts	0x01F8, r24
    157e:	41 c0       	rjmp	.+130    	; 0x1602 <TickFct_Machine5+0xf2>
		break;
		case SM5_on7:
		SM5_States = SM5_on8;
    1580:	88 e0       	ldi	r24, 0x08	; 8
    1582:	80 93 f8 01 	sts	0x01F8, r24
    1586:	40 c0       	rjmp	.+128    	; 0x1608 <TickFct_Machine5+0xf8>
		break;
		case SM5_on8:
		SM5_States = SM5_on9;
    1588:	89 e0       	ldi	r24, 0x09	; 9
    158a:	80 93 f8 01 	sts	0x01F8, r24
    158e:	3f c0       	rjmp	.+126    	; 0x160e <TickFct_Machine5+0xfe>
		break;
		case SM5_on9:
		SM5_States = SM5_on10;
    1590:	8a e0       	ldi	r24, 0x0A	; 10
    1592:	80 93 f8 01 	sts	0x01F8, r24
    1596:	3e c0       	rjmp	.+124    	; 0x1614 <TickFct_Machine5+0x104>
		break;
		case SM5_on10:
		SM5_States = SM5_on11;
    1598:	8b e0       	ldi	r24, 0x0B	; 11
    159a:	80 93 f8 01 	sts	0x01F8, r24
    159e:	3d c0       	rjmp	.+122    	; 0x161a <TickFct_Machine5+0x10a>
		break;
		case SM5_on11:
		SM5_States = SM5_on12;
    15a0:	8c e0       	ldi	r24, 0x0C	; 12
    15a2:	80 93 f8 01 	sts	0x01F8, r24
    15a6:	3c c0       	rjmp	.+120    	; 0x1620 <TickFct_Machine5+0x110>
		break;
		case SM5_on12:
		SM5_States = SM5_on13;
    15a8:	8d e0       	ldi	r24, 0x0D	; 13
    15aa:	80 93 f8 01 	sts	0x01F8, r24
    15ae:	3b c0       	rjmp	.+118    	; 0x1626 <TickFct_Machine5+0x116>
		break;
		case SM5_on13:
		SM5_States = SM5_on14;
    15b0:	8e e0       	ldi	r24, 0x0E	; 14
    15b2:	80 93 f8 01 	sts	0x01F8, r24
    15b6:	3a c0       	rjmp	.+116    	; 0x162c <TickFct_Machine5+0x11c>
		break;
		case SM5_on14:
		SM5_States = SM5_on15;
    15b8:	8f e0       	ldi	r24, 0x0F	; 15
    15ba:	80 93 f8 01 	sts	0x01F8, r24
    15be:	39 c0       	rjmp	.+114    	; 0x1632 <TickFct_Machine5+0x122>
		break;
		case SM5_on15:
		SM5_States = SM5_off;
    15c0:	10 92 f8 01 	sts	0x01F8, r1
		break;
    15c4:	0a c0       	rjmp	.+20     	; 0x15da <TickFct_Machine5+0xca>
	}
	switch(SM5_States)
    15c6:	80 91 f8 01 	lds	r24, 0x01F8
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	80 31       	cpi	r24, 0x10	; 16
    15ce:	91 05       	cpc	r25, r1
    15d0:	d0 f5       	brcc	.+116    	; 0x1646 <TickFct_Machine5+0x136>
    15d2:	fc 01       	movw	r30, r24
    15d4:	ed 52       	subi	r30, 0x2D	; 45
    15d6:	ff 4f       	sbci	r31, 0xFF	; 255
    15d8:	d8 c4       	rjmp	.+2480   	; 0x1f8a <__tablejump2__>
	{
		case SM5_off:
		PORTA = 0x00;
    15da:	12 b8       	out	0x02, r1	; 2
		break;
    15dc:	08 95       	ret
		case SM5_on1:
		PORTA = 0x08;
    15de:	88 e0       	ldi	r24, 0x08	; 8
    15e0:	82 b9       	out	0x02, r24	; 2
		break;
    15e2:	08 95       	ret
		case SM5_on2:
		PORTA = 0x04;
    15e4:	84 e0       	ldi	r24, 0x04	; 4
    15e6:	82 b9       	out	0x02, r24	; 2
		break;
    15e8:	08 95       	ret
		case SM5_on3:
		PORTA = 0x02;
    15ea:	82 e0       	ldi	r24, 0x02	; 2
    15ec:	82 b9       	out	0x02, r24	; 2
		break;
    15ee:	08 95       	ret
		case SM5_on4:
		PORTA = 0x01;
    15f0:	81 e0       	ldi	r24, 0x01	; 1
    15f2:	82 b9       	out	0x02, r24	; 2
		break;
    15f4:	08 95       	ret
		case SM5_on5:
		PORTA = 0x02;
    15f6:	82 e0       	ldi	r24, 0x02	; 2
    15f8:	82 b9       	out	0x02, r24	; 2
		break;
    15fa:	08 95       	ret
		case SM5_on6:
		PORTA = 0x01;
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	82 b9       	out	0x02, r24	; 2
		break;
    1600:	08 95       	ret
		case SM5_on7:
		PORTA = 0x04;
    1602:	84 e0       	ldi	r24, 0x04	; 4
    1604:	82 b9       	out	0x02, r24	; 2
		break;
    1606:	08 95       	ret
		case SM5_on8:
		PORTA = 0x08;
    1608:	88 e0       	ldi	r24, 0x08	; 8
    160a:	82 b9       	out	0x02, r24	; 2
		break;
    160c:	08 95       	ret
		case SM5_on9:
		PORTA = 0x02;
    160e:	82 e0       	ldi	r24, 0x02	; 2
    1610:	82 b9       	out	0x02, r24	; 2
		break;
    1612:	08 95       	ret
		case SM5_on10:
		PORTA = 0x01;
    1614:	81 e0       	ldi	r24, 0x01	; 1
    1616:	82 b9       	out	0x02, r24	; 2
		break;
    1618:	08 95       	ret
		case SM5_on11:
		PORTA = 0x02;
    161a:	82 e0       	ldi	r24, 0x02	; 2
    161c:	82 b9       	out	0x02, r24	; 2
		break;
    161e:	08 95       	ret
		case SM5_on12:
		PORTA = 0x01;
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	82 b9       	out	0x02, r24	; 2
		break;
    1624:	08 95       	ret
		case SM5_on13:
		PORTA = 0x04;
    1626:	84 e0       	ldi	r24, 0x04	; 4
    1628:	82 b9       	out	0x02, r24	; 2
		break;
    162a:	08 95       	ret
		case SM5_on14:
		PORTA = 0x08;
    162c:	88 e0       	ldi	r24, 0x08	; 8
    162e:	82 b9       	out	0x02, r24	; 2
		break;
    1630:	08 95       	ret
		case SM5_on15:
		LCD_DisplayString(1, "One Last Time!!!!!!!!");
    1632:	60 eb       	ldi	r22, 0xB0	; 176
    1634:	71 e0       	ldi	r23, 0x01	; 1
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		PORTA = 0x01;
    163c:	81 e0       	ldi	r24, 0x01	; 1
    163e:	82 b9       	out	0x02, r24	; 2
		global_g = 9;
    1640:	89 e0       	ldi	r24, 0x09	; 9
    1642:	80 93 ea 01 	sts	0x01EA, r24
    1646:	08 95       	ret

00001648 <ButtonPress5>:
}

enum Press_fifth_level{Init5, Press5_state1, Press5_state2, Press5_state3, Press5_state4, Press5_state5, Press5_state6, Press5_state7, Press5_state8, Press5_state9, Press5_state10, Press5_state11, Press5_state12, Press5_state13, Press5_state14, Press5_state15, Error5, Off5} Press_fifth_level;
void ButtonPress5()
{
	switch(Press_fifth_level)
    1648:	80 91 f9 01 	lds	r24, 0x01F9
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	81 31       	cpi	r24, 0x11	; 17
    1650:	91 05       	cpc	r25, r1
    1652:	08 f0       	brcs	.+2      	; 0x1656 <ButtonPress5+0xe>
    1654:	16 c2       	rjmp	.+1068   	; 0x1a82 <ButtonPress5+0x43a>
    1656:	fc 01       	movw	r30, r24
    1658:	ed 51       	subi	r30, 0x1D	; 29
    165a:	ff 4f       	sbci	r31, 0xFF	; 255
    165c:	96 c4       	rjmp	.+2348   	; 0x1f8a <__tablejump2__>
	{
		case Init5:
		if(global_g == 9)
    165e:	80 91 ea 01 	lds	r24, 0x01EA
    1662:	89 30       	cpi	r24, 0x09	; 9
    1664:	09 f0       	breq	.+2      	; 0x1668 <ButtonPress5+0x20>
    1666:	af c2       	rjmp	.+1374   	; 0x1bc6 <ButtonPress5+0x57e>
		{
			PORTA = 0x00;
    1668:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x08)
    166a:	1b 99       	sbic	0x03, 3	; 3
    166c:	05 c0       	rjmp	.+10     	; 0x1678 <ButtonPress5+0x30>
			{
				while(~PINB & 0x08){}
    166e:	1b 9b       	sbis	0x03, 3	; 3
    1670:	fe cf       	rjmp	.-4      	; 0x166e <ButtonPress5+0x26>
				Press_fifth_level = Press5_state1;
    1672:	81 e0       	ldi	r24, 0x01	; 1
    1674:	80 93 f9 01 	sts	0x01F9, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1678:	19 9b       	sbis	0x03, 1	; 3
    167a:	04 c0       	rjmp	.+8      	; 0x1684 <ButtonPress5+0x3c>
    167c:	1a 9b       	sbis	0x03, 2	; 3
    167e:	02 c0       	rjmp	.+4      	; 0x1684 <ButtonPress5+0x3c>
    1680:	18 99       	sbic	0x03, 0	; 3
    1682:	ff c1       	rjmp	.+1022   	; 0x1a82 <ButtonPress5+0x43a>
			{
				if(lives - 1 > -1)
    1684:	20 91 00 01 	lds	r18, 0x0100
    1688:	82 2f       	mov	r24, r18
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	01 97       	sbiw	r24, 0x01	; 1
    168e:	99 23       	and	r25, r25
    1690:	1c f0       	brlt	.+6      	; 0x1698 <ButtonPress5+0x50>
				{
					lives--;
    1692:	21 50       	subi	r18, 0x01	; 1
    1694:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
    1698:	80 91 00 01 	lds	r24, 0x0100
    169c:	81 11       	cpse	r24, r1
    169e:	03 c0       	rjmp	.+6      	; 0x16a6 <ButtonPress5+0x5e>
				{
					global_g = 20;
    16a0:	84 e1       	ldi	r24, 0x14	; 20
    16a2:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_fifth_level = Error5;
    16a6:	80 e1       	ldi	r24, 0x10	; 16
    16a8:	80 93 f9 01 	sts	0x01F9, r24
    16ac:	f6 c1       	rjmp	.+1004   	; 0x1a9a <ButtonPress5+0x452>
			}
		}
		break;
		case Press5_state1:
		if(~PINB & 0x04)
    16ae:	1a 99       	sbic	0x03, 2	; 3
    16b0:	05 c0       	rjmp	.+10     	; 0x16bc <ButtonPress5+0x74>
		{
			while(~PINB & 0x04){}
    16b2:	1a 9b       	sbis	0x03, 2	; 3
    16b4:	fe cf       	rjmp	.-4      	; 0x16b2 <ButtonPress5+0x6a>
			Press_fifth_level = Press5_state2;
    16b6:	82 e0       	ldi	r24, 0x02	; 2
    16b8:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    16bc:	19 9b       	sbis	0x03, 1	; 3
    16be:	04 c0       	rjmp	.+8      	; 0x16c8 <ButtonPress5+0x80>
    16c0:	18 9b       	sbis	0x03, 0	; 3
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <ButtonPress5+0x80>
    16c4:	1b 99       	sbic	0x03, 3	; 3
    16c6:	dd c1       	rjmp	.+954    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    16c8:	20 91 00 01 	lds	r18, 0x0100
    16cc:	82 2f       	mov	r24, r18
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	01 97       	sbiw	r24, 0x01	; 1
    16d2:	99 23       	and	r25, r25
    16d4:	1c f0       	brlt	.+6      	; 0x16dc <ButtonPress5+0x94>
			{
				lives--;
    16d6:	21 50       	subi	r18, 0x01	; 1
    16d8:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    16dc:	80 91 00 01 	lds	r24, 0x0100
    16e0:	81 11       	cpse	r24, r1
    16e2:	03 c0       	rjmp	.+6      	; 0x16ea <ButtonPress5+0xa2>
			{
				global_g = 20;
    16e4:	84 e1       	ldi	r24, 0x14	; 20
    16e6:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    16ea:	80 e1       	ldi	r24, 0x10	; 16
    16ec:	80 93 f9 01 	sts	0x01F9, r24
    16f0:	d4 c1       	rjmp	.+936    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state2:
		if(~PINB & 0x02)
    16f2:	19 99       	sbic	0x03, 1	; 3
    16f4:	05 c0       	rjmp	.+10     	; 0x1700 <ButtonPress5+0xb8>
		{
			while(~PINB & 0x02){}
    16f6:	19 9b       	sbis	0x03, 1	; 3
    16f8:	fe cf       	rjmp	.-4      	; 0x16f6 <ButtonPress5+0xae>
			Press_fifth_level = Press5_state3;
    16fa:	83 e0       	ldi	r24, 0x03	; 3
    16fc:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1700:	18 9b       	sbis	0x03, 0	; 3
    1702:	04 c0       	rjmp	.+8      	; 0x170c <ButtonPress5+0xc4>
    1704:	1a 9b       	sbis	0x03, 2	; 3
    1706:	02 c0       	rjmp	.+4      	; 0x170c <ButtonPress5+0xc4>
    1708:	1b 99       	sbic	0x03, 3	; 3
    170a:	bb c1       	rjmp	.+886    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    170c:	20 91 00 01 	lds	r18, 0x0100
    1710:	82 2f       	mov	r24, r18
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	01 97       	sbiw	r24, 0x01	; 1
    1716:	99 23       	and	r25, r25
    1718:	1c f0       	brlt	.+6      	; 0x1720 <ButtonPress5+0xd8>
			{
				lives--;
    171a:	21 50       	subi	r18, 0x01	; 1
    171c:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1720:	80 91 00 01 	lds	r24, 0x0100
    1724:	81 11       	cpse	r24, r1
    1726:	03 c0       	rjmp	.+6      	; 0x172e <ButtonPress5+0xe6>
			{
				global_g = 20;
    1728:	84 e1       	ldi	r24, 0x14	; 20
    172a:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    172e:	80 e1       	ldi	r24, 0x10	; 16
    1730:	80 93 f9 01 	sts	0x01F9, r24
    1734:	b2 c1       	rjmp	.+868    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state3:
		if(~PINB & 0x01)
    1736:	18 99       	sbic	0x03, 0	; 3
    1738:	05 c0       	rjmp	.+10     	; 0x1744 <ButtonPress5+0xfc>
		{
			while(~PINB & 0x01){}
    173a:	18 9b       	sbis	0x03, 0	; 3
    173c:	fe cf       	rjmp	.-4      	; 0x173a <ButtonPress5+0xf2>
			Press_fifth_level = Press5_state4;
    173e:	84 e0       	ldi	r24, 0x04	; 4
    1740:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1744:	19 9b       	sbis	0x03, 1	; 3
    1746:	04 c0       	rjmp	.+8      	; 0x1750 <ButtonPress5+0x108>
    1748:	1a 9b       	sbis	0x03, 2	; 3
    174a:	02 c0       	rjmp	.+4      	; 0x1750 <ButtonPress5+0x108>
    174c:	1b 99       	sbic	0x03, 3	; 3
    174e:	99 c1       	rjmp	.+818    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    1750:	20 91 00 01 	lds	r18, 0x0100
    1754:	82 2f       	mov	r24, r18
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	01 97       	sbiw	r24, 0x01	; 1
    175a:	99 23       	and	r25, r25
    175c:	1c f0       	brlt	.+6      	; 0x1764 <ButtonPress5+0x11c>
			{
				lives--;
    175e:	21 50       	subi	r18, 0x01	; 1
    1760:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1764:	80 91 00 01 	lds	r24, 0x0100
    1768:	81 11       	cpse	r24, r1
    176a:	03 c0       	rjmp	.+6      	; 0x1772 <ButtonPress5+0x12a>
			{
				global_g = 20;
    176c:	84 e1       	ldi	r24, 0x14	; 20
    176e:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1772:	80 e1       	ldi	r24, 0x10	; 16
    1774:	80 93 f9 01 	sts	0x01F9, r24
    1778:	90 c1       	rjmp	.+800    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state4:
		if(~PINB & 0x02)
    177a:	19 99       	sbic	0x03, 1	; 3
    177c:	05 c0       	rjmp	.+10     	; 0x1788 <ButtonPress5+0x140>
		{
			while(~PINB & 0x02){}
    177e:	19 9b       	sbis	0x03, 1	; 3
    1780:	fe cf       	rjmp	.-4      	; 0x177e <ButtonPress5+0x136>
			Press_fifth_level = Press5_state5;
    1782:	85 e0       	ldi	r24, 0x05	; 5
    1784:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1788:	18 9b       	sbis	0x03, 0	; 3
    178a:	04 c0       	rjmp	.+8      	; 0x1794 <ButtonPress5+0x14c>
    178c:	1a 9b       	sbis	0x03, 2	; 3
    178e:	02 c0       	rjmp	.+4      	; 0x1794 <ButtonPress5+0x14c>
    1790:	1b 99       	sbic	0x03, 3	; 3
    1792:	77 c1       	rjmp	.+750    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    1794:	20 91 00 01 	lds	r18, 0x0100
    1798:	82 2f       	mov	r24, r18
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	01 97       	sbiw	r24, 0x01	; 1
    179e:	99 23       	and	r25, r25
    17a0:	1c f0       	brlt	.+6      	; 0x17a8 <ButtonPress5+0x160>
			{
				lives--;
    17a2:	21 50       	subi	r18, 0x01	; 1
    17a4:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    17a8:	80 91 00 01 	lds	r24, 0x0100
    17ac:	81 11       	cpse	r24, r1
    17ae:	03 c0       	rjmp	.+6      	; 0x17b6 <ButtonPress5+0x16e>
			{
				global_g = 20;
    17b0:	84 e1       	ldi	r24, 0x14	; 20
    17b2:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    17b6:	80 e1       	ldi	r24, 0x10	; 16
    17b8:	80 93 f9 01 	sts	0x01F9, r24
    17bc:	6e c1       	rjmp	.+732    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state5:
		if(~PINB & 0x01)
    17be:	18 99       	sbic	0x03, 0	; 3
    17c0:	05 c0       	rjmp	.+10     	; 0x17cc <ButtonPress5+0x184>
		{
			while(~PINB & 0x01){}
    17c2:	18 9b       	sbis	0x03, 0	; 3
    17c4:	fe cf       	rjmp	.-4      	; 0x17c2 <ButtonPress5+0x17a>
			Press_fifth_level = Press5_state6;
    17c6:	86 e0       	ldi	r24, 0x06	; 6
    17c8:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    17cc:	19 9b       	sbis	0x03, 1	; 3
    17ce:	04 c0       	rjmp	.+8      	; 0x17d8 <ButtonPress5+0x190>
    17d0:	1a 9b       	sbis	0x03, 2	; 3
    17d2:	02 c0       	rjmp	.+4      	; 0x17d8 <ButtonPress5+0x190>
    17d4:	1b 99       	sbic	0x03, 3	; 3
    17d6:	55 c1       	rjmp	.+682    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    17d8:	20 91 00 01 	lds	r18, 0x0100
    17dc:	82 2f       	mov	r24, r18
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	01 97       	sbiw	r24, 0x01	; 1
    17e2:	99 23       	and	r25, r25
    17e4:	1c f0       	brlt	.+6      	; 0x17ec <ButtonPress5+0x1a4>
			{
				lives--;
    17e6:	21 50       	subi	r18, 0x01	; 1
    17e8:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    17ec:	80 91 00 01 	lds	r24, 0x0100
    17f0:	81 11       	cpse	r24, r1
    17f2:	03 c0       	rjmp	.+6      	; 0x17fa <ButtonPress5+0x1b2>
			{
				global_g = 20;
    17f4:	84 e1       	ldi	r24, 0x14	; 20
    17f6:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    17fa:	80 e1       	ldi	r24, 0x10	; 16
    17fc:	80 93 f9 01 	sts	0x01F9, r24
    1800:	4c c1       	rjmp	.+664    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state6:
		if(~PINB & 0x04)
    1802:	1a 99       	sbic	0x03, 2	; 3
    1804:	05 c0       	rjmp	.+10     	; 0x1810 <ButtonPress5+0x1c8>
		{
			
			while(~PINB & 0x04){}
    1806:	1a 9b       	sbis	0x03, 2	; 3
    1808:	fe cf       	rjmp	.-4      	; 0x1806 <ButtonPress5+0x1be>
			Press_fifth_level = Press5_state7;
    180a:	87 e0       	ldi	r24, 0x07	; 7
    180c:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    1810:	19 9b       	sbis	0x03, 1	; 3
    1812:	04 c0       	rjmp	.+8      	; 0x181c <ButtonPress5+0x1d4>
    1814:	18 9b       	sbis	0x03, 0	; 3
    1816:	02 c0       	rjmp	.+4      	; 0x181c <ButtonPress5+0x1d4>
    1818:	1b 99       	sbic	0x03, 3	; 3
    181a:	33 c1       	rjmp	.+614    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    181c:	20 91 00 01 	lds	r18, 0x0100
    1820:	82 2f       	mov	r24, r18
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	01 97       	sbiw	r24, 0x01	; 1
    1826:	99 23       	and	r25, r25
    1828:	1c f0       	brlt	.+6      	; 0x1830 <ButtonPress5+0x1e8>
			{
				lives--;
    182a:	21 50       	subi	r18, 0x01	; 1
    182c:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1830:	80 91 00 01 	lds	r24, 0x0100
    1834:	81 11       	cpse	r24, r1
    1836:	03 c0       	rjmp	.+6      	; 0x183e <ButtonPress5+0x1f6>
			{
				global_g = 20;
    1838:	84 e1       	ldi	r24, 0x14	; 20
    183a:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    183e:	80 e1       	ldi	r24, 0x10	; 16
    1840:	80 93 f9 01 	sts	0x01F9, r24
    1844:	2a c1       	rjmp	.+596    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state7:
		if(~PINB & 0x08)
    1846:	1b 99       	sbic	0x03, 3	; 3
    1848:	05 c0       	rjmp	.+10     	; 0x1854 <ButtonPress5+0x20c>
		{
			while(~PINB & 0x08){}
    184a:	1b 9b       	sbis	0x03, 3	; 3
    184c:	fe cf       	rjmp	.-4      	; 0x184a <ButtonPress5+0x202>
			Press_fifth_level = Press5_state8;
    184e:	88 e0       	ldi	r24, 0x08	; 8
    1850:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1854:	19 9b       	sbis	0x03, 1	; 3
    1856:	04 c0       	rjmp	.+8      	; 0x1860 <ButtonPress5+0x218>
    1858:	1a 9b       	sbis	0x03, 2	; 3
    185a:	02 c0       	rjmp	.+4      	; 0x1860 <ButtonPress5+0x218>
    185c:	18 99       	sbic	0x03, 0	; 3
    185e:	11 c1       	rjmp	.+546    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    1860:	20 91 00 01 	lds	r18, 0x0100
    1864:	82 2f       	mov	r24, r18
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	01 97       	sbiw	r24, 0x01	; 1
    186a:	99 23       	and	r25, r25
    186c:	1c f0       	brlt	.+6      	; 0x1874 <ButtonPress5+0x22c>
			{
				lives--;
    186e:	21 50       	subi	r18, 0x01	; 1
    1870:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1874:	80 91 00 01 	lds	r24, 0x0100
    1878:	81 11       	cpse	r24, r1
    187a:	03 c0       	rjmp	.+6      	; 0x1882 <ButtonPress5+0x23a>
			{
				global_g = 20;
    187c:	84 e1       	ldi	r24, 0x14	; 20
    187e:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1882:	80 e1       	ldi	r24, 0x10	; 16
    1884:	80 93 f9 01 	sts	0x01F9, r24
    1888:	08 c1       	rjmp	.+528    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state8:
		if(~PINB & 0x02)
    188a:	19 99       	sbic	0x03, 1	; 3
    188c:	05 c0       	rjmp	.+10     	; 0x1898 <ButtonPress5+0x250>
		{
			while(~PINB & 0x02){}
    188e:	19 9b       	sbis	0x03, 1	; 3
    1890:	fe cf       	rjmp	.-4      	; 0x188e <ButtonPress5+0x246>
			Press_fifth_level = Press5_state9;
    1892:	89 e0       	ldi	r24, 0x09	; 9
    1894:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1898:	18 9b       	sbis	0x03, 0	; 3
    189a:	04 c0       	rjmp	.+8      	; 0x18a4 <ButtonPress5+0x25c>
    189c:	1a 9b       	sbis	0x03, 2	; 3
    189e:	02 c0       	rjmp	.+4      	; 0x18a4 <ButtonPress5+0x25c>
    18a0:	1b 99       	sbic	0x03, 3	; 3
    18a2:	ef c0       	rjmp	.+478    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    18a4:	20 91 00 01 	lds	r18, 0x0100
    18a8:	82 2f       	mov	r24, r18
    18aa:	90 e0       	ldi	r25, 0x00	; 0
    18ac:	01 97       	sbiw	r24, 0x01	; 1
    18ae:	99 23       	and	r25, r25
    18b0:	1c f0       	brlt	.+6      	; 0x18b8 <ButtonPress5+0x270>
			{
				lives--;
    18b2:	21 50       	subi	r18, 0x01	; 1
    18b4:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    18b8:	80 91 00 01 	lds	r24, 0x0100
    18bc:	81 11       	cpse	r24, r1
    18be:	03 c0       	rjmp	.+6      	; 0x18c6 <ButtonPress5+0x27e>
			{
				global_g = 20;
    18c0:	84 e1       	ldi	r24, 0x14	; 20
    18c2:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    18c6:	80 e1       	ldi	r24, 0x10	; 16
    18c8:	80 93 f9 01 	sts	0x01F9, r24
    18cc:	e6 c0       	rjmp	.+460    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state9:
		if(~PINB & 0x01)
    18ce:	18 99       	sbic	0x03, 0	; 3
    18d0:	05 c0       	rjmp	.+10     	; 0x18dc <ButtonPress5+0x294>
		{
			while(~PINB & 0x01){}
    18d2:	18 9b       	sbis	0x03, 0	; 3
    18d4:	fe cf       	rjmp	.-4      	; 0x18d2 <ButtonPress5+0x28a>
			Press_fifth_level = Press5_state10;
    18d6:	8a e0       	ldi	r24, 0x0A	; 10
    18d8:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    18dc:	19 9b       	sbis	0x03, 1	; 3
    18de:	04 c0       	rjmp	.+8      	; 0x18e8 <ButtonPress5+0x2a0>
    18e0:	1a 9b       	sbis	0x03, 2	; 3
    18e2:	02 c0       	rjmp	.+4      	; 0x18e8 <ButtonPress5+0x2a0>
    18e4:	1b 99       	sbic	0x03, 3	; 3
    18e6:	cd c0       	rjmp	.+410    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    18e8:	20 91 00 01 	lds	r18, 0x0100
    18ec:	82 2f       	mov	r24, r18
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	01 97       	sbiw	r24, 0x01	; 1
    18f2:	99 23       	and	r25, r25
    18f4:	1c f0       	brlt	.+6      	; 0x18fc <ButtonPress5+0x2b4>
			{
				lives--;
    18f6:	21 50       	subi	r18, 0x01	; 1
    18f8:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    18fc:	80 91 00 01 	lds	r24, 0x0100
    1900:	81 11       	cpse	r24, r1
    1902:	03 c0       	rjmp	.+6      	; 0x190a <ButtonPress5+0x2c2>
			{
				global_g = 20;
    1904:	84 e1       	ldi	r24, 0x14	; 20
    1906:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    190a:	80 e1       	ldi	r24, 0x10	; 16
    190c:	80 93 f9 01 	sts	0x01F9, r24
    1910:	c4 c0       	rjmp	.+392    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state10:
		if(~PINB & 0x02)
    1912:	19 99       	sbic	0x03, 1	; 3
    1914:	05 c0       	rjmp	.+10     	; 0x1920 <ButtonPress5+0x2d8>
		{
			while(~PINB & 0x02){}
    1916:	19 9b       	sbis	0x03, 1	; 3
    1918:	fe cf       	rjmp	.-4      	; 0x1916 <ButtonPress5+0x2ce>
			Press_fifth_level = Press5_state11;
    191a:	8b e0       	ldi	r24, 0x0B	; 11
    191c:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1920:	18 9b       	sbis	0x03, 0	; 3
    1922:	04 c0       	rjmp	.+8      	; 0x192c <ButtonPress5+0x2e4>
    1924:	1a 9b       	sbis	0x03, 2	; 3
    1926:	02 c0       	rjmp	.+4      	; 0x192c <ButtonPress5+0x2e4>
    1928:	1b 99       	sbic	0x03, 3	; 3
    192a:	ab c0       	rjmp	.+342    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    192c:	20 91 00 01 	lds	r18, 0x0100
    1930:	82 2f       	mov	r24, r18
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	01 97       	sbiw	r24, 0x01	; 1
    1936:	99 23       	and	r25, r25
    1938:	1c f0       	brlt	.+6      	; 0x1940 <ButtonPress5+0x2f8>
			{
				lives--;
    193a:	21 50       	subi	r18, 0x01	; 1
    193c:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1940:	80 91 00 01 	lds	r24, 0x0100
    1944:	81 11       	cpse	r24, r1
    1946:	03 c0       	rjmp	.+6      	; 0x194e <ButtonPress5+0x306>
			{
				global_g = 20;
    1948:	84 e1       	ldi	r24, 0x14	; 20
    194a:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    194e:	80 e1       	ldi	r24, 0x10	; 16
    1950:	80 93 f9 01 	sts	0x01F9, r24
    1954:	a2 c0       	rjmp	.+324    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state11:
		if(~PINB & 0x01)
    1956:	18 99       	sbic	0x03, 0	; 3
    1958:	05 c0       	rjmp	.+10     	; 0x1964 <ButtonPress5+0x31c>
		{
			while(~PINB & 0x01){}
    195a:	18 9b       	sbis	0x03, 0	; 3
    195c:	fe cf       	rjmp	.-4      	; 0x195a <ButtonPress5+0x312>
			Press_fifth_level = Press5_state12;
    195e:	8c e0       	ldi	r24, 0x0C	; 12
    1960:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1964:	19 9b       	sbis	0x03, 1	; 3
    1966:	04 c0       	rjmp	.+8      	; 0x1970 <ButtonPress5+0x328>
    1968:	1a 9b       	sbis	0x03, 2	; 3
    196a:	02 c0       	rjmp	.+4      	; 0x1970 <ButtonPress5+0x328>
    196c:	1b 99       	sbic	0x03, 3	; 3
    196e:	89 c0       	rjmp	.+274    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    1970:	20 91 00 01 	lds	r18, 0x0100
    1974:	82 2f       	mov	r24, r18
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	01 97       	sbiw	r24, 0x01	; 1
    197a:	99 23       	and	r25, r25
    197c:	1c f0       	brlt	.+6      	; 0x1984 <ButtonPress5+0x33c>
			{
				lives--;
    197e:	21 50       	subi	r18, 0x01	; 1
    1980:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1984:	80 91 00 01 	lds	r24, 0x0100
    1988:	81 11       	cpse	r24, r1
    198a:	03 c0       	rjmp	.+6      	; 0x1992 <ButtonPress5+0x34a>
			{
				global_g = 20;
    198c:	84 e1       	ldi	r24, 0x14	; 20
    198e:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1992:	80 e1       	ldi	r24, 0x10	; 16
    1994:	80 93 f9 01 	sts	0x01F9, r24
    1998:	80 c0       	rjmp	.+256    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state12:
		if(~PINB & 0x04)
    199a:	1a 99       	sbic	0x03, 2	; 3
    199c:	05 c0       	rjmp	.+10     	; 0x19a8 <ButtonPress5+0x360>
		{
			while(~PINB & 0x04){}
    199e:	1a 9b       	sbis	0x03, 2	; 3
    19a0:	fe cf       	rjmp	.-4      	; 0x199e <ButtonPress5+0x356>
			Press_fifth_level = Press5_state13;
    19a2:	8d e0       	ldi	r24, 0x0D	; 13
    19a4:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    19a8:	19 9b       	sbis	0x03, 1	; 3
    19aa:	04 c0       	rjmp	.+8      	; 0x19b4 <ButtonPress5+0x36c>
    19ac:	18 9b       	sbis	0x03, 0	; 3
    19ae:	02 c0       	rjmp	.+4      	; 0x19b4 <ButtonPress5+0x36c>
    19b0:	1b 99       	sbic	0x03, 3	; 3
    19b2:	67 c0       	rjmp	.+206    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    19b4:	20 91 00 01 	lds	r18, 0x0100
    19b8:	82 2f       	mov	r24, r18
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	01 97       	sbiw	r24, 0x01	; 1
    19be:	99 23       	and	r25, r25
    19c0:	1c f0       	brlt	.+6      	; 0x19c8 <ButtonPress5+0x380>
			{
				lives--;
    19c2:	21 50       	subi	r18, 0x01	; 1
    19c4:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    19c8:	80 91 00 01 	lds	r24, 0x0100
    19cc:	81 11       	cpse	r24, r1
    19ce:	03 c0       	rjmp	.+6      	; 0x19d6 <ButtonPress5+0x38e>
			{
				global_g = 20;
    19d0:	84 e1       	ldi	r24, 0x14	; 20
    19d2:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    19d6:	80 e1       	ldi	r24, 0x10	; 16
    19d8:	80 93 f9 01 	sts	0x01F9, r24
    19dc:	5e c0       	rjmp	.+188    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state13:
		if(~PINB & 0x08)
    19de:	1b 99       	sbic	0x03, 3	; 3
    19e0:	05 c0       	rjmp	.+10     	; 0x19ec <ButtonPress5+0x3a4>
		{
			while(~PINB & 0x08){}
    19e2:	1b 9b       	sbis	0x03, 3	; 3
    19e4:	fe cf       	rjmp	.-4      	; 0x19e2 <ButtonPress5+0x39a>
			Press_fifth_level = Press5_state14;
    19e6:	8e e0       	ldi	r24, 0x0E	; 14
    19e8:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    19ec:	19 9b       	sbis	0x03, 1	; 3
    19ee:	04 c0       	rjmp	.+8      	; 0x19f8 <ButtonPress5+0x3b0>
    19f0:	1a 9b       	sbis	0x03, 2	; 3
    19f2:	02 c0       	rjmp	.+4      	; 0x19f8 <ButtonPress5+0x3b0>
    19f4:	18 99       	sbic	0x03, 0	; 3
    19f6:	45 c0       	rjmp	.+138    	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    19f8:	20 91 00 01 	lds	r18, 0x0100
    19fc:	82 2f       	mov	r24, r18
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	01 97       	sbiw	r24, 0x01	; 1
    1a02:	99 23       	and	r25, r25
    1a04:	1c f0       	brlt	.+6      	; 0x1a0c <ButtonPress5+0x3c4>
			{
				lives--;
    1a06:	21 50       	subi	r18, 0x01	; 1
    1a08:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1a0c:	80 91 00 01 	lds	r24, 0x0100
    1a10:	81 11       	cpse	r24, r1
    1a12:	03 c0       	rjmp	.+6      	; 0x1a1a <ButtonPress5+0x3d2>
			{
				global_g = 20;
    1a14:	84 e1       	ldi	r24, 0x14	; 20
    1a16:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1a1a:	80 e1       	ldi	r24, 0x10	; 16
    1a1c:	80 93 f9 01 	sts	0x01F9, r24
    1a20:	3c c0       	rjmp	.+120    	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state14:
		if(~PINB & 0x01)
    1a22:	18 99       	sbic	0x03, 0	; 3
    1a24:	05 c0       	rjmp	.+10     	; 0x1a30 <ButtonPress5+0x3e8>
		{
			while(~PINB & 0x01){}
    1a26:	18 9b       	sbis	0x03, 0	; 3
    1a28:	fe cf       	rjmp	.-4      	; 0x1a26 <ButtonPress5+0x3de>
			Press_fifth_level = Press5_state15;
    1a2a:	8f e0       	ldi	r24, 0x0F	; 15
    1a2c:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1a30:	19 9b       	sbis	0x03, 1	; 3
    1a32:	04 c0       	rjmp	.+8      	; 0x1a3c <ButtonPress5+0x3f4>
    1a34:	1a 9b       	sbis	0x03, 2	; 3
    1a36:	02 c0       	rjmp	.+4      	; 0x1a3c <ButtonPress5+0x3f4>
    1a38:	1b 99       	sbic	0x03, 3	; 3
    1a3a:	23 c0       	rjmp	.+70     	; 0x1a82 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    1a3c:	20 91 00 01 	lds	r18, 0x0100
    1a40:	82 2f       	mov	r24, r18
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	01 97       	sbiw	r24, 0x01	; 1
    1a46:	99 23       	and	r25, r25
    1a48:	1c f0       	brlt	.+6      	; 0x1a50 <ButtonPress5+0x408>
			{
				lives--;
    1a4a:	21 50       	subi	r18, 0x01	; 1
    1a4c:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1a50:	80 91 00 01 	lds	r24, 0x0100
    1a54:	81 11       	cpse	r24, r1
    1a56:	03 c0       	rjmp	.+6      	; 0x1a5e <ButtonPress5+0x416>
			{
				global_g = 20;
    1a58:	84 e1       	ldi	r24, 0x14	; 20
    1a5a:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1a5e:	80 e1       	ldi	r24, 0x10	; 16
    1a60:	80 93 f9 01 	sts	0x01F9, r24
    1a64:	1a c0       	rjmp	.+52     	; 0x1a9a <ButtonPress5+0x452>
		}
		break;
		case Press5_state15:
		if(~PINB & 0x10)
    1a66:	1c 99       	sbic	0x03, 4	; 3
    1a68:	9f c0       	rjmp	.+318    	; 0x1ba8 <ButtonPress5+0x560>
		{
			Press_fifth_level = Off5;
    1a6a:	81 e1       	ldi	r24, 0x11	; 17
    1a6c:	80 93 f9 01 	sts	0x01F9, r24
    1a70:	a9 c0       	rjmp	.+338    	; 0x1bc4 <ButtonPress5+0x57c>
		}
		break;
		case Error5:
		if(~PINB & 0x08)
    1a72:	1b 99       	sbic	0x03, 3	; 3
    1a74:	12 c0       	rjmp	.+36     	; 0x1a9a <ButtonPress5+0x452>
		{
			while(~PINB & 0x08){}
    1a76:	1b 9b       	sbis	0x03, 3	; 3
    1a78:	fe cf       	rjmp	.-4      	; 0x1a76 <ButtonPress5+0x42e>
			Press_fifth_level = Press5_state1;
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	80 93 f9 01 	sts	0x01F9, r24
    1a80:	15 c0       	rjmp	.+42     	; 0x1aac <ButtonPress5+0x464>
		}
		break;
	}
	switch(Press_fifth_level)
    1a82:	80 91 f9 01 	lds	r24, 0x01F9
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	fc 01       	movw	r30, r24
    1a8a:	31 97       	sbiw	r30, 0x01	; 1
    1a8c:	e1 31       	cpi	r30, 0x11	; 17
    1a8e:	f1 05       	cpc	r31, r1
    1a90:	08 f0       	brcs	.+2      	; 0x1a94 <ButtonPress5+0x44c>
    1a92:	99 c0       	rjmp	.+306    	; 0x1bc6 <ButtonPress5+0x57e>
    1a94:	ec 50       	subi	r30, 0x0C	; 12
    1a96:	ff 4f       	sbci	r31, 0xFF	; 255
    1a98:	78 c2       	rjmp	.+1264   	; 0x1f8a <__tablejump2__>
	{
		case Error5:
		transmit_data(simon_SevenSeg(lives));
    1a9a:	80 91 00 01 	lds	r24, 0x0100
    1a9e:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1aa2:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x10;
    1aa6:	80 e1       	ldi	r24, 0x10	; 16
    1aa8:	82 b9       	out	0x02, r24	; 2
		break;
    1aaa:	08 95       	ret
		case Press5_state1:
		transmit_data(simon_SevenSeg(lives));
    1aac:	80 91 00 01 	lds	r24, 0x0100
    1ab0:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1ab4:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x08;
    1ab8:	88 e0       	ldi	r24, 0x08	; 8
    1aba:	82 b9       	out	0x02, r24	; 2
		break;
    1abc:	08 95       	ret
		case Press5_state2:
		transmit_data(simon_SevenSeg(lives));
    1abe:	80 91 00 01 	lds	r24, 0x0100
    1ac2:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1ac6:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x04;
    1aca:	84 e0       	ldi	r24, 0x04	; 4
    1acc:	82 b9       	out	0x02, r24	; 2
		break;
    1ace:	08 95       	ret
		case Press5_state3:
		transmit_data(simon_SevenSeg(lives));
    1ad0:	80 91 00 01 	lds	r24, 0x0100
    1ad4:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1ad8:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x02;
    1adc:	82 e0       	ldi	r24, 0x02	; 2
    1ade:	82 b9       	out	0x02, r24	; 2
		break;
    1ae0:	08 95       	ret
		case Press5_state4:
		transmit_data(simon_SevenSeg(lives));
    1ae2:	80 91 00 01 	lds	r24, 0x0100
    1ae6:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1aea:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x01;
    1aee:	81 e0       	ldi	r24, 0x01	; 1
    1af0:	82 b9       	out	0x02, r24	; 2
		break;
    1af2:	08 95       	ret
		case Press5_state5:
		transmit_data(simon_SevenSeg(lives));
    1af4:	80 91 00 01 	lds	r24, 0x0100
    1af8:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1afc:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x02;
    1b00:	82 e0       	ldi	r24, 0x02	; 2
    1b02:	82 b9       	out	0x02, r24	; 2
		break;
    1b04:	08 95       	ret
		case Press5_state6:
		transmit_data(simon_SevenSeg(lives));
    1b06:	80 91 00 01 	lds	r24, 0x0100
    1b0a:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b0e:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x01;
    1b12:	81 e0       	ldi	r24, 0x01	; 1
    1b14:	82 b9       	out	0x02, r24	; 2
		break;
    1b16:	08 95       	ret
		case Press5_state7:
		transmit_data(simon_SevenSeg(lives));
    1b18:	80 91 00 01 	lds	r24, 0x0100
    1b1c:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b20:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x04;
    1b24:	84 e0       	ldi	r24, 0x04	; 4
    1b26:	82 b9       	out	0x02, r24	; 2
		break;
    1b28:	08 95       	ret
		case Press5_state8:
		transmit_data(simon_SevenSeg(lives));
    1b2a:	80 91 00 01 	lds	r24, 0x0100
    1b2e:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b32:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x08;
    1b36:	88 e0       	ldi	r24, 0x08	; 8
    1b38:	82 b9       	out	0x02, r24	; 2
		break;
    1b3a:	08 95       	ret
		case Press5_state9:
		transmit_data(simon_SevenSeg(lives));
    1b3c:	80 91 00 01 	lds	r24, 0x0100
    1b40:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b44:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x02;
    1b48:	82 e0       	ldi	r24, 0x02	; 2
    1b4a:	82 b9       	out	0x02, r24	; 2
		break;
    1b4c:	08 95       	ret
		case Press5_state10:
		transmit_data(simon_SevenSeg(lives));
    1b4e:	80 91 00 01 	lds	r24, 0x0100
    1b52:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b56:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x01;
    1b5a:	81 e0       	ldi	r24, 0x01	; 1
    1b5c:	82 b9       	out	0x02, r24	; 2
		break;
    1b5e:	08 95       	ret
		case Press5_state11:
		transmit_data(simon_SevenSeg(lives));
    1b60:	80 91 00 01 	lds	r24, 0x0100
    1b64:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b68:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x02;
    1b6c:	82 e0       	ldi	r24, 0x02	; 2
    1b6e:	82 b9       	out	0x02, r24	; 2
		break;
    1b70:	08 95       	ret
		case Press5_state12:
		transmit_data(simon_SevenSeg(lives));
    1b72:	80 91 00 01 	lds	r24, 0x0100
    1b76:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b7a:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x01;
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	82 b9       	out	0x02, r24	; 2
		break;
    1b82:	08 95       	ret
		case Press5_state13:
		transmit_data(simon_SevenSeg(lives));
    1b84:	80 91 00 01 	lds	r24, 0x0100
    1b88:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b8c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x04;
    1b90:	84 e0       	ldi	r24, 0x04	; 4
    1b92:	82 b9       	out	0x02, r24	; 2
		break;
    1b94:	08 95       	ret
		case Press5_state14:
		transmit_data(simon_SevenSeg(lives));
    1b96:	80 91 00 01 	lds	r24, 0x0100
    1b9a:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1b9e:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x08;
    1ba2:	88 e0       	ldi	r24, 0x08	; 8
    1ba4:	82 b9       	out	0x02, r24	; 2
		break;
    1ba6:	08 95       	ret
		case Press5_state15:
		LCD_DisplayString(1, "Fantastic Job ;)");
    1ba8:	66 ec       	ldi	r22, 0xC6	; 198
    1baa:	71 e0       	ldi	r23, 0x01	; 1
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
    1bb2:	80 91 00 01 	lds	r24, 0x0100
    1bb6:	0e 94 9c 02 	call	0x538	; 0x538 <simon_SevenSeg>
    1bba:	0e 94 7f 02 	call	0x4fe	; 0x4fe <transmit_data>
		PORTA = 0x01;
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	82 b9       	out	0x02, r24	; 2
		break;
    1bc2:	08 95       	ret
		case Off5:
		PORTA = 0x00;
    1bc4:	12 b8       	out	0x02, r1	; 2
    1bc6:	08 95       	ret

00001bc8 <main>:
		break;
	}
}
int main(void)
{
    1bc8:	cf 92       	push	r12
    1bca:	df 92       	push	r13
    1bcc:	ef 92       	push	r14
    1bce:	ff 92       	push	r15
	DDRA = 0xFF;	PORTA = 0x00;//LED outputs
    1bd0:	8f ef       	ldi	r24, 0xFF	; 255
    1bd2:	81 b9       	out	0x01, r24	; 1
    1bd4:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;//input of the buttons
    1bd6:	14 b8       	out	0x04, r1	; 4
    1bd8:	85 b9       	out	0x05, r24	; 5
	DDRD = 0xFF;	PORTD = 0x00;//seven segment output with shift register
    1bda:	8a b9       	out	0x0a, r24	; 10
    1bdc:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0xFF;	PORTC = 0x00;//data lines for LCD display
    1bde:	87 b9       	out	0x07, r24	; 7
    1be0:	18 b8       	out	0x08, r1	; 8
	
	LCD_init();
    1be2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_init>
	if(global_g > -1)
	{
		LCD_ClearScreen();
    1be6:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_ClearScreen>
		while(global_g == 0)
    1bea:	80 91 ea 01 	lds	r24, 0x01EA
    1bee:	81 11       	cpse	r24, r1
    1bf0:	26 c0       	rjmp	.+76     	; 0x1c3e <main+0x76>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1bf2:	0f 2e       	mov	r0, r31
    1bf4:	f4 ef       	ldi	r31, 0xF4	; 244
    1bf6:	cf 2e       	mov	r12, r31
    1bf8:	dd 24       	eor	r13, r13
    1bfa:	d3 94       	inc	r13
    1bfc:	e1 2c       	mov	r14, r1
    1bfe:	f1 2c       	mov	r15, r1
    1c00:	f0 2d       	mov	r31, r0
    1c02:	c0 92 01 01 	sts	0x0101, r12
    1c06:	d0 92 02 01 	sts	0x0102, r13
    1c0a:	e0 92 03 01 	sts	0x0103, r14
    1c0e:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1c12:	c0 92 eb 01 	sts	0x01EB, r12
    1c16:	d0 92 ec 01 	sts	0x01EC, r13
    1c1a:	e0 92 ed 01 	sts	0x01ED, r14
    1c1e:	f0 92 ee 01 	sts	0x01EE, r15
	{
		LCD_ClearScreen();
		while(global_g == 0)
		{
			TimerSet(500);
			TimerOn();
    1c22:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_State_machine_1();
    1c26:	0e 94 c6 02 	call	0x58c	; 0x58c <TickFct_State_machine_1>
			while(!TimerFlag);
    1c2a:	80 91 ef 01 	lds	r24, 0x01EF
    1c2e:	88 23       	and	r24, r24
    1c30:	e1 f3       	breq	.-8      	; 0x1c2a <main+0x62>
			TimerFlag = 0;	
    1c32:	10 92 ef 01 	sts	0x01EF, r1
	
	LCD_init();
	if(global_g > -1)
	{
		LCD_ClearScreen();
		while(global_g == 0)
    1c36:	80 91 ea 01 	lds	r24, 0x01EA
    1c3a:	88 23       	and	r24, r24
    1c3c:	11 f3       	breq	.-60     	; 0x1c02 <main+0x3a>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    1c3e:	80 91 ea 01 	lds	r24, 0x01EA
    1c42:	81 30       	cpi	r24, 0x01	; 1
    1c44:	29 f5       	brne	.+74     	; 0x1c90 <main+0xc8>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1c46:	0f 2e       	mov	r0, r31
    1c48:	f8 ec       	ldi	r31, 0xC8	; 200
    1c4a:	cf 2e       	mov	r12, r31
    1c4c:	d1 2c       	mov	r13, r1
    1c4e:	e1 2c       	mov	r14, r1
    1c50:	f1 2c       	mov	r15, r1
    1c52:	f0 2d       	mov	r31, r0
    1c54:	c0 92 01 01 	sts	0x0101, r12
    1c58:	d0 92 02 01 	sts	0x0102, r13
    1c5c:	e0 92 03 01 	sts	0x0103, r14
    1c60:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1c64:	c0 92 eb 01 	sts	0x01EB, r12
    1c68:	d0 92 ec 01 	sts	0x01EC, r13
    1c6c:	e0 92 ed 01 	sts	0x01ED, r14
    1c70:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;	
		}
		while(global_g == 1)
		{
			TimerSet(200);
			TimerOn();
    1c74:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress();
    1c78:	0e 94 3c 03 	call	0x678	; 0x678 <ButtonPress>
			while(!TimerFlag);
    1c7c:	80 91 ef 01 	lds	r24, 0x01EF
    1c80:	88 23       	and	r24, r24
    1c82:	e1 f3       	breq	.-8      	; 0x1c7c <main+0xb4>
			TimerFlag = 0;
    1c84:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    1c88:	80 91 ea 01 	lds	r24, 0x01EA
    1c8c:	81 30       	cpi	r24, 0x01	; 1
    1c8e:	11 f3       	breq	.-60     	; 0x1c54 <main+0x8c>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1c90:	80 91 ea 01 	lds	r24, 0x01EA
    1c94:	82 30       	cpi	r24, 0x02	; 2
    1c96:	31 f5       	brne	.+76     	; 0x1ce4 <main+0x11c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1c98:	0f 2e       	mov	r0, r31
    1c9a:	f4 ef       	ldi	r31, 0xF4	; 244
    1c9c:	cf 2e       	mov	r12, r31
    1c9e:	dd 24       	eor	r13, r13
    1ca0:	d3 94       	inc	r13
    1ca2:	e1 2c       	mov	r14, r1
    1ca4:	f1 2c       	mov	r15, r1
    1ca6:	f0 2d       	mov	r31, r0
    1ca8:	c0 92 01 01 	sts	0x0101, r12
    1cac:	d0 92 02 01 	sts	0x0102, r13
    1cb0:	e0 92 03 01 	sts	0x0103, r14
    1cb4:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1cb8:	c0 92 eb 01 	sts	0x01EB, r12
    1cbc:	d0 92 ec 01 	sts	0x01EC, r13
    1cc0:	e0 92 ed 01 	sts	0x01ED, r14
    1cc4:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 2)
		{
			TimerSet(500);
			TimerOn();
    1cc8:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine2();
    1ccc:	0e 94 2e 04 	call	0x85c	; 0x85c <TickFct_Machine2>
			while(!TimerFlag);
    1cd0:	80 91 ef 01 	lds	r24, 0x01EF
    1cd4:	88 23       	and	r24, r24
    1cd6:	e1 f3       	breq	.-8      	; 0x1cd0 <main+0x108>
			TimerFlag = 0;
    1cd8:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1cdc:	80 91 ea 01 	lds	r24, 0x01EA
    1ce0:	82 30       	cpi	r24, 0x02	; 2
    1ce2:	11 f3       	breq	.-60     	; 0x1ca8 <main+0xe0>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1ce4:	80 91 ea 01 	lds	r24, 0x01EA
    1ce8:	83 30       	cpi	r24, 0x03	; 3
    1cea:	29 f5       	brne	.+74     	; 0x1d36 <main+0x16e>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1cec:	0f 2e       	mov	r0, r31
    1cee:	f8 ec       	ldi	r31, 0xC8	; 200
    1cf0:	cf 2e       	mov	r12, r31
    1cf2:	d1 2c       	mov	r13, r1
    1cf4:	e1 2c       	mov	r14, r1
    1cf6:	f1 2c       	mov	r15, r1
    1cf8:	f0 2d       	mov	r31, r0
    1cfa:	c0 92 01 01 	sts	0x0101, r12
    1cfe:	d0 92 02 01 	sts	0x0102, r13
    1d02:	e0 92 03 01 	sts	0x0103, r14
    1d06:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1d0a:	c0 92 eb 01 	sts	0x01EB, r12
    1d0e:	d0 92 ec 01 	sts	0x01EC, r13
    1d12:	e0 92 ed 01 	sts	0x01ED, r14
    1d16:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 3)
		{
			TimerSet(200);
			TimerOn();
    1d1a:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress2();
    1d1e:	0e 94 8a 04 	call	0x914	; 0x914 <ButtonPress2>
			while(!TimerFlag);
    1d22:	80 91 ef 01 	lds	r24, 0x01EF
    1d26:	88 23       	and	r24, r24
    1d28:	e1 f3       	breq	.-8      	; 0x1d22 <main+0x15a>
			TimerFlag = 0;
    1d2a:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1d2e:	80 91 ea 01 	lds	r24, 0x01EA
    1d32:	83 30       	cpi	r24, 0x03	; 3
    1d34:	11 f3       	breq	.-60     	; 0x1cfa <main+0x132>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1d36:	80 91 ea 01 	lds	r24, 0x01EA
    1d3a:	84 30       	cpi	r24, 0x04	; 4
    1d3c:	31 f5       	brne	.+76     	; 0x1d8a <main+0x1c2>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1d3e:	0f 2e       	mov	r0, r31
    1d40:	f4 ef       	ldi	r31, 0xF4	; 244
    1d42:	cf 2e       	mov	r12, r31
    1d44:	dd 24       	eor	r13, r13
    1d46:	d3 94       	inc	r13
    1d48:	e1 2c       	mov	r14, r1
    1d4a:	f1 2c       	mov	r15, r1
    1d4c:	f0 2d       	mov	r31, r0
    1d4e:	c0 92 01 01 	sts	0x0101, r12
    1d52:	d0 92 02 01 	sts	0x0102, r13
    1d56:	e0 92 03 01 	sts	0x0103, r14
    1d5a:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1d5e:	c0 92 eb 01 	sts	0x01EB, r12
    1d62:	d0 92 ec 01 	sts	0x01EC, r13
    1d66:	e0 92 ed 01 	sts	0x01ED, r14
    1d6a:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 4)
		{
			TimerSet(500);
			TimerOn();
    1d6e:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine3();
    1d72:	0e 94 b5 05 	call	0xb6a	; 0xb6a <TickFct_Machine3>
			while(!TimerFlag);
    1d76:	80 91 ef 01 	lds	r24, 0x01EF
    1d7a:	88 23       	and	r24, r24
    1d7c:	e1 f3       	breq	.-8      	; 0x1d76 <main+0x1ae>
			TimerFlag = 0;
    1d7e:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1d82:	80 91 ea 01 	lds	r24, 0x01EA
    1d86:	84 30       	cpi	r24, 0x04	; 4
    1d88:	11 f3       	breq	.-60     	; 0x1d4e <main+0x186>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1d8a:	80 91 ea 01 	lds	r24, 0x01EA
    1d8e:	85 30       	cpi	r24, 0x05	; 5
    1d90:	29 f5       	brne	.+74     	; 0x1ddc <main+0x214>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1d92:	0f 2e       	mov	r0, r31
    1d94:	f8 ec       	ldi	r31, 0xC8	; 200
    1d96:	cf 2e       	mov	r12, r31
    1d98:	d1 2c       	mov	r13, r1
    1d9a:	e1 2c       	mov	r14, r1
    1d9c:	f1 2c       	mov	r15, r1
    1d9e:	f0 2d       	mov	r31, r0
    1da0:	c0 92 01 01 	sts	0x0101, r12
    1da4:	d0 92 02 01 	sts	0x0102, r13
    1da8:	e0 92 03 01 	sts	0x0103, r14
    1dac:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1db0:	c0 92 eb 01 	sts	0x01EB, r12
    1db4:	d0 92 ec 01 	sts	0x01EC, r13
    1db8:	e0 92 ed 01 	sts	0x01ED, r14
    1dbc:	f0 92 ee 01 	sts	0x01EE, r15
		}
		while(global_g == 5)
		{

			TimerSet(200);
			TimerOn();
    1dc0:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress3();
    1dc4:	0e 94 25 06 	call	0xc4a	; 0xc4a <ButtonPress3>
			while(!TimerFlag);
    1dc8:	80 91 ef 01 	lds	r24, 0x01EF
    1dcc:	88 23       	and	r24, r24
    1dce:	e1 f3       	breq	.-8      	; 0x1dc8 <main+0x200>
			TimerFlag = 0;
    1dd0:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1dd4:	80 91 ea 01 	lds	r24, 0x01EA
    1dd8:	85 30       	cpi	r24, 0x05	; 5
    1dda:	11 f3       	breq	.-60     	; 0x1da0 <main+0x1d8>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1ddc:	80 91 ea 01 	lds	r24, 0x01EA
    1de0:	86 30       	cpi	r24, 0x06	; 6
    1de2:	29 f5       	brne	.+74     	; 0x1e2e <main+0x266>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1de4:	0f 2e       	mov	r0, r31
    1de6:	f4 ef       	ldi	r31, 0xF4	; 244
    1de8:	cf 2e       	mov	r12, r31
    1dea:	dd 24       	eor	r13, r13
    1dec:	d3 94       	inc	r13
    1dee:	e1 2c       	mov	r14, r1
    1df0:	f1 2c       	mov	r15, r1
    1df2:	f0 2d       	mov	r31, r0
    1df4:	c0 92 01 01 	sts	0x0101, r12
    1df8:	d0 92 02 01 	sts	0x0102, r13
    1dfc:	e0 92 03 01 	sts	0x0103, r14
    1e00:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1e04:	c0 92 eb 01 	sts	0x01EB, r12
    1e08:	d0 92 ec 01 	sts	0x01EC, r13
    1e0c:	e0 92 ed 01 	sts	0x01ED, r14
    1e10:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 6)
		{
			TimerSet(500);
			TimerOn();
    1e14:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine4();
    1e18:	ca d8       	rcall	.-3692   	; 0xfae <TickFct_Machine4>
			while(!TimerFlag);
    1e1a:	80 91 ef 01 	lds	r24, 0x01EF
    1e1e:	88 23       	and	r24, r24
    1e20:	e1 f3       	breq	.-8      	; 0x1e1a <main+0x252>
			TimerFlag = 0;
    1e22:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1e26:	80 91 ea 01 	lds	r24, 0x01EA
    1e2a:	86 30       	cpi	r24, 0x06	; 6
    1e2c:	19 f3       	breq	.-58     	; 0x1df4 <main+0x22c>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1e2e:	80 91 ea 01 	lds	r24, 0x01EA
    1e32:	87 30       	cpi	r24, 0x07	; 7
    1e34:	21 f5       	brne	.+72     	; 0x1e7e <main+0x2b6>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1e36:	0f 2e       	mov	r0, r31
    1e38:	f8 ec       	ldi	r31, 0xC8	; 200
    1e3a:	cf 2e       	mov	r12, r31
    1e3c:	d1 2c       	mov	r13, r1
    1e3e:	e1 2c       	mov	r14, r1
    1e40:	f1 2c       	mov	r15, r1
    1e42:	f0 2d       	mov	r31, r0
    1e44:	c0 92 01 01 	sts	0x0101, r12
    1e48:	d0 92 02 01 	sts	0x0102, r13
    1e4c:	e0 92 03 01 	sts	0x0103, r14
    1e50:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1e54:	c0 92 eb 01 	sts	0x01EB, r12
    1e58:	d0 92 ec 01 	sts	0x01EC, r13
    1e5c:	e0 92 ed 01 	sts	0x01ED, r14
    1e60:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 7)
		{
			TimerSet(200);
			TimerOn();
    1e64:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress4();
    1e68:	26 d9       	rcall	.-3508   	; 0x10b6 <ButtonPress4>
			while(!TimerFlag);
    1e6a:	80 91 ef 01 	lds	r24, 0x01EF
    1e6e:	88 23       	and	r24, r24
    1e70:	e1 f3       	breq	.-8      	; 0x1e6a <main+0x2a2>
			TimerFlag = 0;
    1e72:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1e76:	80 91 ea 01 	lds	r24, 0x01EA
    1e7a:	87 30       	cpi	r24, 0x07	; 7
    1e7c:	19 f3       	breq	.-58     	; 0x1e44 <main+0x27c>
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1e7e:	80 91 ea 01 	lds	r24, 0x01EA
    1e82:	88 30       	cpi	r24, 0x08	; 8
    1e84:	29 f5       	brne	.+74     	; 0x1ed0 <main+0x308>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1e86:	0f 2e       	mov	r0, r31
    1e88:	f4 ef       	ldi	r31, 0xF4	; 244
    1e8a:	cf 2e       	mov	r12, r31
    1e8c:	dd 24       	eor	r13, r13
    1e8e:	d3 94       	inc	r13
    1e90:	e1 2c       	mov	r14, r1
    1e92:	f1 2c       	mov	r15, r1
    1e94:	f0 2d       	mov	r31, r0
    1e96:	c0 92 01 01 	sts	0x0101, r12
    1e9a:	d0 92 02 01 	sts	0x0102, r13
    1e9e:	e0 92 03 01 	sts	0x0103, r14
    1ea2:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1ea6:	c0 92 eb 01 	sts	0x01EB, r12
    1eaa:	d0 92 ec 01 	sts	0x01EC, r13
    1eae:	e0 92 ed 01 	sts	0x01ED, r14
    1eb2:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 8)
		{
			TimerSet(500);
			TimerOn();
    1eb6:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine5();
    1eba:	2a db       	rcall	.-2476   	; 0x1510 <TickFct_Machine5>
			while(!TimerFlag);
    1ebc:	80 91 ef 01 	lds	r24, 0x01EF
    1ec0:	88 23       	and	r24, r24
    1ec2:	e1 f3       	breq	.-8      	; 0x1ebc <main+0x2f4>
			TimerFlag = 0;
    1ec4:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1ec8:	80 91 ea 01 	lds	r24, 0x01EA
    1ecc:	88 30       	cpi	r24, 0x08	; 8
    1ece:	19 f3       	breq	.-58     	; 0x1e96 <main+0x2ce>
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1ed0:	80 91 ea 01 	lds	r24, 0x01EA
    1ed4:	89 30       	cpi	r24, 0x09	; 9
    1ed6:	29 f5       	brne	.+74     	; 0x1f22 <main+0x35a>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1ed8:	0f 2e       	mov	r0, r31
    1eda:	fc e2       	ldi	r31, 0x2C	; 44
    1edc:	cf 2e       	mov	r12, r31
    1ede:	dd 24       	eor	r13, r13
    1ee0:	d3 94       	inc	r13
    1ee2:	e1 2c       	mov	r14, r1
    1ee4:	f1 2c       	mov	r15, r1
    1ee6:	f0 2d       	mov	r31, r0
    1ee8:	c0 92 01 01 	sts	0x0101, r12
    1eec:	d0 92 02 01 	sts	0x0102, r13
    1ef0:	e0 92 03 01 	sts	0x0103, r14
    1ef4:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1ef8:	c0 92 eb 01 	sts	0x01EB, r12
    1efc:	d0 92 ec 01 	sts	0x01EC, r13
    1f00:	e0 92 ed 01 	sts	0x01ED, r14
    1f04:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 9)
		{
			TimerSet(300);
			TimerOn();
    1f08:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress5();
    1f0c:	9d db       	rcall	.-2246   	; 0x1648 <ButtonPress5>
			while(!TimerFlag);
    1f0e:	80 91 ef 01 	lds	r24, 0x01EF
    1f12:	88 23       	and	r24, r24
    1f14:	e1 f3       	breq	.-8      	; 0x1f0e <main+0x346>
			TimerFlag = 0;
    1f16:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1f1a:	80 91 ea 01 	lds	r24, 0x01EA
    1f1e:	89 30       	cpi	r24, 0x09	; 9
    1f20:	19 f3       	breq	.-58     	; 0x1ee8 <main+0x320>
			TimerOn();
			ButtonPress5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 20)
    1f22:	80 91 ea 01 	lds	r24, 0x01EA
    1f26:	84 31       	cpi	r24, 0x14	; 20
    1f28:	49 f5       	brne	.+82     	; 0x1f7c <main+0x3b4>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1f2a:	0f 2e       	mov	r0, r31
    1f2c:	f8 ee       	ldi	r31, 0xE8	; 232
    1f2e:	cf 2e       	mov	r12, r31
    1f30:	f3 e0       	ldi	r31, 0x03	; 3
    1f32:	df 2e       	mov	r13, r31
    1f34:	e1 2c       	mov	r14, r1
    1f36:	f1 2c       	mov	r15, r1
    1f38:	f0 2d       	mov	r31, r0
    1f3a:	c0 92 01 01 	sts	0x0101, r12
    1f3e:	d0 92 02 01 	sts	0x0102, r13
    1f42:	e0 92 03 01 	sts	0x0103, r14
    1f46:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1f4a:	c0 92 eb 01 	sts	0x01EB, r12
    1f4e:	d0 92 ec 01 	sts	0x01EC, r13
    1f52:	e0 92 ed 01 	sts	0x01ED, r14
    1f56:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 20)
		{
			TimerSet(1000);
			TimerOn();
    1f5a:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			LCD_DisplayString(1, "You have failed :(");
    1f5e:	67 ed       	ldi	r22, 0xD7	; 215
    1f60:	71 e0       	ldi	r23, 0x01	; 1
    1f62:	81 e0       	ldi	r24, 0x01	; 1
    1f64:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
			while(!TimerFlag);
    1f68:	80 91 ef 01 	lds	r24, 0x01EF
    1f6c:	88 23       	and	r24, r24
    1f6e:	e1 f3       	breq	.-8      	; 0x1f68 <main+0x3a0>
			TimerFlag = 0;
    1f70:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 20)
    1f74:	80 91 ea 01 	lds	r24, 0x01EA
    1f78:	84 31       	cpi	r24, 0x14	; 20
    1f7a:	f9 f2       	breq	.-66     	; 0x1f3a <main+0x372>
			while(!TimerFlag);
			TimerFlag = 0;
		}
	}
	return 0;	
    1f7c:	80 e0       	ldi	r24, 0x00	; 0
    1f7e:	90 e0       	ldi	r25, 0x00	; 0
    1f80:	ff 90       	pop	r15
    1f82:	ef 90       	pop	r14
    1f84:	df 90       	pop	r13
    1f86:	cf 90       	pop	r12
    1f88:	08 95       	ret

00001f8a <__tablejump2__>:
    1f8a:	ee 0f       	add	r30, r30
    1f8c:	ff 1f       	adc	r31, r31

00001f8e <__tablejump__>:
    1f8e:	05 90       	lpm	r0, Z+
    1f90:	f4 91       	lpm	r31, Z
    1f92:	e0 2d       	mov	r30, r0
    1f94:	09 94       	ijmp

00001f96 <_exit>:
    1f96:	f8 94       	cli

00001f98 <__stop_program>:
    1f98:	ff cf       	rjmp	.-2      	; 0x1f98 <__stop_program>
