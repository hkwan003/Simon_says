
2nd_final_prj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800100  00001e28  00001ebc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008001ea  008001ea  00001fa6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001fa6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00001fd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001275  00000000  00000000  000020be  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000253  00000000  00000000  00003333  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001d97  00000000  00000000  00003586  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000210  00000000  00000000  00005320  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000083a  00000000  00000000  00005530  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000063f  00000000  00000000  00005d6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  000063a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	04 c1       	rjmp	.+520    	; 0x20a <__ctors_end>
       2:	00 00       	nop
       4:	21 c1       	rjmp	.+578    	; 0x248 <__bad_interrupt>
       6:	00 00       	nop
       8:	1f c1       	rjmp	.+574    	; 0x248 <__bad_interrupt>
       a:	00 00       	nop
       c:	1d c1       	rjmp	.+570    	; 0x248 <__bad_interrupt>
       e:	00 00       	nop
      10:	1b c1       	rjmp	.+566    	; 0x248 <__bad_interrupt>
      12:	00 00       	nop
      14:	19 c1       	rjmp	.+562    	; 0x248 <__bad_interrupt>
      16:	00 00       	nop
      18:	17 c1       	rjmp	.+558    	; 0x248 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	15 c1       	rjmp	.+554    	; 0x248 <__bad_interrupt>
      1e:	00 00       	nop
      20:	13 c1       	rjmp	.+550    	; 0x248 <__bad_interrupt>
      22:	00 00       	nop
      24:	11 c1       	rjmp	.+546    	; 0x248 <__bad_interrupt>
      26:	00 00       	nop
      28:	0f c1       	rjmp	.+542    	; 0x248 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0d c1       	rjmp	.+538    	; 0x248 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0b c1       	rjmp	.+534    	; 0x248 <__bad_interrupt>
      32:	00 00       	nop
      34:	8b c1       	rjmp	.+790    	; 0x34c <__vector_13>
      36:	00 00       	nop
      38:	07 c1       	rjmp	.+526    	; 0x248 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	05 c1       	rjmp	.+522    	; 0x248 <__bad_interrupt>
      3e:	00 00       	nop
      40:	03 c1       	rjmp	.+518    	; 0x248 <__bad_interrupt>
      42:	00 00       	nop
      44:	01 c1       	rjmp	.+514    	; 0x248 <__bad_interrupt>
      46:	00 00       	nop
      48:	ff c0       	rjmp	.+510    	; 0x248 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	fd c0       	rjmp	.+506    	; 0x248 <__bad_interrupt>
      4e:	00 00       	nop
      50:	fb c0       	rjmp	.+502    	; 0x248 <__bad_interrupt>
      52:	00 00       	nop
      54:	f9 c0       	rjmp	.+498    	; 0x248 <__bad_interrupt>
      56:	00 00       	nop
      58:	f7 c0       	rjmp	.+494    	; 0x248 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	f5 c0       	rjmp	.+490    	; 0x248 <__bad_interrupt>
      5e:	00 00       	nop
      60:	f3 c0       	rjmp	.+486    	; 0x248 <__bad_interrupt>
      62:	00 00       	nop
      64:	f1 c0       	rjmp	.+482    	; 0x248 <__bad_interrupt>
      66:	00 00       	nop
      68:	ef c0       	rjmp	.+478    	; 0x248 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ed c0       	rjmp	.+474    	; 0x248 <__bad_interrupt>
      6e:	00 00       	nop
      70:	eb c0       	rjmp	.+470    	; 0x248 <__bad_interrupt>
      72:	00 00       	nop
      74:	e9 c0       	rjmp	.+466    	; 0x248 <__bad_interrupt>
      76:	00 00       	nop
      78:	e7 c0       	rjmp	.+462    	; 0x248 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e5 c0       	rjmp	.+458    	; 0x248 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e3 c0       	rjmp	.+454    	; 0x248 <__bad_interrupt>
      82:	00 00       	nop
      84:	e1 c0       	rjmp	.+450    	; 0x248 <__bad_interrupt>
      86:	00 00       	nop
      88:	df c0       	rjmp	.+446    	; 0x248 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	7d 03       	fmul	r23, r21
      8e:	91 03       	fmuls	r17, r17
      90:	95 03       	fmuls	r17, r21
      92:	99 03       	fmulsu	r17, r17
      94:	9d 03       	fmulsu	r17, r21
      96:	a1 03       	fmuls	r18, r17
      98:	a5 03       	fmuls	r18, r21
      9a:	ba 03       	fmulsu	r19, r18
      9c:	bc 03       	fmulsu	r19, r20
      9e:	bf 03       	fmulsu	r19, r23
      a0:	c2 03       	fmuls	r20, r18
      a2:	c5 03       	fmuls	r20, r21
      a4:	c8 03       	fmulsu	r20, r16
      a6:	cb 03       	fmulsu	r20, r19
      a8:	da 03       	fmulsu	r21, r18
      aa:	fc 03       	fmulsu	r23, r20
      ac:	1e 04       	cpc	r1, r14
      ae:	40 04       	cpc	r4, r0
      b0:	62 04       	cpc	r6, r2
      b2:	84 04       	cpc	r8, r4
      b4:	a6 04       	cpc	r10, r6
      b6:	c3 04       	cpc	r12, r3
      b8:	ca 04       	cpc	r12, r10
      ba:	d1 04       	cpc	r13, r1
      bc:	d8 04       	cpc	r13, r8
      be:	df 04       	cpc	r13, r15
      c0:	e6 04       	cpc	r14, r6
      c2:	bc 04       	cpc	r11, r12
      c4:	f0 04       	cpc	r15, r0
      c6:	04 05       	cpc	r16, r4
      c8:	17 05       	cpc	r17, r7
      ca:	1b 05       	cpc	r17, r11
      cc:	1f 05       	cpc	r17, r15
      ce:	23 05       	cpc	r18, r3
      d0:	27 05       	cpc	r18, r7
      d2:	2b 05       	cpc	r18, r11
      d4:	2f 05       	cpc	r18, r15
      d6:	33 05       	cpc	r19, r3
      d8:	37 05       	cpc	r19, r7
      da:	45 05       	cpc	r20, r5
      dc:	47 05       	cpc	r20, r7
      de:	4a 05       	cpc	r20, r10
      e0:	4d 05       	cpc	r20, r13
      e2:	50 05       	cpc	r21, r0
      e4:	53 05       	cpc	r21, r3
      e6:	56 05       	cpc	r21, r6
      e8:	59 05       	cpc	r21, r9
      ea:	5c 05       	cpc	r21, r12
      ec:	5f 05       	cpc	r21, r15
      ee:	75 05       	cpc	r23, r5
      f0:	a5 05       	cpc	r26, r5
      f2:	c7 05       	cpc	r28, r7
      f4:	e9 05       	cpc	r30, r9
      f6:	0b 06       	cpc	r0, r27
      f8:	2d 06       	cpc	r2, r29
      fa:	4f 06       	cpc	r4, r31
      fc:	71 06       	cpc	r7, r17
      fe:	93 06       	cpc	r9, r19
     100:	b5 06       	cpc	r11, r21
     102:	9d 05       	cpc	r25, r13
     104:	cf 06       	cpc	r12, r31
     106:	d6 06       	cpc	r13, r22
     108:	dd 06       	cpc	r13, r29
     10a:	e4 06       	cpc	r14, r20
     10c:	eb 06       	cpc	r14, r27
     10e:	f2 06       	cpc	r15, r18
     110:	f9 06       	cpc	r15, r25
     112:	00 07       	cpc	r16, r16
     114:	07 07       	cpc	r16, r23
     116:	c8 06       	cpc	r12, r24
     118:	12 07       	cpc	r17, r18
     11a:	26 07       	cpc	r18, r22
     11c:	39 07       	cpc	r19, r25
     11e:	3d 07       	cpc	r19, r29
     120:	41 07       	cpc	r20, r17
     122:	45 07       	cpc	r20, r21
     124:	49 07       	cpc	r20, r25
     126:	4d 07       	cpc	r20, r29
     128:	51 07       	cpc	r21, r17
     12a:	55 07       	cpc	r21, r21
     12c:	59 07       	cpc	r21, r25
     12e:	5d 07       	cpc	r21, r29
     130:	61 07       	cpc	r22, r17
     132:	65 07       	cpc	r22, r21
     134:	72 07       	cpc	r23, r18
     136:	74 07       	cpc	r23, r20
     138:	77 07       	cpc	r23, r23
     13a:	7a 07       	cpc	r23, r26
     13c:	7d 07       	cpc	r23, r29
     13e:	80 07       	cpc	r24, r16
     140:	83 07       	cpc	r24, r19
     142:	86 07       	cpc	r24, r22
     144:	89 07       	cpc	r24, r25
     146:	8c 07       	cpc	r24, r28
     148:	8f 07       	cpc	r24, r31
     14a:	92 07       	cpc	r25, r18
     14c:	95 07       	cpc	r25, r21
     14e:	aa 07       	cpc	r26, r26
     150:	d2 07       	cpc	r29, r18
     152:	f4 07       	cpc	r31, r20
     154:	16 08       	sbc	r1, r6
     156:	38 08       	sbc	r3, r8
     158:	5a 08       	sbc	r5, r10
     15a:	7c 08       	sbc	r7, r12
     15c:	9e 08       	sbc	r9, r14
     15e:	c0 08       	sbc	r12, r0
     160:	e2 08       	sbc	r14, r2
     162:	04 09       	sbc	r16, r4
     164:	26 09       	sbc	r18, r6
     166:	48 09       	sbc	r20, r8
     168:	4e 09       	sbc	r20, r14
     16a:	69 09       	sbc	r22, r9
     16c:	70 09       	sbc	r23, r0
     16e:	77 09       	sbc	r23, r7
     170:	7e 09       	sbc	r23, r14
     172:	85 09       	sbc	r24, r5
     174:	8c 09       	sbc	r24, r12
     176:	93 09       	sbc	r25, r3
     178:	9a 09       	sbc	r25, r10
     17a:	a1 09       	sbc	r26, r1
     17c:	a8 09       	sbc	r26, r8
     17e:	af 09       	sbc	r26, r15
     180:	b6 09       	sbc	r27, r6
     182:	62 09       	sbc	r22, r2
     184:	c2 09       	sbc	r28, r2
     186:	d6 09       	sbc	r29, r6
     188:	eb 09       	sbc	r30, r11
     18a:	ef 09       	sbc	r30, r15
     18c:	f3 09       	sbc	r31, r3
     18e:	f7 09       	sbc	r31, r7
     190:	fb 09       	sbc	r31, r11
     192:	ff 09       	sbc	r31, r15
     194:	03 0a       	sbc	r0, r19
     196:	07 0a       	sbc	r0, r23
     198:	0b 0a       	sbc	r0, r27
     19a:	0f 0a       	sbc	r0, r31
     19c:	13 0a       	sbc	r1, r19
     19e:	17 0a       	sbc	r1, r23
     1a0:	1b 0a       	sbc	r1, r27
     1a2:	1f 0a       	sbc	r1, r31
     1a4:	23 0a       	sbc	r2, r19
     1a6:	30 0a       	sbc	r3, r16
     1a8:	32 0a       	sbc	r3, r18
     1aa:	35 0a       	sbc	r3, r21
     1ac:	38 0a       	sbc	r3, r24
     1ae:	3b 0a       	sbc	r3, r27
     1b0:	3e 0a       	sbc	r3, r30
     1b2:	41 0a       	sbc	r4, r17
     1b4:	44 0a       	sbc	r4, r20
     1b6:	47 0a       	sbc	r4, r23
     1b8:	4a 0a       	sbc	r4, r26
     1ba:	4d 0a       	sbc	r4, r29
     1bc:	50 0a       	sbc	r5, r16
     1be:	53 0a       	sbc	r5, r19
     1c0:	56 0a       	sbc	r5, r22
     1c2:	59 0a       	sbc	r5, r25
     1c4:	5c 0a       	sbc	r5, r28
     1c6:	72 0a       	sbc	r7, r18
     1c8:	9a 0a       	sbc	r9, r26
     1ca:	bc 0a       	sbc	r11, r28
     1cc:	de 0a       	sbc	r13, r30
     1ce:	00 0b       	sbc	r16, r16
     1d0:	22 0b       	sbc	r18, r18
     1d2:	44 0b       	sbc	r20, r20
     1d4:	66 0b       	sbc	r22, r22
     1d6:	88 0b       	sbc	r24, r24
     1d8:	aa 0b       	sbc	r26, r26
     1da:	cc 0b       	sbc	r28, r28
     1dc:	ee 0b       	sbc	r30, r30
     1de:	10 0c       	add	r1, r0
     1e0:	32 0c       	add	r3, r2
     1e2:	54 0c       	add	r5, r4
     1e4:	76 0c       	add	r7, r6
     1e6:	7c 0c       	add	r7, r12
     1e8:	99 0c       	add	r9, r9
     1ea:	a2 0c       	add	r10, r2
     1ec:	ab 0c       	add	r10, r11
     1ee:	b4 0c       	add	r11, r4
     1f0:	bd 0c       	add	r11, r13
     1f2:	c6 0c       	add	r12, r6
     1f4:	cf 0c       	add	r12, r15
     1f6:	d8 0c       	add	r13, r8
     1f8:	e1 0c       	add	r14, r1
     1fa:	ea 0c       	add	r14, r10
     1fc:	f3 0c       	add	r15, r3
     1fe:	fc 0c       	add	r15, r12
     200:	05 0d       	add	r16, r5
     202:	0e 0d       	add	r16, r14
     204:	17 0d       	add	r17, r7
     206:	90 0c       	add	r9, r0
     208:	25 0d       	add	r18, r5

0000020a <__ctors_end>:
     20a:	11 24       	eor	r1, r1
     20c:	1f be       	out	0x3f, r1	; 63
     20e:	cf ef       	ldi	r28, 0xFF	; 255
     210:	d0 e4       	ldi	r29, 0x40	; 64
     212:	de bf       	out	0x3e, r29	; 62
     214:	cd bf       	out	0x3d, r28	; 61

00000216 <__do_copy_data>:
     216:	11 e0       	ldi	r17, 0x01	; 1
     218:	a0 e0       	ldi	r26, 0x00	; 0
     21a:	b1 e0       	ldi	r27, 0x01	; 1
     21c:	e8 e2       	ldi	r30, 0x28	; 40
     21e:	fe e1       	ldi	r31, 0x1E	; 30
     220:	00 e0       	ldi	r16, 0x00	; 0
     222:	0b bf       	out	0x3b, r16	; 59
     224:	02 c0       	rjmp	.+4      	; 0x22a <__do_copy_data+0x14>
     226:	07 90       	elpm	r0, Z+
     228:	0d 92       	st	X+, r0
     22a:	aa 3e       	cpi	r26, 0xEA	; 234
     22c:	b1 07       	cpc	r27, r17
     22e:	d9 f7       	brne	.-10     	; 0x226 <__do_copy_data+0x10>

00000230 <__do_clear_bss>:
     230:	21 e0       	ldi	r18, 0x01	; 1
     232:	aa ee       	ldi	r26, 0xEA	; 234
     234:	b1 e0       	ldi	r27, 0x01	; 1
     236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
     238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
     23a:	ac 3f       	cpi	r26, 0xFC	; 252
     23c:	b2 07       	cpc	r27, r18
     23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
     240:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <main>
     244:	0c 94 12 0f 	jmp	0x1e24	; 0x1e24 <_exit>

00000248 <__bad_interrupt>:
     248:	db ce       	rjmp	.-586    	; 0x0 <__vectors>

0000024a <delay_ms>:
	else {
		data = simon_SevenSeg(0);
	}
	transmit_data(data);
	PORTD = (PORTD & 0xF8) | 0x01;
}
     24a:	18 16       	cp	r1, r24
     24c:	19 06       	cpc	r1, r25
     24e:	9c f4       	brge	.+38     	; 0x276 <delay_ms+0x2c>
     250:	40 e0       	ldi	r20, 0x00	; 0
     252:	50 e0       	ldi	r21, 0x00	; 0
     254:	77 e0       	ldi	r23, 0x07	; 7
     256:	63 e0       	ldi	r22, 0x03	; 3
     258:	0b c0       	rjmp	.+22     	; 0x270 <delay_ms+0x26>
     25a:	00 00       	nop
     25c:	21 50       	subi	r18, 0x01	; 1
     25e:	31 09       	sbc	r19, r1
     260:	21 15       	cp	r18, r1
     262:	31 05       	cpc	r19, r1
     264:	d1 f7       	brne	.-12     	; 0x25a <delay_ms+0x10>
     266:	4f 5f       	subi	r20, 0xFF	; 255
     268:	5f 4f       	sbci	r21, 0xFF	; 255
     26a:	48 17       	cp	r20, r24
     26c:	59 07       	cpc	r21, r25
     26e:	19 f0       	breq	.+6      	; 0x276 <delay_ms+0x2c>
     270:	27 2f       	mov	r18, r23
     272:	36 2f       	mov	r19, r22
     274:	f2 cf       	rjmp	.-28     	; 0x25a <delay_ms+0x10>
     276:	08 95       	ret

00000278 <LCD_WriteCommand>:
     278:	5e 98       	cbi	0x0b, 6	; 11
     27a:	88 b9       	out	0x08, r24	; 8
     27c:	5f 9a       	sbi	0x0b, 7	; 11
     27e:	00 00       	nop
     280:	5f 98       	cbi	0x0b, 7	; 11
     282:	82 e0       	ldi	r24, 0x02	; 2
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	e1 cf       	rjmp	.-62     	; 0x24a <delay_ms>
     288:	08 95       	ret

0000028a <LCD_ClearScreen>:
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	f5 cf       	rjmp	.-22     	; 0x278 <LCD_WriteCommand>
     28e:	08 95       	ret

00000290 <LCD_Cursor>:
     290:	81 31       	cpi	r24, 0x11	; 17
     292:	18 f4       	brcc	.+6      	; 0x29a <LCD_Cursor+0xa>
     294:	81 58       	subi	r24, 0x81	; 129
     296:	f0 cf       	rjmp	.-32     	; 0x278 <LCD_WriteCommand>
     298:	08 95       	ret
     29a:	81 55       	subi	r24, 0x51	; 81
     29c:	ed cf       	rjmp	.-38     	; 0x278 <LCD_WriteCommand>
     29e:	08 95       	ret

000002a0 <LCD_init>:
     2a0:	84 e6       	ldi	r24, 0x64	; 100
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	d2 df       	rcall	.-92     	; 0x24a <delay_ms>
     2a6:	88 e3       	ldi	r24, 0x38	; 56
     2a8:	e7 df       	rcall	.-50     	; 0x278 <LCD_WriteCommand>
     2aa:	86 e0       	ldi	r24, 0x06	; 6
     2ac:	e5 df       	rcall	.-54     	; 0x278 <LCD_WriteCommand>
     2ae:	8f e0       	ldi	r24, 0x0F	; 15
     2b0:	e3 df       	rcall	.-58     	; 0x278 <LCD_WriteCommand>
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	e1 df       	rcall	.-62     	; 0x278 <LCD_WriteCommand>
     2b6:	8a e0       	ldi	r24, 0x0A	; 10
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	c7 cf       	rjmp	.-114    	; 0x24a <delay_ms>
     2bc:	08 95       	ret

000002be <LCD_WriteData>:
     2be:	5e 9a       	sbi	0x0b, 6	; 11
     2c0:	88 b9       	out	0x08, r24	; 8
     2c2:	5f 9a       	sbi	0x0b, 7	; 11
     2c4:	00 00       	nop
     2c6:	5f 98       	cbi	0x0b, 7	; 11
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	be cf       	rjmp	.-132    	; 0x24a <delay_ms>
     2ce:	08 95       	ret

000002d0 <LCD_DisplayString>:
     2d0:	0f 93       	push	r16
     2d2:	1f 93       	push	r17
     2d4:	cf 93       	push	r28
     2d6:	df 93       	push	r29
     2d8:	18 2f       	mov	r17, r24
     2da:	eb 01       	movw	r28, r22
     2dc:	d6 df       	rcall	.-84     	; 0x28a <LCD_ClearScreen>
     2de:	88 81       	ld	r24, Y
     2e0:	88 23       	and	r24, r24
     2e2:	59 f0       	breq	.+22     	; 0x2fa <LCD_DisplayString+0x2a>
     2e4:	01 e0       	ldi	r16, 0x01	; 1
     2e6:	01 0f       	add	r16, r17
     2e8:	81 2f       	mov	r24, r17
     2ea:	d2 df       	rcall	.-92     	; 0x290 <LCD_Cursor>
     2ec:	89 91       	ld	r24, Y+
     2ee:	e7 df       	rcall	.-50     	; 0x2be <LCD_WriteData>
     2f0:	88 81       	ld	r24, Y
     2f2:	88 23       	and	r24, r24
     2f4:	11 f0       	breq	.+4      	; 0x2fa <LCD_DisplayString+0x2a>
     2f6:	10 2f       	mov	r17, r16
     2f8:	f5 cf       	rjmp	.-22     	; 0x2e4 <LCD_DisplayString+0x14>
     2fa:	df 91       	pop	r29
     2fc:	cf 91       	pop	r28
     2fe:	1f 91       	pop	r17
     300:	0f 91       	pop	r16
     302:	08 95       	ret

00000304 <TimerOn>:
     304:	8b e0       	ldi	r24, 0x0B	; 11
     306:	80 93 81 00 	sts	0x0081, r24
     30a:	8d e7       	ldi	r24, 0x7D	; 125
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	90 93 89 00 	sts	0x0089, r25
     312:	80 93 88 00 	sts	0x0088, r24
     316:	82 e0       	ldi	r24, 0x02	; 2
     318:	80 93 6f 00 	sts	0x006F, r24
     31c:	10 92 85 00 	sts	0x0085, r1
     320:	10 92 84 00 	sts	0x0084, r1
     324:	80 91 01 01 	lds	r24, 0x0101
     328:	90 91 02 01 	lds	r25, 0x0102
     32c:	a0 91 03 01 	lds	r26, 0x0103
     330:	b0 91 04 01 	lds	r27, 0x0104
     334:	80 93 eb 01 	sts	0x01EB, r24
     338:	90 93 ec 01 	sts	0x01EC, r25
     33c:	a0 93 ed 01 	sts	0x01ED, r26
     340:	b0 93 ee 01 	sts	0x01EE, r27
     344:	8f b7       	in	r24, 0x3f	; 63
     346:	80 68       	ori	r24, 0x80	; 128
     348:	8f bf       	out	0x3f, r24	; 63
     34a:	08 95       	ret

0000034c <__vector_13>:
     34c:	1f 92       	push	r1
     34e:	0f 92       	push	r0
     350:	0f b6       	in	r0, 0x3f	; 63
     352:	0f 92       	push	r0
     354:	11 24       	eor	r1, r1
     356:	8f 93       	push	r24
     358:	9f 93       	push	r25
     35a:	af 93       	push	r26
     35c:	bf 93       	push	r27
     35e:	80 91 eb 01 	lds	r24, 0x01EB
     362:	90 91 ec 01 	lds	r25, 0x01EC
     366:	a0 91 ed 01 	lds	r26, 0x01ED
     36a:	b0 91 ee 01 	lds	r27, 0x01EE
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	a1 09       	sbc	r26, r1
     372:	b1 09       	sbc	r27, r1
     374:	80 93 eb 01 	sts	0x01EB, r24
     378:	90 93 ec 01 	sts	0x01EC, r25
     37c:	a0 93 ed 01 	sts	0x01ED, r26
     380:	b0 93 ee 01 	sts	0x01EE, r27
     384:	89 2b       	or	r24, r25
     386:	8a 2b       	or	r24, r26
     388:	8b 2b       	or	r24, r27
     38a:	99 f4       	brne	.+38     	; 0x3b2 <__vector_13+0x66>
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	80 93 ef 01 	sts	0x01EF, r24
     392:	80 91 01 01 	lds	r24, 0x0101
     396:	90 91 02 01 	lds	r25, 0x0102
     39a:	a0 91 03 01 	lds	r26, 0x0103
     39e:	b0 91 04 01 	lds	r27, 0x0104
     3a2:	80 93 eb 01 	sts	0x01EB, r24
     3a6:	90 93 ec 01 	sts	0x01EC, r25
     3aa:	a0 93 ed 01 	sts	0x01ED, r26
     3ae:	b0 93 ee 01 	sts	0x01EE, r27
     3b2:	bf 91       	pop	r27
     3b4:	af 91       	pop	r26
     3b6:	9f 91       	pop	r25
     3b8:	8f 91       	pop	r24
     3ba:	0f 90       	pop	r0
     3bc:	0f be       	out	0x3f, r0	; 63
     3be:	0f 90       	pop	r0
     3c0:	1f 90       	pop	r1
     3c2:	18 95       	reti

000003c4 <transmit_data>:
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	4b b1       	in	r20, 0x0b	; 11
     3cc:	40 7f       	andi	r20, 0xF0	; 240
     3ce:	48 60       	ori	r20, 0x08	; 8
     3d0:	4b b9       	out	0x0b, r20	; 11
     3d2:	6b b1       	in	r22, 0x0b	; 11
     3d4:	ac 01       	movw	r20, r24
     3d6:	02 2e       	mov	r0, r18
     3d8:	02 c0       	rjmp	.+4      	; 0x3de <transmit_data+0x1a>
     3da:	55 95       	asr	r21
     3dc:	47 95       	ror	r20
     3de:	0a 94       	dec	r0
     3e0:	e2 f7       	brpl	.-8      	; 0x3da <transmit_data+0x16>
     3e2:	41 70       	andi	r20, 0x01	; 1
     3e4:	46 2b       	or	r20, r22
     3e6:	4b b9       	out	0x0b, r20	; 11
     3e8:	59 9a       	sbi	0x0b, 1	; 11
     3ea:	2f 5f       	subi	r18, 0xFF	; 255
     3ec:	3f 4f       	sbci	r19, 0xFF	; 255
     3ee:	28 30       	cpi	r18, 0x08	; 8
     3f0:	31 05       	cpc	r19, r1
     3f2:	59 f7       	brne	.-42     	; 0x3ca <transmit_data+0x6>
     3f4:	5a 9a       	sbi	0x0b, 2	; 11
     3f6:	8b b1       	in	r24, 0x0b	; 11
     3f8:	80 7f       	andi	r24, 0xF0	; 240
     3fa:	8b b9       	out	0x0b, r24	; 11
     3fc:	08 95       	ret

000003fe <simon_SevenSeg>:
     3fe:	89 30       	cpi	r24, 0x09	; 9
     400:	a1 f0       	breq	.+40     	; 0x42a <simon_SevenSeg+0x2c>
     402:	88 30       	cpi	r24, 0x08	; 8
     404:	a1 f0       	breq	.+40     	; 0x42e <simon_SevenSeg+0x30>
     406:	87 30       	cpi	r24, 0x07	; 7
     408:	a1 f0       	breq	.+40     	; 0x432 <simon_SevenSeg+0x34>
     40a:	86 30       	cpi	r24, 0x06	; 6
     40c:	a1 f0       	breq	.+40     	; 0x436 <simon_SevenSeg+0x38>
     40e:	85 30       	cpi	r24, 0x05	; 5
     410:	a1 f0       	breq	.+40     	; 0x43a <simon_SevenSeg+0x3c>
     412:	84 30       	cpi	r24, 0x04	; 4
     414:	a1 f0       	breq	.+40     	; 0x43e <simon_SevenSeg+0x40>
     416:	83 30       	cpi	r24, 0x03	; 3
     418:	a1 f0       	breq	.+40     	; 0x442 <simon_SevenSeg+0x44>
     41a:	82 30       	cpi	r24, 0x02	; 2
     41c:	a1 f0       	breq	.+40     	; 0x446 <simon_SevenSeg+0x48>
     41e:	81 30       	cpi	r24, 0x01	; 1
     420:	a1 f0       	breq	.+40     	; 0x44a <simon_SevenSeg+0x4c>
     422:	88 23       	and	r24, r24
     424:	a1 f0       	breq	.+40     	; 0x44e <simon_SevenSeg+0x50>
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	08 95       	ret
     42a:	89 e1       	ldi	r24, 0x19	; 25
     42c:	08 95       	ret
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	08 95       	ret
     432:	8f e1       	ldi	r24, 0x1F	; 31
     434:	08 95       	ret
     436:	80 e4       	ldi	r24, 0x40	; 64
     438:	08 95       	ret
     43a:	88 e4       	ldi	r24, 0x48	; 72
     43c:	08 95       	ret
     43e:	88 e9       	ldi	r24, 0x98	; 152
     440:	08 95       	ret
     442:	8c e0       	ldi	r24, 0x0C	; 12
     444:	08 95       	ret
     446:	84 e2       	ldi	r24, 0x24	; 36
     448:	08 95       	ret
     44a:	8e e9       	ldi	r24, 0x9E	; 158
     44c:	08 95       	ret
     44e:	82 e0       	ldi	r24, 0x02	; 2
     450:	08 95       	ret

00000452 <TickFct_State_machine_1>:
//////////////////////////////////////////7 seg BCD////////////////////////////////////////////////////////////////////////////////////
enum SM1_States { SM1_off, SM1_on1, SM1_on2, SM1_on3, SM1_on4} SM1_State;
void TickFct_State_machine_1() 
{
	switch(SM1_State) 
     452:	80 91 f6 01 	lds	r24, 0x01F6
     456:	82 30       	cpi	r24, 0x02	; 2
     458:	01 f1       	breq	.+64     	; 0x49a <TickFct_State_machine_1+0x48>
     45a:	28 f4       	brcc	.+10     	; 0x466 <TickFct_State_machine_1+0x14>
     45c:	88 23       	and	r24, r24
     45e:	41 f0       	breq	.+16     	; 0x470 <TickFct_State_machine_1+0x1e>
     460:	81 30       	cpi	r24, 0x01	; 1
     462:	b9 f0       	breq	.+46     	; 0x492 <TickFct_State_machine_1+0x40>
     464:	27 c0       	rjmp	.+78     	; 0x4b4 <TickFct_State_machine_1+0x62>
     466:	83 30       	cpi	r24, 0x03	; 3
     468:	e1 f0       	breq	.+56     	; 0x4a2 <TickFct_State_machine_1+0x50>
     46a:	84 30       	cpi	r24, 0x04	; 4
     46c:	f1 f0       	breq	.+60     	; 0x4aa <TickFct_State_machine_1+0x58>
     46e:	22 c0       	rjmp	.+68     	; 0x4b4 <TickFct_State_machine_1+0x62>
	{
		case SM1_off:
		LCD_DisplayString(1,"Simon Press");
     470:	65 e0       	ldi	r22, 0x05	; 5
     472:	71 e0       	ldi	r23, 0x01	; 1
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	2c df       	rcall	.-424    	; 0x2d0 <LCD_DisplayString>
		if(global_g == 0)
     478:	80 91 ea 01 	lds	r24, 0x01EA
     47c:	81 11       	cpse	r24, r1
     47e:	1a c0       	rjmp	.+52     	; 0x4b4 <TickFct_State_machine_1+0x62>
		{
			if(~PINB & 0x10)
     480:	1c 99       	sbic	0x03, 4	; 3
     482:	04 c0       	rjmp	.+8      	; 0x48c <TickFct_State_machine_1+0x3a>
			{
				SM1_State = SM1_on1;
     484:	81 e0       	ldi	r24, 0x01	; 1
     486:	80 93 f6 01 	sts	0x01F6, r24
     48a:	29 c0       	rjmp	.+82     	; 0x4de <TickFct_State_machine_1+0x8c>
			}
			else
			{
				SM1_State = SM1_off;
     48c:	10 92 f6 01 	sts	0x01F6, r1
     490:	20 c0       	rjmp	.+64     	; 0x4d2 <TickFct_State_machine_1+0x80>
			}
		}
		break;
		case SM1_on1:
		SM1_State = SM1_on2;
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	80 93 f6 01 	sts	0x01F6, r24
     498:	2a c0       	rjmp	.+84     	; 0x4ee <TickFct_State_machine_1+0x9c>
		break;
		case SM1_on2:
		SM1_State = SM1_on3;
     49a:	83 e0       	ldi	r24, 0x03	; 3
     49c:	80 93 f6 01 	sts	0x01F6, r24
     4a0:	29 c0       	rjmp	.+82     	; 0x4f4 <TickFct_State_machine_1+0xa2>
		break;
		case SM1_on3:
		SM1_State = SM1_on4;
     4a2:	84 e0       	ldi	r24, 0x04	; 4
     4a4:	80 93 f6 01 	sts	0x01F6, r24
     4a8:	28 c0       	rjmp	.+80     	; 0x4fa <TickFct_State_machine_1+0xa8>
		break;
		case SM1_on4:
		SM1_State = SM1_off;
     4aa:	10 92 f6 01 	sts	0x01F6, r1
		global_g = 1;
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	80 93 ea 01 	sts	0x01EA, r24
	}

	switch(SM1_State) 
     4b4:	80 91 f6 01 	lds	r24, 0x01F6
     4b8:	82 30       	cpi	r24, 0x02	; 2
     4ba:	c9 f0       	breq	.+50     	; 0x4ee <TickFct_State_machine_1+0x9c>
     4bc:	28 f4       	brcc	.+10     	; 0x4c8 <TickFct_State_machine_1+0x76>
     4be:	88 23       	and	r24, r24
     4c0:	41 f0       	breq	.+16     	; 0x4d2 <TickFct_State_machine_1+0x80>
     4c2:	81 30       	cpi	r24, 0x01	; 1
     4c4:	61 f0       	breq	.+24     	; 0x4de <TickFct_State_machine_1+0x8c>
     4c6:	08 95       	ret
     4c8:	83 30       	cpi	r24, 0x03	; 3
     4ca:	a1 f0       	breq	.+40     	; 0x4f4 <TickFct_State_machine_1+0xa2>
     4cc:	84 30       	cpi	r24, 0x04	; 4
     4ce:	b9 f4       	brne	.+46     	; 0x4fe <TickFct_State_machine_1+0xac>
     4d0:	14 c0       	rjmp	.+40     	; 0x4fa <TickFct_State_machine_1+0xa8>
	{
		case SM1_off:
		PORTA = 0X00;
     4d2:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     4d4:	80 91 00 01 	lds	r24, 0x0100
     4d8:	92 df       	rcall	.-220    	; 0x3fe <simon_SevenSeg>
     4da:	74 cf       	rjmp	.-280    	; 0x3c4 <transmit_data>
		break;
     4dc:	08 95       	ret
		case SM1_on1:
		LCD_ClearScreen();
     4de:	d5 de       	rcall	.-598    	; 0x28a <LCD_ClearScreen>
		LCD_DisplayString(1, "Level One");
     4e0:	61 e1       	ldi	r22, 0x11	; 17
     4e2:	71 e0       	ldi	r23, 0x01	; 1
     4e4:	81 e0       	ldi	r24, 0x01	; 1
     4e6:	f4 de       	rcall	.-536    	; 0x2d0 <LCD_DisplayString>
		PORTA = 0x01;
     4e8:	81 e0       	ldi	r24, 0x01	; 1
     4ea:	82 b9       	out	0x02, r24	; 2
		break;
     4ec:	08 95       	ret
		case SM1_on2:
		PORTA = 0x02;
     4ee:	82 e0       	ldi	r24, 0x02	; 2
     4f0:	82 b9       	out	0x02, r24	; 2
		break;
     4f2:	08 95       	ret
		case SM1_on3:
		PORTA = 0x04;
     4f4:	84 e0       	ldi	r24, 0x04	; 4
     4f6:	82 b9       	out	0x02, r24	; 2
		break;
     4f8:	08 95       	ret
		case SM1_on4:
		PORTA = 0x08;
     4fa:	88 e0       	ldi	r24, 0x08	; 8
     4fc:	82 b9       	out	0x02, r24	; 2
     4fe:	08 95       	ret

00000500 <ButtonPress>:
}

enum Press_States {Init, Press1, Press2, Press3, Press4, Error, Off} Press_States;
void ButtonPress()
{
	switch(Press_States)
     500:	80 91 fb 01 	lds	r24, 0x01FB
     504:	82 30       	cpi	r24, 0x02	; 2
     506:	09 f4       	brne	.+2      	; 0x50a <ButtonPress+0xa>
     508:	5b c0       	rjmp	.+182    	; 0x5c0 <ButtonPress+0xc0>
     50a:	28 f4       	brcc	.+10     	; 0x516 <ButtonPress+0x16>
     50c:	88 23       	and	r24, r24
     50e:	61 f0       	breq	.+24     	; 0x528 <ButtonPress+0x28>
     510:	81 30       	cpi	r24, 0x01	; 1
     512:	a1 f1       	breq	.+104    	; 0x57c <ButtonPress+0x7c>
     514:	a7 c0       	rjmp	.+334    	; 0x664 <ButtonPress+0x164>
     516:	84 30       	cpi	r24, 0x04	; 4
     518:	09 f4       	brne	.+2      	; 0x51c <ButtonPress+0x1c>
     51a:	96 c0       	rjmp	.+300    	; 0x648 <ButtonPress+0x148>
     51c:	08 f4       	brcc	.+2      	; 0x520 <ButtonPress+0x20>
     51e:	72 c0       	rjmp	.+228    	; 0x604 <ButtonPress+0x104>
     520:	85 30       	cpi	r24, 0x05	; 5
     522:	09 f4       	brne	.+2      	; 0x526 <ButtonPress+0x26>
     524:	97 c0       	rjmp	.+302    	; 0x654 <ButtonPress+0x154>
     526:	9e c0       	rjmp	.+316    	; 0x664 <ButtonPress+0x164>
	{
		case Init:
		if(global_g == 1)
     528:	80 91 ea 01 	lds	r24, 0x01EA
     52c:	81 30       	cpi	r24, 0x01	; 1
     52e:	09 f0       	breq	.+2      	; 0x532 <ButtonPress+0x32>
     530:	d8 c0       	rjmp	.+432    	; 0x6e2 <ButtonPress+0x1e2>
		{
			LCD_DisplayString(1, "Begin Pressing");
     532:	6b e1       	ldi	r22, 0x1B	; 27
     534:	71 e0       	ldi	r23, 0x01	; 1
     536:	cc de       	rcall	.-616    	; 0x2d0 <LCD_DisplayString>
			if(~PINB & 0x01)
     538:	18 99       	sbic	0x03, 0	; 3
     53a:	05 c0       	rjmp	.+10     	; 0x546 <ButtonPress+0x46>
			{
				while(~PINB & 0x01){}
     53c:	18 9b       	sbis	0x03, 0	; 3
     53e:	fe cf       	rjmp	.-4      	; 0x53c <ButtonPress+0x3c>
				Press_States = Press1;	
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	80 93 fb 01 	sts	0x01FB, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     546:	19 9b       	sbis	0x03, 1	; 3
     548:	04 c0       	rjmp	.+8      	; 0x552 <ButtonPress+0x52>
     54a:	1a 9b       	sbis	0x03, 2	; 3
     54c:	02 c0       	rjmp	.+4      	; 0x552 <ButtonPress+0x52>
     54e:	1b 99       	sbic	0x03, 3	; 3
     550:	89 c0       	rjmp	.+274    	; 0x664 <ButtonPress+0x164>
			{
				if(lives - 1 > -1)
     552:	20 91 00 01 	lds	r18, 0x0100
     556:	82 2f       	mov	r24, r18
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	01 97       	sbiw	r24, 0x01	; 1
     55c:	99 23       	and	r25, r25
     55e:	1c f0       	brlt	.+6      	; 0x566 <ButtonPress+0x66>
				{
					lives--;
     560:	21 50       	subi	r18, 0x01	; 1
     562:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
     566:	80 91 00 01 	lds	r24, 0x0100
     56a:	81 11       	cpse	r24, r1
     56c:	03 c0       	rjmp	.+6      	; 0x574 <ButtonPress+0x74>
				{
					global_g = 20;
     56e:	84 e1       	ldi	r24, 0x14	; 20
     570:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_States = Error;
     574:	85 e0       	ldi	r24, 0x05	; 5
     576:	80 93 fb 01 	sts	0x01FB, r24
     57a:	84 c0       	rjmp	.+264    	; 0x684 <ButtonPress+0x184>
			}
		}
		break;
		
		case Press1:
		if(~PINB & 0x02)
     57c:	19 99       	sbic	0x03, 1	; 3
     57e:	05 c0       	rjmp	.+10     	; 0x58a <ButtonPress+0x8a>
		{
			while(~PINB & 0x02){}
     580:	19 9b       	sbis	0x03, 1	; 3
     582:	fe cf       	rjmp	.-4      	; 0x580 <ButtonPress+0x80>
			Press_States = Press2;
     584:	82 e0       	ldi	r24, 0x02	; 2
     586:	80 93 fb 01 	sts	0x01FB, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     58a:	18 9b       	sbis	0x03, 0	; 3
     58c:	04 c0       	rjmp	.+8      	; 0x596 <ButtonPress+0x96>
     58e:	1a 9b       	sbis	0x03, 2	; 3
     590:	02 c0       	rjmp	.+4      	; 0x596 <ButtonPress+0x96>
     592:	1b 99       	sbic	0x03, 3	; 3
     594:	67 c0       	rjmp	.+206    	; 0x664 <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     596:	20 91 00 01 	lds	r18, 0x0100
     59a:	82 2f       	mov	r24, r18
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	01 97       	sbiw	r24, 0x01	; 1
     5a0:	99 23       	and	r25, r25
     5a2:	1c f0       	brlt	.+6      	; 0x5aa <ButtonPress+0xaa>
			{
				lives--;
     5a4:	21 50       	subi	r18, 0x01	; 1
     5a6:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     5aa:	80 91 00 01 	lds	r24, 0x0100
     5ae:	81 11       	cpse	r24, r1
     5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <ButtonPress+0xb8>
			{
				global_g = 20;
     5b2:	84 e1       	ldi	r24, 0x14	; 20
     5b4:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_States = Error;
     5b8:	85 e0       	ldi	r24, 0x05	; 5
     5ba:	80 93 fb 01 	sts	0x01FB, r24
     5be:	62 c0       	rjmp	.+196    	; 0x684 <ButtonPress+0x184>
		}
		break;
		case Press2:
		if(~PINB & 0x04)
     5c0:	1a 99       	sbic	0x03, 2	; 3
     5c2:	05 c0       	rjmp	.+10     	; 0x5ce <ButtonPress+0xce>
		{
			while(~PINB & 0x04){}
     5c4:	1a 9b       	sbis	0x03, 2	; 3
     5c6:	fe cf       	rjmp	.-4      	; 0x5c4 <ButtonPress+0xc4>
			Press_States = Press3;
     5c8:	83 e0       	ldi	r24, 0x03	; 3
     5ca:	80 93 fb 01 	sts	0x01FB, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     5ce:	19 9b       	sbis	0x03, 1	; 3
     5d0:	04 c0       	rjmp	.+8      	; 0x5da <ButtonPress+0xda>
     5d2:	18 9b       	sbis	0x03, 0	; 3
     5d4:	02 c0       	rjmp	.+4      	; 0x5da <ButtonPress+0xda>
     5d6:	1b 99       	sbic	0x03, 3	; 3
     5d8:	45 c0       	rjmp	.+138    	; 0x664 <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     5da:	20 91 00 01 	lds	r18, 0x0100
     5de:	82 2f       	mov	r24, r18
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	01 97       	sbiw	r24, 0x01	; 1
     5e4:	99 23       	and	r25, r25
     5e6:	1c f0       	brlt	.+6      	; 0x5ee <ButtonPress+0xee>
			{
				lives--;
     5e8:	21 50       	subi	r18, 0x01	; 1
     5ea:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     5ee:	80 91 00 01 	lds	r24, 0x0100
     5f2:	81 11       	cpse	r24, r1
     5f4:	03 c0       	rjmp	.+6      	; 0x5fc <ButtonPress+0xfc>
			{
				global_g = 20;
     5f6:	84 e1       	ldi	r24, 0x14	; 20
     5f8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_States = Error;
     5fc:	85 e0       	ldi	r24, 0x05	; 5
     5fe:	80 93 fb 01 	sts	0x01FB, r24
     602:	40 c0       	rjmp	.+128    	; 0x684 <ButtonPress+0x184>
		}
		break;
		case Press3:
		if(~PINB & 0x08)
     604:	1b 99       	sbic	0x03, 3	; 3
     606:	05 c0       	rjmp	.+10     	; 0x612 <ButtonPress+0x112>
		{
			while(~PINB & 0x08){}
     608:	1b 9b       	sbis	0x03, 3	; 3
     60a:	fe cf       	rjmp	.-4      	; 0x608 <ButtonPress+0x108>
			Press_States = Press4;
     60c:	84 e0       	ldi	r24, 0x04	; 4
     60e:	80 93 fb 01 	sts	0x01FB, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     612:	19 9b       	sbis	0x03, 1	; 3
     614:	04 c0       	rjmp	.+8      	; 0x61e <ButtonPress+0x11e>
     616:	1a 9b       	sbis	0x03, 2	; 3
     618:	02 c0       	rjmp	.+4      	; 0x61e <ButtonPress+0x11e>
     61a:	18 99       	sbic	0x03, 0	; 3
     61c:	23 c0       	rjmp	.+70     	; 0x664 <ButtonPress+0x164>
		{
			if(lives - 1 > -1)
     61e:	20 91 00 01 	lds	r18, 0x0100
     622:	82 2f       	mov	r24, r18
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	01 97       	sbiw	r24, 0x01	; 1
     628:	99 23       	and	r25, r25
     62a:	1c f0       	brlt	.+6      	; 0x632 <ButtonPress+0x132>
			{
				lives--;
     62c:	21 50       	subi	r18, 0x01	; 1
     62e:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     632:	80 91 00 01 	lds	r24, 0x0100
     636:	81 11       	cpse	r24, r1
     638:	03 c0       	rjmp	.+6      	; 0x640 <ButtonPress+0x140>
			{
				global_g = 20;
     63a:	84 e1       	ldi	r24, 0x14	; 20
     63c:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_States = Error;
     640:	85 e0       	ldi	r24, 0x05	; 5
     642:	80 93 fb 01 	sts	0x01FB, r24
     646:	1e c0       	rjmp	.+60     	; 0x684 <ButtonPress+0x184>
		}
		break;
		case Press4:
		if(~PINB & 0x10)
     648:	1c 99       	sbic	0x03, 4	; 3
     64a:	38 c0       	rjmp	.+112    	; 0x6bc <ButtonPress+0x1bc>
		{
			Press_States = Off;	
     64c:	86 e0       	ldi	r24, 0x06	; 6
     64e:	80 93 fb 01 	sts	0x01FB, r24
     652:	3f c0       	rjmp	.+126    	; 0x6d2 <ButtonPress+0x1d2>
		}
		break;
		case Error:
		if(~PINB & 0x01)
     654:	18 99       	sbic	0x03, 0	; 3
     656:	16 c0       	rjmp	.+44     	; 0x684 <ButtonPress+0x184>
		{
			while(~PINB & 0x01){}
     658:	18 9b       	sbis	0x03, 0	; 3
     65a:	fe cf       	rjmp	.-4      	; 0x658 <ButtonPress+0x158>
			Press_States = Press1;
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	80 93 fb 01 	sts	0x01FB, r24
     662:	17 c0       	rjmp	.+46     	; 0x692 <ButtonPress+0x192>
		}
		break;
	}
	switch(Press_States)
     664:	80 91 fb 01 	lds	r24, 0x01FB
     668:	83 30       	cpi	r24, 0x03	; 3
     66a:	09 f1       	breq	.+66     	; 0x6ae <ButtonPress+0x1ae>
     66c:	28 f4       	brcc	.+10     	; 0x678 <ButtonPress+0x178>
     66e:	81 30       	cpi	r24, 0x01	; 1
     670:	81 f0       	breq	.+32     	; 0x692 <ButtonPress+0x192>
     672:	82 30       	cpi	r24, 0x02	; 2
     674:	a9 f0       	breq	.+42     	; 0x6a0 <ButtonPress+0x1a0>
     676:	08 95       	ret
     678:	85 30       	cpi	r24, 0x05	; 5
     67a:	21 f0       	breq	.+8      	; 0x684 <ButtonPress+0x184>
     67c:	f8 f0       	brcs	.+62     	; 0x6bc <ButtonPress+0x1bc>
     67e:	86 30       	cpi	r24, 0x06	; 6
     680:	41 f1       	breq	.+80     	; 0x6d2 <ButtonPress+0x1d2>
     682:	08 95       	ret
	{
		case Error:
		PORTA = 0x10;
     684:	80 e1       	ldi	r24, 0x10	; 16
     686:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     688:	80 91 00 01 	lds	r24, 0x0100
     68c:	b8 de       	rcall	.-656    	; 0x3fe <simon_SevenSeg>
     68e:	9a ce       	rjmp	.-716    	; 0x3c4 <transmit_data>
		break;
     690:	08 95       	ret
		
		case Press1:
		PORTA = 0x01;
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     696:	80 91 00 01 	lds	r24, 0x0100
     69a:	b1 de       	rcall	.-670    	; 0x3fe <simon_SevenSeg>
     69c:	93 ce       	rjmp	.-730    	; 0x3c4 <transmit_data>
		break;
     69e:	08 95       	ret
		
		case Press2:
		PORTA = 0x02;
     6a0:	82 e0       	ldi	r24, 0x02	; 2
     6a2:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     6a4:	80 91 00 01 	lds	r24, 0x0100
     6a8:	aa de       	rcall	.-684    	; 0x3fe <simon_SevenSeg>
     6aa:	8c ce       	rjmp	.-744    	; 0x3c4 <transmit_data>
		break;
     6ac:	08 95       	ret
		
		case Press3:
		PORTA = 0x04;
     6ae:	84 e0       	ldi	r24, 0x04	; 4
     6b0:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     6b2:	80 91 00 01 	lds	r24, 0x0100
     6b6:	a3 de       	rcall	.-698    	; 0x3fe <simon_SevenSeg>
     6b8:	85 ce       	rjmp	.-758    	; 0x3c4 <transmit_data>
		break;
     6ba:	08 95       	ret
		
		case Press4:
		PORTA = 0x08;
     6bc:	88 e0       	ldi	r24, 0x08	; 8
     6be:	82 b9       	out	0x02, r24	; 2
		LCD_DisplayString(1,"Good Job");
     6c0:	6a e2       	ldi	r22, 0x2A	; 42
     6c2:	71 e0       	ldi	r23, 0x01	; 1
     6c4:	81 e0       	ldi	r24, 0x01	; 1
     6c6:	04 de       	rcall	.-1016   	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
     6c8:	80 91 00 01 	lds	r24, 0x0100
     6cc:	98 de       	rcall	.-720    	; 0x3fe <simon_SevenSeg>
     6ce:	7a ce       	rjmp	.-780    	; 0x3c4 <transmit_data>
		break;
     6d0:	08 95       	ret
		case Off:
		PORTA = 0x00;
     6d2:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     6d4:	80 91 00 01 	lds	r24, 0x0100
     6d8:	92 de       	rcall	.-732    	; 0x3fe <simon_SevenSeg>
     6da:	74 de       	rcall	.-792    	; 0x3c4 <transmit_data>
		global_g = 2;
     6dc:	82 e0       	ldi	r24, 0x02	; 2
     6de:	80 93 ea 01 	sts	0x01EA, r24
     6e2:	08 95       	ret

000006e4 <TickFct_Machine2>:
}

enum SM2_State {SM2_off, SM2_on1, SM2_on2, SM2_on3, SM2_on4, SM2_on5, SM2_on6} SM2_States;
void TickFct_Machine2()
{
	switch(SM2_States)
     6e4:	80 91 f5 01 	lds	r24, 0x01F5
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	87 30       	cpi	r24, 0x07	; 7
     6ec:	91 05       	cpc	r25, r1
     6ee:	b8 f5       	brcc	.+110    	; 0x75e <TickFct_Machine2+0x7a>
     6f0:	fc 01       	movw	r30, r24
     6f2:	ea 5b       	subi	r30, 0xBA	; 186
     6f4:	ff 4f       	sbci	r31, 0xFF	; 255
     6f6:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{
		case SM2_off:
		if(global_g == 2)
     6fa:	80 91 ea 01 	lds	r24, 0x01EA
     6fe:	82 30       	cpi	r24, 0x02	; 2
     700:	c9 f5       	brne	.+114    	; 0x774 <TickFct_Machine2+0x90>
		{
			LCD_DisplayString(1, "Level Two");
     702:	63 e3       	ldi	r22, 0x33	; 51
     704:	71 e0       	ldi	r23, 0x01	; 1
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	e3 dd       	rcall	.-1082   	; 0x2d0 <LCD_DisplayString>
			if(~PINB & 0x01)
     70a:	18 99       	sbic	0x03, 0	; 3
     70c:	03 c0       	rjmp	.+6      	; 0x714 <TickFct_Machine2+0x30>
			{
				SM2_States = SM2_on1;
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	80 93 f5 01 	sts	0x01F5, r24
			}
			while(!(~PINB & 0x01))
     714:	18 9b       	sbis	0x03, 0	; 3
     716:	23 c0       	rjmp	.+70     	; 0x75e <TickFct_Machine2+0x7a>
			{
				SM2_States = SM2_off;
     718:	10 92 f5 01 	sts	0x01F5, r1
			LCD_DisplayString(1, "Level Two");
			if(~PINB & 0x01)
			{
				SM2_States = SM2_on1;
			}
			while(!(~PINB & 0x01))
     71c:	18 99       	sbic	0x03, 0	; 3
     71e:	fc cf       	rjmp	.-8      	; 0x718 <TickFct_Machine2+0x34>
     720:	29 c0       	rjmp	.+82     	; 0x774 <TickFct_Machine2+0x90>
		{
			SM2_States = SM2_off;
		}
		break;
		case SM2_on1:
		SM2_States = SM2_on2;
     722:	82 e0       	ldi	r24, 0x02	; 2
     724:	80 93 f5 01 	sts	0x01F5, r24
     728:	2a c0       	rjmp	.+84     	; 0x77e <TickFct_Machine2+0x9a>
		break;
		case SM2_on2:
		SM2_States = SM2_on3;
     72a:	83 e0       	ldi	r24, 0x03	; 3
     72c:	80 93 f5 01 	sts	0x01F5, r24
     730:	29 c0       	rjmp	.+82     	; 0x784 <TickFct_Machine2+0xa0>
		break;
		case SM2_on3:
		SM2_States = SM2_on4;
     732:	84 e0       	ldi	r24, 0x04	; 4
     734:	80 93 f5 01 	sts	0x01F5, r24
     738:	28 c0       	rjmp	.+80     	; 0x78a <TickFct_Machine2+0xa6>
		break;
		case SM2_on4:
		SM2_States = SM2_on5;
     73a:	85 e0       	ldi	r24, 0x05	; 5
     73c:	80 93 f5 01 	sts	0x01F5, r24
     740:	27 c0       	rjmp	.+78     	; 0x790 <TickFct_Machine2+0xac>
		break;
		case SM2_on5:
		SM2_States = SM2_on6;
     742:	86 e0       	ldi	r24, 0x06	; 6
     744:	80 93 f5 01 	sts	0x01F5, r24
     748:	26 c0       	rjmp	.+76     	; 0x796 <TickFct_Machine2+0xb2>
		break;
		case SM2_on6:
		LCD_DisplayString(1, "Lets test your  memory out");
     74a:	6d e3       	ldi	r22, 0x3D	; 61
     74c:	71 e0       	ldi	r23, 0x01	; 1
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	bf dd       	rcall	.-1154   	; 0x2d0 <LCD_DisplayString>
		global_g = 3;
     752:	83 e0       	ldi	r24, 0x03	; 3
     754:	80 93 ea 01 	sts	0x01EA, r24
		SM2_States = SM2_off;
     758:	10 92 f5 01 	sts	0x01F5, r1
		break;
     75c:	0b c0       	rjmp	.+22     	; 0x774 <TickFct_Machine2+0x90>
	}

	switch(SM2_States)
     75e:	80 91 f5 01 	lds	r24, 0x01F5
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	87 30       	cpi	r24, 0x07	; 7
     766:	91 05       	cpc	r25, r1
     768:	c0 f4       	brcc	.+48     	; 0x79a <TickFct_Machine2+0xb6>
     76a:	fc 01       	movw	r30, r24
     76c:	e3 5b       	subi	r30, 0xB3	; 179
     76e:	ff 4f       	sbci	r31, 0xFF	; 255
     770:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{
		case SM2_off:
		PORTA = 0x00;
     774:	12 b8       	out	0x02, r1	; 2
		break;
     776:	08 95       	ret
		case SM2_on1:
		PORTA = 0x01;
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	82 b9       	out	0x02, r24	; 2
		break;
     77c:	08 95       	ret
		case SM2_on2:
		PORTA = 0x04;
     77e:	84 e0       	ldi	r24, 0x04	; 4
     780:	82 b9       	out	0x02, r24	; 2
		break;
     782:	08 95       	ret
		case SM2_on3:
		PORTA = 0x08;
     784:	88 e0       	ldi	r24, 0x08	; 8
     786:	82 b9       	out	0x02, r24	; 2
		break;
     788:	08 95       	ret
		case SM2_on4:
		PORTA = 0x01;
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	82 b9       	out	0x02, r24	; 2
		break;
     78e:	08 95       	ret
		case SM2_on5:
		PORTA = 0x02;
     790:	82 e0       	ldi	r24, 0x02	; 2
     792:	82 b9       	out	0x02, r24	; 2
		break;
     794:	08 95       	ret
		case SM2_on6:
		PORTA = 0x01;
     796:	81 e0       	ldi	r24, 0x01	; 1
     798:	82 b9       	out	0x02, r24	; 2
     79a:	08 95       	ret

0000079c <ButtonPress2>:
}

enum Press_sec_level{Init2, Press_state1, Press_state2, Press_state3, Press_state4, Press_state5, Press_state6, Error2, Off2} Press_sec_level;
void ButtonPress2()
{
	switch(Press_sec_level)
     79c:	80 91 f0 01 	lds	r24, 0x01F0
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	87 30       	cpi	r24, 0x07	; 7
     7a4:	91 05       	cpc	r25, r1
     7a6:	08 f0       	brcs	.+2      	; 0x7aa <ButtonPress2+0xe>
     7a8:	d7 c0       	rjmp	.+430    	; 0x958 <ButtonPress2+0x1bc>
     7aa:	fc 01       	movw	r30, r24
     7ac:	ec 5a       	subi	r30, 0xAC	; 172
     7ae:	ff 4f       	sbci	r31, 0xFF	; 255
     7b0:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{
		case Init2:
		if(~PINB & 0x01)
     7b4:	18 99       	sbic	0x03, 0	; 3
     7b6:	05 c0       	rjmp	.+10     	; 0x7c2 <ButtonPress2+0x26>
		{
			while(~PINB & 0x01){}
     7b8:	18 9b       	sbis	0x03, 0	; 3
     7ba:	fe cf       	rjmp	.-4      	; 0x7b8 <ButtonPress2+0x1c>
			Press_sec_level = Press_state1;
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     7c2:	19 9b       	sbis	0x03, 1	; 3
     7c4:	04 c0       	rjmp	.+8      	; 0x7ce <ButtonPress2+0x32>
     7c6:	1a 9b       	sbis	0x03, 2	; 3
     7c8:	02 c0       	rjmp	.+4      	; 0x7ce <ButtonPress2+0x32>
     7ca:	1b 99       	sbic	0x03, 3	; 3
     7cc:	c8 c0       	rjmp	.+400    	; 0x95e <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     7ce:	20 91 00 01 	lds	r18, 0x0100
     7d2:	82 2f       	mov	r24, r18
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	01 97       	sbiw	r24, 0x01	; 1
     7d8:	99 23       	and	r25, r25
     7da:	1c f0       	brlt	.+6      	; 0x7e2 <ButtonPress2+0x46>
			{
				lives--;
     7dc:	21 50       	subi	r18, 0x01	; 1
     7de:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     7e2:	80 91 00 01 	lds	r24, 0x0100
     7e6:	81 11       	cpse	r24, r1
     7e8:	03 c0       	rjmp	.+6      	; 0x7f0 <ButtonPress2+0x54>
			{
				global_g = 20;
     7ea:	84 e1       	ldi	r24, 0x14	; 20
     7ec:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     7f0:	87 e0       	ldi	r24, 0x07	; 7
     7f2:	80 93 f0 01 	sts	0x01F0, r24
     7f6:	c0 c0       	rjmp	.+384    	; 0x978 <ButtonPress2+0x1dc>
		}
		break;
		case Press_state1:
		if(~PINB & 0x04)
     7f8:	1a 99       	sbic	0x03, 2	; 3
     7fa:	05 c0       	rjmp	.+10     	; 0x806 <ButtonPress2+0x6a>
		{
			while(~PINB & 0x04){}
     7fc:	1a 9b       	sbis	0x03, 2	; 3
     7fe:	fe cf       	rjmp	.-4      	; 0x7fc <ButtonPress2+0x60>
			Press_sec_level = Press_state2;
     800:	82 e0       	ldi	r24, 0x02	; 2
     802:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     806:	19 9b       	sbis	0x03, 1	; 3
     808:	04 c0       	rjmp	.+8      	; 0x812 <ButtonPress2+0x76>
     80a:	18 9b       	sbis	0x03, 0	; 3
     80c:	02 c0       	rjmp	.+4      	; 0x812 <ButtonPress2+0x76>
     80e:	1b 99       	sbic	0x03, 3	; 3
     810:	a6 c0       	rjmp	.+332    	; 0x95e <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     812:	20 91 00 01 	lds	r18, 0x0100
     816:	82 2f       	mov	r24, r18
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	01 97       	sbiw	r24, 0x01	; 1
     81c:	99 23       	and	r25, r25
     81e:	1c f0       	brlt	.+6      	; 0x826 <ButtonPress2+0x8a>
			{
				lives--;
     820:	21 50       	subi	r18, 0x01	; 1
     822:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     826:	80 91 00 01 	lds	r24, 0x0100
     82a:	81 11       	cpse	r24, r1
     82c:	03 c0       	rjmp	.+6      	; 0x834 <ButtonPress2+0x98>
			{
				global_g = 20;
     82e:	84 e1       	ldi	r24, 0x14	; 20
     830:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     834:	87 e0       	ldi	r24, 0x07	; 7
     836:	80 93 f0 01 	sts	0x01F0, r24
     83a:	9e c0       	rjmp	.+316    	; 0x978 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state2:
		if(~PINB & 0x08)
     83c:	1b 99       	sbic	0x03, 3	; 3
     83e:	05 c0       	rjmp	.+10     	; 0x84a <ButtonPress2+0xae>
		{
			while(~PINB & 0x08){}
     840:	1b 9b       	sbis	0x03, 3	; 3
     842:	fe cf       	rjmp	.-4      	; 0x840 <ButtonPress2+0xa4>
			Press_sec_level = Press_state3;
     844:	83 e0       	ldi	r24, 0x03	; 3
     846:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     84a:	19 9b       	sbis	0x03, 1	; 3
     84c:	04 c0       	rjmp	.+8      	; 0x856 <ButtonPress2+0xba>
     84e:	1a 9b       	sbis	0x03, 2	; 3
     850:	02 c0       	rjmp	.+4      	; 0x856 <ButtonPress2+0xba>
     852:	18 99       	sbic	0x03, 0	; 3
     854:	84 c0       	rjmp	.+264    	; 0x95e <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     856:	20 91 00 01 	lds	r18, 0x0100
     85a:	82 2f       	mov	r24, r18
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	01 97       	sbiw	r24, 0x01	; 1
     860:	99 23       	and	r25, r25
     862:	1c f0       	brlt	.+6      	; 0x86a <ButtonPress2+0xce>
			{
				lives--;
     864:	21 50       	subi	r18, 0x01	; 1
     866:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     86a:	80 91 00 01 	lds	r24, 0x0100
     86e:	81 11       	cpse	r24, r1
     870:	03 c0       	rjmp	.+6      	; 0x878 <ButtonPress2+0xdc>
			{
				global_g = 20;
     872:	84 e1       	ldi	r24, 0x14	; 20
     874:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     878:	87 e0       	ldi	r24, 0x07	; 7
     87a:	80 93 f0 01 	sts	0x01F0, r24
     87e:	7c c0       	rjmp	.+248    	; 0x978 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state3:
		if(~PINB & 0x01)
     880:	18 99       	sbic	0x03, 0	; 3
     882:	05 c0       	rjmp	.+10     	; 0x88e <ButtonPress2+0xf2>
		{
			while(~PINB & 0x01){}
     884:	18 9b       	sbis	0x03, 0	; 3
     886:	fe cf       	rjmp	.-4      	; 0x884 <ButtonPress2+0xe8>
			Press_sec_level = Press_state4;
     888:	84 e0       	ldi	r24, 0x04	; 4
     88a:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     88e:	19 9b       	sbis	0x03, 1	; 3
     890:	04 c0       	rjmp	.+8      	; 0x89a <ButtonPress2+0xfe>
     892:	1a 9b       	sbis	0x03, 2	; 3
     894:	02 c0       	rjmp	.+4      	; 0x89a <ButtonPress2+0xfe>
     896:	1b 99       	sbic	0x03, 3	; 3
     898:	62 c0       	rjmp	.+196    	; 0x95e <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     89a:	20 91 00 01 	lds	r18, 0x0100
     89e:	82 2f       	mov	r24, r18
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	99 23       	and	r25, r25
     8a6:	1c f0       	brlt	.+6      	; 0x8ae <ButtonPress2+0x112>
			{
				lives--;
     8a8:	21 50       	subi	r18, 0x01	; 1
     8aa:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     8ae:	80 91 00 01 	lds	r24, 0x0100
     8b2:	81 11       	cpse	r24, r1
     8b4:	03 c0       	rjmp	.+6      	; 0x8bc <ButtonPress2+0x120>
			{
				global_g = 20;
     8b6:	84 e1       	ldi	r24, 0x14	; 20
     8b8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     8bc:	87 e0       	ldi	r24, 0x07	; 7
     8be:	80 93 f0 01 	sts	0x01F0, r24
     8c2:	5a c0       	rjmp	.+180    	; 0x978 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state4:
		if(~PINB & 0x02)
     8c4:	19 99       	sbic	0x03, 1	; 3
     8c6:	05 c0       	rjmp	.+10     	; 0x8d2 <ButtonPress2+0x136>
		{
			while(~PINB & 0x02){}
     8c8:	19 9b       	sbis	0x03, 1	; 3
     8ca:	fe cf       	rjmp	.-4      	; 0x8c8 <ButtonPress2+0x12c>
			Press_sec_level = Press_state5;
     8cc:	85 e0       	ldi	r24, 0x05	; 5
     8ce:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     8d2:	18 9b       	sbis	0x03, 0	; 3
     8d4:	04 c0       	rjmp	.+8      	; 0x8de <ButtonPress2+0x142>
     8d6:	1a 9b       	sbis	0x03, 2	; 3
     8d8:	02 c0       	rjmp	.+4      	; 0x8de <ButtonPress2+0x142>
     8da:	1b 99       	sbic	0x03, 3	; 3
     8dc:	40 c0       	rjmp	.+128    	; 0x95e <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     8de:	20 91 00 01 	lds	r18, 0x0100
     8e2:	82 2f       	mov	r24, r18
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	01 97       	sbiw	r24, 0x01	; 1
     8e8:	99 23       	and	r25, r25
     8ea:	1c f0       	brlt	.+6      	; 0x8f2 <ButtonPress2+0x156>
			{
				lives--;
     8ec:	21 50       	subi	r18, 0x01	; 1
     8ee:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     8f2:	80 91 00 01 	lds	r24, 0x0100
     8f6:	81 11       	cpse	r24, r1
     8f8:	03 c0       	rjmp	.+6      	; 0x900 <ButtonPress2+0x164>
			{
				global_g = 20;
     8fa:	84 e1       	ldi	r24, 0x14	; 20
     8fc:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     900:	87 e0       	ldi	r24, 0x07	; 7
     902:	80 93 f0 01 	sts	0x01F0, r24
     906:	38 c0       	rjmp	.+112    	; 0x978 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state5:
		if(~PINB & 0x01)
     908:	18 99       	sbic	0x03, 0	; 3
     90a:	05 c0       	rjmp	.+10     	; 0x916 <ButtonPress2+0x17a>
		{
			while(~PINB & 0x01){}
     90c:	18 9b       	sbis	0x03, 0	; 3
     90e:	fe cf       	rjmp	.-4      	; 0x90c <ButtonPress2+0x170>
			Press_sec_level = Press_state6;
     910:	86 e0       	ldi	r24, 0x06	; 6
     912:	80 93 f0 01 	sts	0x01F0, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     916:	19 9b       	sbis	0x03, 1	; 3
     918:	04 c0       	rjmp	.+8      	; 0x922 <ButtonPress2+0x186>
     91a:	1a 9b       	sbis	0x03, 2	; 3
     91c:	02 c0       	rjmp	.+4      	; 0x922 <ButtonPress2+0x186>
     91e:	1b 99       	sbic	0x03, 3	; 3
     920:	1e c0       	rjmp	.+60     	; 0x95e <ButtonPress2+0x1c2>
		{
			if(lives - 1 > -1)
     922:	20 91 00 01 	lds	r18, 0x0100
     926:	82 2f       	mov	r24, r18
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	01 97       	sbiw	r24, 0x01	; 1
     92c:	99 23       	and	r25, r25
     92e:	1c f0       	brlt	.+6      	; 0x936 <ButtonPress2+0x19a>
			{
				lives--;
     930:	21 50       	subi	r18, 0x01	; 1
     932:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     936:	80 91 00 01 	lds	r24, 0x0100
     93a:	81 11       	cpse	r24, r1
     93c:	03 c0       	rjmp	.+6      	; 0x944 <ButtonPress2+0x1a8>
			{
				global_g = 20;
     93e:	84 e1       	ldi	r24, 0x14	; 20
     940:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_sec_level = Error2;
     944:	87 e0       	ldi	r24, 0x07	; 7
     946:	80 93 f0 01 	sts	0x01F0, r24
     94a:	16 c0       	rjmp	.+44     	; 0x978 <ButtonPress2+0x1dc>
		}
		break;

		case Press_state6:
		if(~PINB & 0x10)
     94c:	1c 99       	sbic	0x03, 4	; 3
     94e:	3e c0       	rjmp	.+124    	; 0x9cc <ButtonPress2+0x230>
		{
			Press_sec_level = Off2;
     950:	88 e0       	ldi	r24, 0x08	; 8
     952:	80 93 f0 01 	sts	0x01F0, r24
     956:	44 c0       	rjmp	.+136    	; 0x9e0 <ButtonPress2+0x244>
		}
		break;
		default:
		Press_sec_level = Init2;
     958:	10 92 f0 01 	sts	0x01F0, r1
     95c:	08 95       	ret
	}
	switch(Press_sec_level)
     95e:	80 91 f0 01 	lds	r24, 0x01F0
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	fc 01       	movw	r30, r24
     966:	31 97       	sbiw	r30, 0x01	; 1
     968:	e8 30       	cpi	r30, 0x08	; 8
     96a:	f1 05       	cpc	r31, r1
     96c:	08 f0       	brcs	.+2      	; 0x970 <ButtonPress2+0x1d4>
     96e:	40 c0       	rjmp	.+128    	; 0x9f0 <ButtonPress2+0x254>
     970:	e5 5a       	subi	r30, 0xA5	; 165
     972:	ff 4f       	sbci	r31, 0xFF	; 255
     974:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{		
		case Error2:
		PORTA = 0x10;
     978:	80 e1       	ldi	r24, 0x10	; 16
     97a:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     97c:	80 91 00 01 	lds	r24, 0x0100
     980:	3e dd       	rcall	.-1412   	; 0x3fe <simon_SevenSeg>
     982:	20 cd       	rjmp	.-1472   	; 0x3c4 <transmit_data>
		break;
     984:	08 95       	ret

		case Press_state1:
		PORTA = 0x01;
     986:	81 e0       	ldi	r24, 0x01	; 1
     988:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     98a:	80 91 00 01 	lds	r24, 0x0100
     98e:	37 dd       	rcall	.-1426   	; 0x3fe <simon_SevenSeg>
     990:	19 cd       	rjmp	.-1486   	; 0x3c4 <transmit_data>
		break;
     992:	08 95       	ret

		case Press_state2:
		PORTA = 0x04;
     994:	84 e0       	ldi	r24, 0x04	; 4
     996:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     998:	80 91 00 01 	lds	r24, 0x0100
     99c:	30 dd       	rcall	.-1440   	; 0x3fe <simon_SevenSeg>
     99e:	12 cd       	rjmp	.-1500   	; 0x3c4 <transmit_data>
		break;
     9a0:	08 95       	ret

		case Press_state3:
		PORTA = 0x08;
     9a2:	88 e0       	ldi	r24, 0x08	; 8
     9a4:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     9a6:	80 91 00 01 	lds	r24, 0x0100
     9aa:	29 dd       	rcall	.-1454   	; 0x3fe <simon_SevenSeg>
     9ac:	0b cd       	rjmp	.-1514   	; 0x3c4 <transmit_data>
		break;
     9ae:	08 95       	ret

		case Press_state4:
		PORTA = 0x01;
     9b0:	81 e0       	ldi	r24, 0x01	; 1
     9b2:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     9b4:	80 91 00 01 	lds	r24, 0x0100
     9b8:	22 dd       	rcall	.-1468   	; 0x3fe <simon_SevenSeg>
     9ba:	04 cd       	rjmp	.-1528   	; 0x3c4 <transmit_data>
		break;
     9bc:	08 95       	ret

		case Press_state5:
		PORTA = 0x02;
     9be:	82 e0       	ldi	r24, 0x02	; 2
     9c0:	82 b9       	out	0x02, r24	; 2
		transmit_data(simon_SevenSeg(lives));
     9c2:	80 91 00 01 	lds	r24, 0x0100
     9c6:	1b dd       	rcall	.-1482   	; 0x3fe <simon_SevenSeg>
     9c8:	fd cc       	rjmp	.-1542   	; 0x3c4 <transmit_data>
		break;
     9ca:	08 95       	ret

		case Press_state6:
		PORTA = 0x01;
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	82 b9       	out	0x02, r24	; 2
		LCD_DisplayString(1, "Good Job");
     9d0:	6a e2       	ldi	r22, 0x2A	; 42
     9d2:	71 e0       	ldi	r23, 0x01	; 1
     9d4:	7d dc       	rcall	.-1798   	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
     9d6:	80 91 00 01 	lds	r24, 0x0100
     9da:	11 dd       	rcall	.-1502   	; 0x3fe <simon_SevenSeg>
     9dc:	f3 cc       	rjmp	.-1562   	; 0x3c4 <transmit_data>
		break;
     9de:	08 95       	ret

		case Off2:
		PORTA = 0x00;
     9e0:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     9e2:	80 91 00 01 	lds	r24, 0x0100
     9e6:	0b dd       	rcall	.-1514   	; 0x3fe <simon_SevenSeg>
     9e8:	ed dc       	rcall	.-1574   	; 0x3c4 <transmit_data>
		global_g = 4;
     9ea:	84 e0       	ldi	r24, 0x04	; 4
     9ec:	80 93 ea 01 	sts	0x01EA, r24
     9f0:	08 95       	ret

000009f2 <TickFct_Machine3>:
}

enum SM3_States {SM3_off, SM3_on1, SM3_on2, SM3_on3, SM3_on4, SM3_on5, SM3_on6, SM3_on7, SM3_on8, SM3_on9} SM3_State;
void TickFct_Machine3()
{
	switch(SM3_State)
     9f2:	80 91 f1 01 	lds	r24, 0x01F1
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	8a 30       	cpi	r24, 0x0A	; 10
     9fa:	91 05       	cpc	r25, r1
     9fc:	d8 f5       	brcc	.+118    	; 0xa74 <TickFct_Machine3+0x82>
     9fe:	fc 01       	movw	r30, r24
     a00:	ed 59       	subi	r30, 0x9D	; 157
     a02:	ff 4f       	sbci	r31, 0xFF	; 255
     a04:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{
		case SM3_off:
		LCD_DisplayString(1, "Level Three");
     a08:	68 e5       	ldi	r22, 0x58	; 88
     a0a:	71 e0       	ldi	r23, 0x01	; 1
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	60 dc       	rcall	.-1856   	; 0x2d0 <LCD_DisplayString>
		if(global_g == 4)
     a10:	80 91 ea 01 	lds	r24, 0x01EA
     a14:	84 30       	cpi	r24, 0x04	; 4
     a16:	71 f5       	brne	.+92     	; 0xa74 <TickFct_Machine3+0x82>
		{
			if(~PINB & 0x01)
     a18:	18 99       	sbic	0x03, 0	; 3
     a1a:	06 c0       	rjmp	.+12     	; 0xa28 <TickFct_Machine3+0x36>
			{
				while(~PINB & 0x01){}
     a1c:	18 9b       	sbis	0x03, 0	; 3
     a1e:	fe cf       	rjmp	.-4      	; 0xa1c <TickFct_Machine3+0x2a>
				SM3_State = SM3_on1;
     a20:	81 e0       	ldi	r24, 0x01	; 1
     a22:	80 93 f1 01 	sts	0x01F1, r24
     a26:	33 c0       	rjmp	.+102    	; 0xa8e <TickFct_Machine3+0x9c>
			}
			else
			{
				SM3_State = SM3_off;
     a28:	10 92 f1 01 	sts	0x01F1, r1
     a2c:	2e c0       	rjmp	.+92     	; 0xa8a <TickFct_Machine3+0x98>
			}	
		}
		break;
		case SM3_on1:
		SM3_State = SM3_on2;
     a2e:	82 e0       	ldi	r24, 0x02	; 2
     a30:	80 93 f1 01 	sts	0x01F1, r24
     a34:	2f c0       	rjmp	.+94     	; 0xa94 <TickFct_Machine3+0xa2>
		break;
		case SM3_on2:
		SM3_State = SM3_on3;
     a36:	83 e0       	ldi	r24, 0x03	; 3
     a38:	80 93 f1 01 	sts	0x01F1, r24
     a3c:	2e c0       	rjmp	.+92     	; 0xa9a <TickFct_Machine3+0xa8>
		break;
		case SM3_on3:
		SM3_State = SM3_on4;
     a3e:	84 e0       	ldi	r24, 0x04	; 4
     a40:	80 93 f1 01 	sts	0x01F1, r24
     a44:	2d c0       	rjmp	.+90     	; 0xaa0 <TickFct_Machine3+0xae>
		break;
		case SM3_on4:
		SM3_State = SM3_on5;
     a46:	85 e0       	ldi	r24, 0x05	; 5
     a48:	80 93 f1 01 	sts	0x01F1, r24
     a4c:	2c c0       	rjmp	.+88     	; 0xaa6 <TickFct_Machine3+0xb4>
		break;
		case SM3_on5:
		SM3_State = SM3_on6;
     a4e:	86 e0       	ldi	r24, 0x06	; 6
     a50:	80 93 f1 01 	sts	0x01F1, r24
     a54:	2b c0       	rjmp	.+86     	; 0xaac <TickFct_Machine3+0xba>
		break;
		case SM3_on6:
		SM3_State = SM3_on7;
     a56:	87 e0       	ldi	r24, 0x07	; 7
     a58:	80 93 f1 01 	sts	0x01F1, r24
     a5c:	2a c0       	rjmp	.+84     	; 0xab2 <TickFct_Machine3+0xc0>
		break;
		case SM3_on7:
		SM3_State = SM3_on8;
     a5e:	88 e0       	ldi	r24, 0x08	; 8
     a60:	80 93 f1 01 	sts	0x01F1, r24
     a64:	29 c0       	rjmp	.+82     	; 0xab8 <TickFct_Machine3+0xc6>
		break;
		case SM3_on8:
		SM3_State = SM3_on9;
     a66:	89 e0       	ldi	r24, 0x09	; 9
     a68:	80 93 f1 01 	sts	0x01F1, r24
     a6c:	28 c0       	rjmp	.+80     	; 0xabe <TickFct_Machine3+0xcc>
		break;
		case SM3_on9:
		SM3_State = SM3_off;
     a6e:	10 92 f1 01 	sts	0x01F1, r1
     a72:	0b c0       	rjmp	.+22     	; 0xa8a <TickFct_Machine3+0x98>
	}
	switch(SM3_State)
     a74:	80 91 f1 01 	lds	r24, 0x01F1
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	8a 30       	cpi	r24, 0x0A	; 10
     a7c:	91 05       	cpc	r25, r1
     a7e:	40 f5       	brcc	.+80     	; 0xad0 <TickFct_Machine3+0xde>
     a80:	fc 01       	movw	r30, r24
     a82:	e3 59       	subi	r30, 0x93	; 147
     a84:	ff 4f       	sbci	r31, 0xFF	; 255
     a86:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{
		case SM3_off:
		PORTA = 0x00;
     a8a:	12 b8       	out	0x02, r1	; 2
		break;
     a8c:	08 95       	ret
		case SM3_on1:
		PORTA = 0x02;
     a8e:	82 e0       	ldi	r24, 0x02	; 2
     a90:	82 b9       	out	0x02, r24	; 2
		break;
     a92:	08 95       	ret
		case SM3_on2:
		PORTA = 0x04;
     a94:	84 e0       	ldi	r24, 0x04	; 4
     a96:	82 b9       	out	0x02, r24	; 2
		break;
     a98:	08 95       	ret
		case SM3_on3:
		PORTA = 0x01;
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	82 b9       	out	0x02, r24	; 2
		break;
     a9e:	08 95       	ret
		case SM3_on4:
		PORTA = 0x08;
     aa0:	88 e0       	ldi	r24, 0x08	; 8
     aa2:	82 b9       	out	0x02, r24	; 2
		break;
     aa4:	08 95       	ret
		case SM3_on5:
		PORTA = 0x02;
     aa6:	82 e0       	ldi	r24, 0x02	; 2
     aa8:	82 b9       	out	0x02, r24	; 2
		break;
     aaa:	08 95       	ret
		case SM3_on6:
		PORTA = 0x04;
     aac:	84 e0       	ldi	r24, 0x04	; 4
     aae:	82 b9       	out	0x02, r24	; 2
		break;
     ab0:	08 95       	ret
		case SM3_on7:
		PORTA = 0x01;
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	82 b9       	out	0x02, r24	; 2
		break;
     ab6:	08 95       	ret
		case SM3_on8:
		PORTA = 0x02;
     ab8:	82 e0       	ldi	r24, 0x02	; 2
     aba:	82 b9       	out	0x02, r24	; 2
		break;
     abc:	08 95       	ret
		case SM3_on9:
		PORTA = 0x08;
     abe:	88 e0       	ldi	r24, 0x08	; 8
     ac0:	82 b9       	out	0x02, r24	; 2
		LCD_DisplayString(1, "Leggo");
     ac2:	64 e6       	ldi	r22, 0x64	; 100
     ac4:	71 e0       	ldi	r23, 0x01	; 1
     ac6:	81 e0       	ldi	r24, 0x01	; 1
     ac8:	03 dc       	rcall	.-2042   	; 0x2d0 <LCD_DisplayString>
		global_g = 5;
     aca:	85 e0       	ldi	r24, 0x05	; 5
     acc:	80 93 ea 01 	sts	0x01EA, r24
     ad0:	08 95       	ret

00000ad2 <ButtonPress3>:
}

enum Press_third_level{Init3, Press3_state1, Press3_state2, Press3_state3, Press3_state4, Press3_state5, Press3_state6, Press3_state7, Press3_state8, Press3_state9, Error3, Off3} Press_third_level;
void ButtonPress3()
{
	switch(Press_third_level)
     ad2:	80 91 f7 01 	lds	r24, 0x01F7
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	8b 30       	cpi	r24, 0x0B	; 11
     ada:	91 05       	cpc	r25, r1
     adc:	08 f0       	brcs	.+2      	; 0xae0 <ButtonPress3+0xe>
     ade:	4b c1       	rjmp	.+662    	; 0xd76 <ButtonPress3+0x2a4>
     ae0:	fc 01       	movw	r30, r24
     ae2:	e9 58       	subi	r30, 0x89	; 137
     ae4:	ff 4f       	sbci	r31, 0xFF	; 255
     ae6:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{
		case Init3:
		if(global_g == 5)
     aea:	80 91 ea 01 	lds	r24, 0x01EA
     aee:	85 30       	cpi	r24, 0x05	; 5
     af0:	09 f0       	breq	.+2      	; 0xaf4 <ButtonPress3+0x22>
     af2:	a0 c1       	rjmp	.+832    	; 0xe34 <ButtonPress3+0x362>
		{
			PORTA = 0x00;
     af4:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x02)
     af6:	19 99       	sbic	0x03, 1	; 3
     af8:	05 c0       	rjmp	.+10     	; 0xb04 <ButtonPress3+0x32>
			{
				while(~PINB & 0x02){}
     afa:	19 9b       	sbis	0x03, 1	; 3
     afc:	fe cf       	rjmp	.-4      	; 0xafa <ButtonPress3+0x28>
				Press_third_level = Press3_state1;
     afe:	81 e0       	ldi	r24, 0x01	; 1
     b00:	80 93 f7 01 	sts	0x01F7, r24
			}
			if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     b04:	18 9b       	sbis	0x03, 0	; 3
     b06:	04 c0       	rjmp	.+8      	; 0xb10 <ButtonPress3+0x3e>
     b08:	1a 9b       	sbis	0x03, 2	; 3
     b0a:	02 c0       	rjmp	.+4      	; 0xb10 <ButtonPress3+0x3e>
     b0c:	1b 99       	sbic	0x03, 3	; 3
     b0e:	33 c1       	rjmp	.+614    	; 0xd76 <ButtonPress3+0x2a4>
			{
				if(lives - 1 > -1)
     b10:	20 91 00 01 	lds	r18, 0x0100
     b14:	82 2f       	mov	r24, r18
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	01 97       	sbiw	r24, 0x01	; 1
     b1a:	99 23       	and	r25, r25
     b1c:	1c f0       	brlt	.+6      	; 0xb24 <ButtonPress3+0x52>
				{
					lives--;
     b1e:	21 50       	subi	r18, 0x01	; 1
     b20:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
     b24:	80 91 00 01 	lds	r24, 0x0100
     b28:	81 11       	cpse	r24, r1
     b2a:	03 c0       	rjmp	.+6      	; 0xb32 <ButtonPress3+0x60>
				{
					global_g = 20;
     b2c:	84 e1       	ldi	r24, 0x14	; 20
     b2e:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_third_level = Error3;
     b32:	8a e0       	ldi	r24, 0x0A	; 10
     b34:	80 93 f7 01 	sts	0x01F7, r24
     b38:	2b c1       	rjmp	.+598    	; 0xd90 <ButtonPress3+0x2be>
			}
		}
		break;
		case Error3:
		if(~PINB & 0x02)
     b3a:	19 99       	sbic	0x03, 1	; 3
     b3c:	29 c1       	rjmp	.+594    	; 0xd90 <ButtonPress3+0x2be>
		{
			while(~PINB & 0x02){}
     b3e:	19 9b       	sbis	0x03, 1	; 3
     b40:	fe cf       	rjmp	.-4      	; 0xb3e <ButtonPress3+0x6c>
			Press_third_level = Press3_state1;
     b42:	81 e0       	ldi	r24, 0x01	; 1
     b44:	80 93 f7 01 	sts	0x01F7, r24
     b48:	2a c1       	rjmp	.+596    	; 0xd9e <ButtonPress3+0x2cc>
		}
		break;
		case Press3_state1:
		if(~PINB & 0x04)
     b4a:	1a 99       	sbic	0x03, 2	; 3
     b4c:	05 c0       	rjmp	.+10     	; 0xb58 <ButtonPress3+0x86>
		{
			
			while(~PINB & 0x04){}
     b4e:	1a 9b       	sbis	0x03, 2	; 3
     b50:	fe cf       	rjmp	.-4      	; 0xb4e <ButtonPress3+0x7c>
			Press_third_level = Press3_state2;
     b52:	82 e0       	ldi	r24, 0x02	; 2
     b54:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     b58:	19 9b       	sbis	0x03, 1	; 3
     b5a:	04 c0       	rjmp	.+8      	; 0xb64 <ButtonPress3+0x92>
     b5c:	18 9b       	sbis	0x03, 0	; 3
     b5e:	02 c0       	rjmp	.+4      	; 0xb64 <ButtonPress3+0x92>
     b60:	1b 99       	sbic	0x03, 3	; 3
     b62:	09 c1       	rjmp	.+530    	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     b64:	20 91 00 01 	lds	r18, 0x0100
     b68:	82 2f       	mov	r24, r18
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	01 97       	sbiw	r24, 0x01	; 1
     b6e:	99 23       	and	r25, r25
     b70:	1c f0       	brlt	.+6      	; 0xb78 <ButtonPress3+0xa6>
			{
				lives--;
     b72:	21 50       	subi	r18, 0x01	; 1
     b74:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     b78:	80 91 00 01 	lds	r24, 0x0100
     b7c:	81 11       	cpse	r24, r1
     b7e:	03 c0       	rjmp	.+6      	; 0xb86 <ButtonPress3+0xb4>
			{
				global_g = 20;
     b80:	84 e1       	ldi	r24, 0x14	; 20
     b82:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     b86:	8a e0       	ldi	r24, 0x0A	; 10
     b88:	80 93 f7 01 	sts	0x01F7, r24
     b8c:	01 c1       	rjmp	.+514    	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state2:
		if(~PINB & 0x01)
     b8e:	18 99       	sbic	0x03, 0	; 3
     b90:	05 c0       	rjmp	.+10     	; 0xb9c <ButtonPress3+0xca>
		{
			while(~PINB & 0x01){}
     b92:	18 9b       	sbis	0x03, 0	; 3
     b94:	fe cf       	rjmp	.-4      	; 0xb92 <ButtonPress3+0xc0>
			Press_third_level = Press3_state3;
     b96:	83 e0       	ldi	r24, 0x03	; 3
     b98:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     b9c:	19 9b       	sbis	0x03, 1	; 3
     b9e:	04 c0       	rjmp	.+8      	; 0xba8 <ButtonPress3+0xd6>
     ba0:	1a 9b       	sbis	0x03, 2	; 3
     ba2:	02 c0       	rjmp	.+4      	; 0xba8 <ButtonPress3+0xd6>
     ba4:	1b 99       	sbic	0x03, 3	; 3
     ba6:	e7 c0       	rjmp	.+462    	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     ba8:	20 91 00 01 	lds	r18, 0x0100
     bac:	82 2f       	mov	r24, r18
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	01 97       	sbiw	r24, 0x01	; 1
     bb2:	99 23       	and	r25, r25
     bb4:	1c f0       	brlt	.+6      	; 0xbbc <ButtonPress3+0xea>
			{
				lives--;
     bb6:	21 50       	subi	r18, 0x01	; 1
     bb8:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     bbc:	80 91 00 01 	lds	r24, 0x0100
     bc0:	81 11       	cpse	r24, r1
     bc2:	03 c0       	rjmp	.+6      	; 0xbca <ButtonPress3+0xf8>
			{
				global_g = 20;
     bc4:	84 e1       	ldi	r24, 0x14	; 20
     bc6:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     bca:	8a e0       	ldi	r24, 0x0A	; 10
     bcc:	80 93 f7 01 	sts	0x01F7, r24
     bd0:	df c0       	rjmp	.+446    	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state3:
		if(~PINB & 0x08)
     bd2:	1b 99       	sbic	0x03, 3	; 3
     bd4:	05 c0       	rjmp	.+10     	; 0xbe0 <ButtonPress3+0x10e>
		{
			while(~PINB & 0x08){}
     bd6:	1b 9b       	sbis	0x03, 3	; 3
     bd8:	fe cf       	rjmp	.-4      	; 0xbd6 <ButtonPress3+0x104>
			Press_third_level = Press3_state4;
     bda:	84 e0       	ldi	r24, 0x04	; 4
     bdc:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     be0:	19 9b       	sbis	0x03, 1	; 3
     be2:	04 c0       	rjmp	.+8      	; 0xbec <ButtonPress3+0x11a>
     be4:	1a 9b       	sbis	0x03, 2	; 3
     be6:	02 c0       	rjmp	.+4      	; 0xbec <ButtonPress3+0x11a>
     be8:	18 99       	sbic	0x03, 0	; 3
     bea:	c5 c0       	rjmp	.+394    	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     bec:	20 91 00 01 	lds	r18, 0x0100
     bf0:	82 2f       	mov	r24, r18
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	01 97       	sbiw	r24, 0x01	; 1
     bf6:	99 23       	and	r25, r25
     bf8:	1c f0       	brlt	.+6      	; 0xc00 <ButtonPress3+0x12e>
			{
				lives--;
     bfa:	21 50       	subi	r18, 0x01	; 1
     bfc:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     c00:	80 91 00 01 	lds	r24, 0x0100
     c04:	81 11       	cpse	r24, r1
     c06:	03 c0       	rjmp	.+6      	; 0xc0e <ButtonPress3+0x13c>
			{
				global_g = 20;
     c08:	84 e1       	ldi	r24, 0x14	; 20
     c0a:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     c0e:	8a e0       	ldi	r24, 0x0A	; 10
     c10:	80 93 f7 01 	sts	0x01F7, r24
     c14:	bd c0       	rjmp	.+378    	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state4:
		if(~PINB & 0x02)
     c16:	19 99       	sbic	0x03, 1	; 3
     c18:	05 c0       	rjmp	.+10     	; 0xc24 <ButtonPress3+0x152>
		{
			while(~PINB & 0x02){}
     c1a:	19 9b       	sbis	0x03, 1	; 3
     c1c:	fe cf       	rjmp	.-4      	; 0xc1a <ButtonPress3+0x148>
			Press_third_level = Press3_state5;
     c1e:	85 e0       	ldi	r24, 0x05	; 5
     c20:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     c24:	18 9b       	sbis	0x03, 0	; 3
     c26:	04 c0       	rjmp	.+8      	; 0xc30 <ButtonPress3+0x15e>
     c28:	1a 9b       	sbis	0x03, 2	; 3
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <ButtonPress3+0x15e>
     c2c:	1b 99       	sbic	0x03, 3	; 3
     c2e:	a3 c0       	rjmp	.+326    	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     c30:	20 91 00 01 	lds	r18, 0x0100
     c34:	82 2f       	mov	r24, r18
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	01 97       	sbiw	r24, 0x01	; 1
     c3a:	99 23       	and	r25, r25
     c3c:	1c f0       	brlt	.+6      	; 0xc44 <ButtonPress3+0x172>
			{
				lives--;
     c3e:	21 50       	subi	r18, 0x01	; 1
     c40:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     c44:	80 91 00 01 	lds	r24, 0x0100
     c48:	81 11       	cpse	r24, r1
     c4a:	03 c0       	rjmp	.+6      	; 0xc52 <ButtonPress3+0x180>
			{
				global_g = 20;
     c4c:	84 e1       	ldi	r24, 0x14	; 20
     c4e:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     c52:	8a e0       	ldi	r24, 0x0A	; 10
     c54:	80 93 f7 01 	sts	0x01F7, r24
     c58:	9b c0       	rjmp	.+310    	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state5:
		if(~PINB & 0x04)
     c5a:	1a 99       	sbic	0x03, 2	; 3
     c5c:	05 c0       	rjmp	.+10     	; 0xc68 <ButtonPress3+0x196>
		{
			
			while(~PINB & 0x04){}
     c5e:	1a 9b       	sbis	0x03, 2	; 3
     c60:	fe cf       	rjmp	.-4      	; 0xc5e <ButtonPress3+0x18c>
			Press_third_level = Press3_state6;
     c62:	86 e0       	ldi	r24, 0x06	; 6
     c64:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
     c68:	19 9b       	sbis	0x03, 1	; 3
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <ButtonPress3+0x1a2>
     c6c:	18 9b       	sbis	0x03, 0	; 3
     c6e:	02 c0       	rjmp	.+4      	; 0xc74 <ButtonPress3+0x1a2>
     c70:	1b 99       	sbic	0x03, 3	; 3
     c72:	81 c0       	rjmp	.+258    	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     c74:	20 91 00 01 	lds	r18, 0x0100
     c78:	82 2f       	mov	r24, r18
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	99 23       	and	r25, r25
     c80:	1c f0       	brlt	.+6      	; 0xc88 <ButtonPress3+0x1b6>
			{
				lives--;
     c82:	21 50       	subi	r18, 0x01	; 1
     c84:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     c88:	80 91 00 01 	lds	r24, 0x0100
     c8c:	81 11       	cpse	r24, r1
     c8e:	03 c0       	rjmp	.+6      	; 0xc96 <ButtonPress3+0x1c4>
			{
				global_g = 20;
     c90:	84 e1       	ldi	r24, 0x14	; 20
     c92:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     c96:	8a e0       	ldi	r24, 0x0A	; 10
     c98:	80 93 f7 01 	sts	0x01F7, r24
     c9c:	79 c0       	rjmp	.+242    	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state6:
		if(~PINB & 0x01)
     c9e:	18 99       	sbic	0x03, 0	; 3
     ca0:	05 c0       	rjmp	.+10     	; 0xcac <ButtonPress3+0x1da>
		{
			while(~PINB & 0x01){}
     ca2:	18 9b       	sbis	0x03, 0	; 3
     ca4:	fe cf       	rjmp	.-4      	; 0xca2 <ButtonPress3+0x1d0>
			Press_third_level = Press3_state7;
     ca6:	87 e0       	ldi	r24, 0x07	; 7
     ca8:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     cac:	19 9b       	sbis	0x03, 1	; 3
     cae:	04 c0       	rjmp	.+8      	; 0xcb8 <ButtonPress3+0x1e6>
     cb0:	1a 9b       	sbis	0x03, 2	; 3
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <ButtonPress3+0x1e6>
     cb4:	1b 99       	sbic	0x03, 3	; 3
     cb6:	5f c0       	rjmp	.+190    	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     cb8:	20 91 00 01 	lds	r18, 0x0100
     cbc:	82 2f       	mov	r24, r18
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	99 23       	and	r25, r25
     cc4:	1c f0       	brlt	.+6      	; 0xccc <ButtonPress3+0x1fa>
			{
				lives--;
     cc6:	21 50       	subi	r18, 0x01	; 1
     cc8:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     ccc:	80 91 00 01 	lds	r24, 0x0100
     cd0:	81 11       	cpse	r24, r1
     cd2:	03 c0       	rjmp	.+6      	; 0xcda <ButtonPress3+0x208>
			{
				global_g = 20;
     cd4:	84 e1       	ldi	r24, 0x14	; 20
     cd6:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     cda:	8a e0       	ldi	r24, 0x0A	; 10
     cdc:	80 93 f7 01 	sts	0x01F7, r24
     ce0:	57 c0       	rjmp	.+174    	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state7:
		if(~PINB & 0x02)
     ce2:	19 99       	sbic	0x03, 1	; 3
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <ButtonPress3+0x21e>
		{
			while(~PINB & 0x02){}
     ce6:	19 9b       	sbis	0x03, 1	; 3
     ce8:	fe cf       	rjmp	.-4      	; 0xce6 <ButtonPress3+0x214>
			Press_third_level = Press3_state8;
     cea:	88 e0       	ldi	r24, 0x08	; 8
     cec:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     cf0:	18 9b       	sbis	0x03, 0	; 3
     cf2:	04 c0       	rjmp	.+8      	; 0xcfc <ButtonPress3+0x22a>
     cf4:	1a 9b       	sbis	0x03, 2	; 3
     cf6:	02 c0       	rjmp	.+4      	; 0xcfc <ButtonPress3+0x22a>
     cf8:	1b 99       	sbic	0x03, 3	; 3
     cfa:	3d c0       	rjmp	.+122    	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     cfc:	20 91 00 01 	lds	r18, 0x0100
     d00:	82 2f       	mov	r24, r18
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	01 97       	sbiw	r24, 0x01	; 1
     d06:	99 23       	and	r25, r25
     d08:	1c f0       	brlt	.+6      	; 0xd10 <ButtonPress3+0x23e>
			{
				lives--;
     d0a:	21 50       	subi	r18, 0x01	; 1
     d0c:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     d10:	80 91 00 01 	lds	r24, 0x0100
     d14:	81 11       	cpse	r24, r1
     d16:	03 c0       	rjmp	.+6      	; 0xd1e <ButtonPress3+0x24c>
			{
				global_g = 20;
     d18:	84 e1       	ldi	r24, 0x14	; 20
     d1a:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     d1e:	8a e0       	ldi	r24, 0x0A	; 10
     d20:	80 93 f7 01 	sts	0x01F7, r24
     d24:	35 c0       	rjmp	.+106    	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state8:
		if(~PINB & 0x08)
     d26:	1b 99       	sbic	0x03, 3	; 3
     d28:	05 c0       	rjmp	.+10     	; 0xd34 <ButtonPress3+0x262>
		{
			while(~PINB & 0x08){}
     d2a:	1b 9b       	sbis	0x03, 3	; 3
     d2c:	fe cf       	rjmp	.-4      	; 0xd2a <ButtonPress3+0x258>
			Press_third_level = Press3_state9;
     d2e:	89 e0       	ldi	r24, 0x09	; 9
     d30:	80 93 f7 01 	sts	0x01F7, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     d34:	19 9b       	sbis	0x03, 1	; 3
     d36:	04 c0       	rjmp	.+8      	; 0xd40 <ButtonPress3+0x26e>
     d38:	1a 9b       	sbis	0x03, 2	; 3
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <ButtonPress3+0x26e>
     d3c:	18 99       	sbic	0x03, 0	; 3
     d3e:	1b c0       	rjmp	.+54     	; 0xd76 <ButtonPress3+0x2a4>
		{
			if(lives - 1 > -1)
     d40:	20 91 00 01 	lds	r18, 0x0100
     d44:	82 2f       	mov	r24, r18
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	01 97       	sbiw	r24, 0x01	; 1
     d4a:	99 23       	and	r25, r25
     d4c:	1c f0       	brlt	.+6      	; 0xd54 <ButtonPress3+0x282>
			{
				lives--;
     d4e:	21 50       	subi	r18, 0x01	; 1
     d50:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     d54:	80 91 00 01 	lds	r24, 0x0100
     d58:	81 11       	cpse	r24, r1
     d5a:	03 c0       	rjmp	.+6      	; 0xd62 <ButtonPress3+0x290>
			{
				global_g = 20;
     d5c:	84 e1       	ldi	r24, 0x14	; 20
     d5e:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_third_level = Error3;
     d62:	8a e0       	ldi	r24, 0x0A	; 10
     d64:	80 93 f7 01 	sts	0x01F7, r24
     d68:	13 c0       	rjmp	.+38     	; 0xd90 <ButtonPress3+0x2be>
		}
		break;
		case Press3_state9:
		if(~PINB & 0x10)
     d6a:	1c 99       	sbic	0x03, 4	; 3
     d6c:	50 c0       	rjmp	.+160    	; 0xe0e <ButtonPress3+0x33c>
		{
			Press_third_level = Off3;
     d6e:	8b e0       	ldi	r24, 0x0B	; 11
     d70:	80 93 f7 01 	sts	0x01F7, r24
     d74:	57 c0       	rjmp	.+174    	; 0xe24 <ButtonPress3+0x352>
		}
		break;
	}
	switch(Press_third_level)
     d76:	80 91 f7 01 	lds	r24, 0x01F7
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	fc 01       	movw	r30, r24
     d7e:	31 97       	sbiw	r30, 0x01	; 1
     d80:	eb 30       	cpi	r30, 0x0B	; 11
     d82:	f1 05       	cpc	r31, r1
     d84:	08 f0       	brcs	.+2      	; 0xd88 <ButtonPress3+0x2b6>
     d86:	56 c0       	rjmp	.+172    	; 0xe34 <ButtonPress3+0x362>
     d88:	ee 57       	subi	r30, 0x7E	; 126
     d8a:	ff 4f       	sbci	r31, 0xFF	; 255
     d8c:	0c 94 0c 0f 	jmp	0x1e18	; 0x1e18 <__tablejump2__>
	{
		case Error3:
		transmit_data(simon_SevenSeg(lives));
     d90:	80 91 00 01 	lds	r24, 0x0100
     d94:	34 db       	rcall	.-2456   	; 0x3fe <simon_SevenSeg>
     d96:	16 db       	rcall	.-2516   	; 0x3c4 <transmit_data>
		PORTA = 0x10;
     d98:	80 e1       	ldi	r24, 0x10	; 16
     d9a:	82 b9       	out	0x02, r24	; 2
		break;
     d9c:	08 95       	ret
		case Press3_state1:
		transmit_data(simon_SevenSeg(lives));
     d9e:	80 91 00 01 	lds	r24, 0x0100
     da2:	2d db       	rcall	.-2470   	; 0x3fe <simon_SevenSeg>
     da4:	0f db       	rcall	.-2530   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
     da6:	82 e0       	ldi	r24, 0x02	; 2
     da8:	82 b9       	out	0x02, r24	; 2
		break;
     daa:	08 95       	ret
		case Press3_state2:
		transmit_data(simon_SevenSeg(lives));
     dac:	80 91 00 01 	lds	r24, 0x0100
     db0:	26 db       	rcall	.-2484   	; 0x3fe <simon_SevenSeg>
     db2:	08 db       	rcall	.-2544   	; 0x3c4 <transmit_data>
		PORTA = 0x04;
     db4:	84 e0       	ldi	r24, 0x04	; 4
     db6:	82 b9       	out	0x02, r24	; 2
		break;
     db8:	08 95       	ret
		case Press3_state3:
		transmit_data(simon_SevenSeg(lives));
     dba:	80 91 00 01 	lds	r24, 0x0100
     dbe:	1f db       	rcall	.-2498   	; 0x3fe <simon_SevenSeg>
     dc0:	01 db       	rcall	.-2558   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
     dc2:	81 e0       	ldi	r24, 0x01	; 1
     dc4:	82 b9       	out	0x02, r24	; 2
		break;
     dc6:	08 95       	ret
		case Press3_state4:
		transmit_data(simon_SevenSeg(lives));
     dc8:	80 91 00 01 	lds	r24, 0x0100
     dcc:	18 db       	rcall	.-2512   	; 0x3fe <simon_SevenSeg>
     dce:	fa da       	rcall	.-2572   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
     dd0:	88 e0       	ldi	r24, 0x08	; 8
     dd2:	82 b9       	out	0x02, r24	; 2
		break;
     dd4:	08 95       	ret
		case Press3_state5:
		transmit_data(simon_SevenSeg(lives));
     dd6:	80 91 00 01 	lds	r24, 0x0100
     dda:	11 db       	rcall	.-2526   	; 0x3fe <simon_SevenSeg>
     ddc:	f3 da       	rcall	.-2586   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
     dde:	82 e0       	ldi	r24, 0x02	; 2
     de0:	82 b9       	out	0x02, r24	; 2
		break;
     de2:	08 95       	ret
		case Press3_state6:
		transmit_data(simon_SevenSeg(lives));
     de4:	80 91 00 01 	lds	r24, 0x0100
     de8:	0a db       	rcall	.-2540   	; 0x3fe <simon_SevenSeg>
     dea:	ec da       	rcall	.-2600   	; 0x3c4 <transmit_data>
		PORTA = 0x04;
     dec:	84 e0       	ldi	r24, 0x04	; 4
     dee:	82 b9       	out	0x02, r24	; 2
		break;
     df0:	08 95       	ret
		case Press3_state7:
		transmit_data(simon_SevenSeg(lives));
     df2:	80 91 00 01 	lds	r24, 0x0100
     df6:	03 db       	rcall	.-2554   	; 0x3fe <simon_SevenSeg>
     df8:	e5 da       	rcall	.-2614   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	82 b9       	out	0x02, r24	; 2
		break;
     dfe:	08 95       	ret
		case Press3_state8:
		transmit_data(simon_SevenSeg(lives));
     e00:	80 91 00 01 	lds	r24, 0x0100
     e04:	fc da       	rcall	.-2568   	; 0x3fe <simon_SevenSeg>
     e06:	de da       	rcall	.-2628   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
     e08:	82 e0       	ldi	r24, 0x02	; 2
     e0a:	82 b9       	out	0x02, r24	; 2
		break;
     e0c:	08 95       	ret
		case Press3_state9:
		LCD_DisplayString(1, "Success");
     e0e:	6a e6       	ldi	r22, 0x6A	; 106
     e10:	71 e0       	ldi	r23, 0x01	; 1
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	5d da       	rcall	.-2886   	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
     e16:	80 91 00 01 	lds	r24, 0x0100
     e1a:	f1 da       	rcall	.-2590   	; 0x3fe <simon_SevenSeg>
     e1c:	d3 da       	rcall	.-2650   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
     e1e:	88 e0       	ldi	r24, 0x08	; 8
     e20:	82 b9       	out	0x02, r24	; 2
		break;
     e22:	08 95       	ret
		case Off3:
		PORTA = 0x00;
     e24:	12 b8       	out	0x02, r1	; 2
		transmit_data(simon_SevenSeg(lives));
     e26:	80 91 00 01 	lds	r24, 0x0100
     e2a:	e9 da       	rcall	.-2606   	; 0x3fe <simon_SevenSeg>
     e2c:	cb da       	rcall	.-2666   	; 0x3c4 <transmit_data>
		global_g = 6;
     e2e:	86 e0       	ldi	r24, 0x06	; 6
     e30:	80 93 ea 01 	sts	0x01EA, r24
     e34:	08 95       	ret

00000e36 <TickFct_Machine4>:
}

enum SM4_States {SM4_off, SM4_on1, SM4_on2, SM4_on3, SM4_on4, SM4_on5, SM4_on6, SM4_on7, SM4_on8, SM4_on9, SM4_on10, SM4_on11, SM4_on12} SM4_States;
void TickFct_Machine4()
{
	switch(SM4_States)
     e36:	80 91 f2 01 	lds	r24, 0x01F2
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	8d 30       	cpi	r24, 0x0D	; 13
     e3e:	91 05       	cpc	r25, r1
     e40:	08 f0       	brcs	.+2      	; 0xe44 <TickFct_Machine4+0xe>
     e42:	46 c0       	rjmp	.+140    	; 0xed0 <TickFct_Machine4+0x9a>
     e44:	fc 01       	movw	r30, r24
     e46:	e3 57       	subi	r30, 0x73	; 115
     e48:	ff 4f       	sbci	r31, 0xFF	; 255
     e4a:	e6 c7       	rjmp	.+4044   	; 0x1e18 <__tablejump2__>
	{
		case SM4_off:
		LCD_DisplayString(1, "Level Four");
     e4c:	62 e7       	ldi	r22, 0x72	; 114
     e4e:	71 e0       	ldi	r23, 0x01	; 1
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	3e da       	rcall	.-2948   	; 0x2d0 <LCD_DisplayString>
		if(global_g == 6)
     e54:	80 91 ea 01 	lds	r24, 0x01EA
     e58:	86 30       	cpi	r24, 0x06	; 6
     e5a:	d1 f5       	brne	.+116    	; 0xed0 <TickFct_Machine4+0x9a>
		{
			if(~PINB & 0x01)
     e5c:	18 99       	sbic	0x03, 0	; 3
     e5e:	06 c0       	rjmp	.+12     	; 0xe6c <TickFct_Machine4+0x36>
			{
				while(~PINB & 0x01){}
     e60:	18 9b       	sbis	0x03, 0	; 3
     e62:	fe cf       	rjmp	.-4      	; 0xe60 <TickFct_Machine4+0x2a>
				SM4_States = SM4_on1;
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	80 93 f2 01 	sts	0x01F2, r24
     e6a:	3e c0       	rjmp	.+124    	; 0xee8 <TickFct_Machine4+0xb2>
			}
			else
			{	
				SM4_States = SM4_off;
     e6c:	10 92 f2 01 	sts	0x01F2, r1
     e70:	39 c0       	rjmp	.+114    	; 0xee4 <TickFct_Machine4+0xae>
			}
		}
		break;
		case SM4_on1:
		SM4_States = SM4_on2;
     e72:	82 e0       	ldi	r24, 0x02	; 2
     e74:	80 93 f2 01 	sts	0x01F2, r24
     e78:	3a c0       	rjmp	.+116    	; 0xeee <TickFct_Machine4+0xb8>
		break;
		case SM4_on2:
		SM4_States = SM4_on3;
     e7a:	83 e0       	ldi	r24, 0x03	; 3
     e7c:	80 93 f2 01 	sts	0x01F2, r24
     e80:	39 c0       	rjmp	.+114    	; 0xef4 <TickFct_Machine4+0xbe>
		break;
		case SM4_on3:
		SM4_States = SM4_on4;
     e82:	84 e0       	ldi	r24, 0x04	; 4
     e84:	80 93 f2 01 	sts	0x01F2, r24
     e88:	38 c0       	rjmp	.+112    	; 0xefa <TickFct_Machine4+0xc4>
		break;
		case SM4_on4:
		SM4_States = SM4_on5;
     e8a:	85 e0       	ldi	r24, 0x05	; 5
     e8c:	80 93 f2 01 	sts	0x01F2, r24
     e90:	37 c0       	rjmp	.+110    	; 0xf00 <TickFct_Machine4+0xca>
		break;
		case SM4_on5:
		SM4_States = SM4_on6;
     e92:	86 e0       	ldi	r24, 0x06	; 6
     e94:	80 93 f2 01 	sts	0x01F2, r24
     e98:	36 c0       	rjmp	.+108    	; 0xf06 <TickFct_Machine4+0xd0>
		break;
		case SM4_on6:
		SM4_States = SM4_on7;
     e9a:	87 e0       	ldi	r24, 0x07	; 7
     e9c:	80 93 f2 01 	sts	0x01F2, r24
     ea0:	35 c0       	rjmp	.+106    	; 0xf0c <TickFct_Machine4+0xd6>
		break;
		case SM4_on7:
		SM4_States = SM4_on8;
     ea2:	88 e0       	ldi	r24, 0x08	; 8
     ea4:	80 93 f2 01 	sts	0x01F2, r24
     ea8:	34 c0       	rjmp	.+104    	; 0xf12 <TickFct_Machine4+0xdc>
		break;
		case SM4_on8:
		SM4_States = SM4_on9;
     eaa:	89 e0       	ldi	r24, 0x09	; 9
     eac:	80 93 f2 01 	sts	0x01F2, r24
     eb0:	33 c0       	rjmp	.+102    	; 0xf18 <TickFct_Machine4+0xe2>
		break;
		case SM4_on9:
		SM4_States = SM4_on10;
     eb2:	8a e0       	ldi	r24, 0x0A	; 10
     eb4:	80 93 f2 01 	sts	0x01F2, r24
     eb8:	32 c0       	rjmp	.+100    	; 0xf1e <TickFct_Machine4+0xe8>
		break;
		case SM4_on10:
		SM4_States = SM4_on11;
     eba:	8b e0       	ldi	r24, 0x0B	; 11
     ebc:	80 93 f2 01 	sts	0x01F2, r24
     ec0:	31 c0       	rjmp	.+98     	; 0xf24 <TickFct_Machine4+0xee>
		break;
		case SM4_on11:
		SM4_States = SM4_on12;
     ec2:	8c e0       	ldi	r24, 0x0C	; 12
     ec4:	80 93 f2 01 	sts	0x01F2, r24
     ec8:	30 c0       	rjmp	.+96     	; 0xf2a <TickFct_Machine4+0xf4>
		break;
		case SM4_on12:
		SM4_States = SM4_off;
     eca:	10 92 f2 01 	sts	0x01F2, r1
		break;
     ece:	0a c0       	rjmp	.+20     	; 0xee4 <TickFct_Machine4+0xae>
	}
	switch(SM4_States)
     ed0:	80 91 f2 01 	lds	r24, 0x01F2
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	8d 30       	cpi	r24, 0x0D	; 13
     ed8:	91 05       	cpc	r25, r1
     eda:	80 f5       	brcc	.+96     	; 0xf3c <TickFct_Machine4+0x106>
     edc:	fc 01       	movw	r30, r24
     ede:	e6 56       	subi	r30, 0x66	; 102
     ee0:	ff 4f       	sbci	r31, 0xFF	; 255
     ee2:	9a c7       	rjmp	.+3892   	; 0x1e18 <__tablejump2__>
	{
		case SM4_off:
		PORTA = 0x00;
     ee4:	12 b8       	out	0x02, r1	; 2
		break;
     ee6:	08 95       	ret
		case SM4_on1:
		PORTA = 0x01;
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	82 b9       	out	0x02, r24	; 2
		break;
     eec:	08 95       	ret
		case SM4_on2:
		PORTA = 0x08;
     eee:	88 e0       	ldi	r24, 0x08	; 8
     ef0:	82 b9       	out	0x02, r24	; 2
		break;
     ef2:	08 95       	ret
		case SM4_on3:
		PORTA = 0x02;
     ef4:	82 e0       	ldi	r24, 0x02	; 2
     ef6:	82 b9       	out	0x02, r24	; 2
		break;
     ef8:	08 95       	ret
		case SM4_on4:
		PORTA = 0x01;
     efa:	81 e0       	ldi	r24, 0x01	; 1
     efc:	82 b9       	out	0x02, r24	; 2
		break;
     efe:	08 95       	ret
		case SM4_on5:
		PORTA = 0x02;
     f00:	82 e0       	ldi	r24, 0x02	; 2
     f02:	82 b9       	out	0x02, r24	; 2
		break;
     f04:	08 95       	ret
		case SM4_on6:
		PORTA = 0x08;
     f06:	88 e0       	ldi	r24, 0x08	; 8
     f08:	82 b9       	out	0x02, r24	; 2
		break;
     f0a:	08 95       	ret
		case SM4_on7:
		PORTA = 0x02;
     f0c:	82 e0       	ldi	r24, 0x02	; 2
     f0e:	82 b9       	out	0x02, r24	; 2
		break;
     f10:	08 95       	ret
		case SM4_on8:
		PORTA = 0x01;
     f12:	81 e0       	ldi	r24, 0x01	; 1
     f14:	82 b9       	out	0x02, r24	; 2
		break;
     f16:	08 95       	ret
		case SM4_on9:
		PORTA = 0x08;
     f18:	88 e0       	ldi	r24, 0x08	; 8
     f1a:	82 b9       	out	0x02, r24	; 2
		break;
     f1c:	08 95       	ret
		case SM4_on10:
		PORTA = 0x01;
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	82 b9       	out	0x02, r24	; 2
		break;
     f22:	08 95       	ret
		case SM4_on11:
		PORTA = 0x02;
     f24:	82 e0       	ldi	r24, 0x02	; 2
     f26:	82 b9       	out	0x02, r24	; 2
		break;
     f28:	08 95       	ret
		case SM4_on12:
		LCD_DisplayString(1,"Good Job so far Almost done");
     f2a:	6d e7       	ldi	r22, 0x7D	; 125
     f2c:	71 e0       	ldi	r23, 0x01	; 1
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	cf d9       	rcall	.-3170   	; 0x2d0 <LCD_DisplayString>
		PORTA = 0x01;
     f32:	81 e0       	ldi	r24, 0x01	; 1
     f34:	82 b9       	out	0x02, r24	; 2
		global_g = 7;
     f36:	87 e0       	ldi	r24, 0x07	; 7
     f38:	80 93 ea 01 	sts	0x01EA, r24
     f3c:	08 95       	ret

00000f3e <ButtonPress4>:
}

enum Press_fourth_level{Init4, Press4_state1, Press4_state2, Press4_state3, Press4_state4, Press4_state5, Press4_state6, Press4_state7, Press4_state8, Press4_state9, Press4_state10, Press4_state11, Press4_state12, Error4, Off4} Press_fourth_level;
void ButtonPress4()
{
	switch(Press_fourth_level)
     f3e:	80 91 f4 01 	lds	r24, 0x01F4
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	8e 30       	cpi	r24, 0x0E	; 14
     f46:	91 05       	cpc	r25, r1
     f48:	08 f0       	brcs	.+2      	; 0xf4c <ButtonPress4+0xe>
     f4a:	b0 c1       	rjmp	.+864    	; 0x12ac <ButtonPress4+0x36e>
     f4c:	fc 01       	movw	r30, r24
     f4e:	e9 55       	subi	r30, 0x59	; 89
     f50:	ff 4f       	sbci	r31, 0xFF	; 255
     f52:	62 c7       	rjmp	.+3780   	; 0x1e18 <__tablejump2__>
	{
		case Init4:
		if(global_g == 7)
     f54:	80 91 ea 01 	lds	r24, 0x01EA
     f58:	87 30       	cpi	r24, 0x07	; 7
     f5a:	09 f0       	breq	.+2      	; 0xf5e <ButtonPress4+0x20>
     f5c:	1b c2       	rjmp	.+1078   	; 0x1394 <ButtonPress4+0x456>
		{
			PORTA = 0x00;
     f5e:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x01)
     f60:	18 99       	sbic	0x03, 0	; 3
     f62:	05 c0       	rjmp	.+10     	; 0xf6e <ButtonPress4+0x30>
			{
				while(~PINB & 0x01){}
     f64:	18 9b       	sbis	0x03, 0	; 3
     f66:	fe cf       	rjmp	.-4      	; 0xf64 <ButtonPress4+0x26>
				Press_fourth_level = Press4_state1; 
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	80 93 f4 01 	sts	0x01F4, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
     f6e:	19 9b       	sbis	0x03, 1	; 3
     f70:	04 c0       	rjmp	.+8      	; 0xf7a <ButtonPress4+0x3c>
     f72:	1a 9b       	sbis	0x03, 2	; 3
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <ButtonPress4+0x3c>
     f76:	1b 99       	sbic	0x03, 3	; 3
     f78:	99 c1       	rjmp	.+818    	; 0x12ac <ButtonPress4+0x36e>
			{
				if(lives - 1 > -1)
     f7a:	20 91 00 01 	lds	r18, 0x0100
     f7e:	82 2f       	mov	r24, r18
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	01 97       	sbiw	r24, 0x01	; 1
     f84:	99 23       	and	r25, r25
     f86:	1c f0       	brlt	.+6      	; 0xf8e <ButtonPress4+0x50>
				{
					lives--;
     f88:	21 50       	subi	r18, 0x01	; 1
     f8a:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
     f8e:	80 91 00 01 	lds	r24, 0x0100
     f92:	81 11       	cpse	r24, r1
     f94:	03 c0       	rjmp	.+6      	; 0xf9c <ButtonPress4+0x5e>
				{
					global_g = 20;
     f96:	84 e1       	ldi	r24, 0x14	; 20
     f98:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_fourth_level = Error4;
     f9c:	8d e0       	ldi	r24, 0x0D	; 13
     f9e:	80 93 f4 01 	sts	0x01F4, r24
     fa2:	90 c1       	rjmp	.+800    	; 0x12c4 <ButtonPress4+0x386>
			}
		}
		break;
		case Press4_state1:
		if(~PINB & 0x08)
     fa4:	1b 99       	sbic	0x03, 3	; 3
     fa6:	05 c0       	rjmp	.+10     	; 0xfb2 <ButtonPress4+0x74>
		{
			while(~PINB & 0x08){}
     fa8:	1b 9b       	sbis	0x03, 3	; 3
     faa:	fe cf       	rjmp	.-4      	; 0xfa8 <ButtonPress4+0x6a>
			Press_fourth_level = Press4_state2;
     fac:	82 e0       	ldi	r24, 0x02	; 2
     fae:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
     fb2:	19 9b       	sbis	0x03, 1	; 3
     fb4:	04 c0       	rjmp	.+8      	; 0xfbe <ButtonPress4+0x80>
     fb6:	1a 9b       	sbis	0x03, 2	; 3
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <ButtonPress4+0x80>
     fba:	18 99       	sbic	0x03, 0	; 3
     fbc:	77 c1       	rjmp	.+750    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
     fbe:	20 91 00 01 	lds	r18, 0x0100
     fc2:	82 2f       	mov	r24, r18
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	01 97       	sbiw	r24, 0x01	; 1
     fc8:	99 23       	and	r25, r25
     fca:	1c f0       	brlt	.+6      	; 0xfd2 <ButtonPress4+0x94>
			{
				lives--;
     fcc:	21 50       	subi	r18, 0x01	; 1
     fce:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
     fd2:	80 91 00 01 	lds	r24, 0x0100
     fd6:	81 11       	cpse	r24, r1
     fd8:	03 c0       	rjmp	.+6      	; 0xfe0 <ButtonPress4+0xa2>
			{
				global_g = 20;
     fda:	84 e1       	ldi	r24, 0x14	; 20
     fdc:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
     fe0:	8d e0       	ldi	r24, 0x0D	; 13
     fe2:	80 93 f4 01 	sts	0x01F4, r24
     fe6:	6e c1       	rjmp	.+732    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state2:
		if(~PINB & 0x02)
     fe8:	19 99       	sbic	0x03, 1	; 3
     fea:	05 c0       	rjmp	.+10     	; 0xff6 <ButtonPress4+0xb8>
		{
			while(~PINB & 0x02){}
     fec:	19 9b       	sbis	0x03, 1	; 3
     fee:	fe cf       	rjmp	.-4      	; 0xfec <ButtonPress4+0xae>
			Press_fourth_level = Press4_state3;
     ff0:	83 e0       	ldi	r24, 0x03	; 3
     ff2:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
     ff6:	18 9b       	sbis	0x03, 0	; 3
     ff8:	04 c0       	rjmp	.+8      	; 0x1002 <ButtonPress4+0xc4>
     ffa:	1a 9b       	sbis	0x03, 2	; 3
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <ButtonPress4+0xc4>
     ffe:	1b 99       	sbic	0x03, 3	; 3
    1000:	55 c1       	rjmp	.+682    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1002:	20 91 00 01 	lds	r18, 0x0100
    1006:	82 2f       	mov	r24, r18
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	01 97       	sbiw	r24, 0x01	; 1
    100c:	99 23       	and	r25, r25
    100e:	1c f0       	brlt	.+6      	; 0x1016 <ButtonPress4+0xd8>
			{
				lives--;
    1010:	21 50       	subi	r18, 0x01	; 1
    1012:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1016:	80 91 00 01 	lds	r24, 0x0100
    101a:	81 11       	cpse	r24, r1
    101c:	03 c0       	rjmp	.+6      	; 0x1024 <ButtonPress4+0xe6>
			{
				global_g = 20;
    101e:	84 e1       	ldi	r24, 0x14	; 20
    1020:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1024:	8d e0       	ldi	r24, 0x0D	; 13
    1026:	80 93 f4 01 	sts	0x01F4, r24
    102a:	4c c1       	rjmp	.+664    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state3:
		if(~PINB & 0x01)
    102c:	18 99       	sbic	0x03, 0	; 3
    102e:	05 c0       	rjmp	.+10     	; 0x103a <ButtonPress4+0xfc>
		{
			while(~PINB & 0x01){}
    1030:	18 9b       	sbis	0x03, 0	; 3
    1032:	fe cf       	rjmp	.-4      	; 0x1030 <ButtonPress4+0xf2>
			Press_fourth_level = Press4_state4;
    1034:	84 e0       	ldi	r24, 0x04	; 4
    1036:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    103a:	19 9b       	sbis	0x03, 1	; 3
    103c:	04 c0       	rjmp	.+8      	; 0x1046 <ButtonPress4+0x108>
    103e:	1a 9b       	sbis	0x03, 2	; 3
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <ButtonPress4+0x108>
    1042:	1b 99       	sbic	0x03, 3	; 3
    1044:	33 c1       	rjmp	.+614    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1046:	20 91 00 01 	lds	r18, 0x0100
    104a:	82 2f       	mov	r24, r18
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	01 97       	sbiw	r24, 0x01	; 1
    1050:	99 23       	and	r25, r25
    1052:	1c f0       	brlt	.+6      	; 0x105a <ButtonPress4+0x11c>
			{
				lives--;
    1054:	21 50       	subi	r18, 0x01	; 1
    1056:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    105a:	80 91 00 01 	lds	r24, 0x0100
    105e:	81 11       	cpse	r24, r1
    1060:	03 c0       	rjmp	.+6      	; 0x1068 <ButtonPress4+0x12a>
			{
				global_g = 20;
    1062:	84 e1       	ldi	r24, 0x14	; 20
    1064:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1068:	8d e0       	ldi	r24, 0x0D	; 13
    106a:	80 93 f4 01 	sts	0x01F4, r24
    106e:	2a c1       	rjmp	.+596    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state4:
		if(~PINB & 0x02)
    1070:	19 99       	sbic	0x03, 1	; 3
    1072:	05 c0       	rjmp	.+10     	; 0x107e <ButtonPress4+0x140>
		{
			while(~PINB & 0x02){}
    1074:	19 9b       	sbis	0x03, 1	; 3
    1076:	fe cf       	rjmp	.-4      	; 0x1074 <ButtonPress4+0x136>
			Press_fourth_level = Press4_state5;
    1078:	85 e0       	ldi	r24, 0x05	; 5
    107a:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    107e:	18 9b       	sbis	0x03, 0	; 3
    1080:	04 c0       	rjmp	.+8      	; 0x108a <ButtonPress4+0x14c>
    1082:	1a 9b       	sbis	0x03, 2	; 3
    1084:	02 c0       	rjmp	.+4      	; 0x108a <ButtonPress4+0x14c>
    1086:	1b 99       	sbic	0x03, 3	; 3
    1088:	11 c1       	rjmp	.+546    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    108a:	20 91 00 01 	lds	r18, 0x0100
    108e:	82 2f       	mov	r24, r18
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	01 97       	sbiw	r24, 0x01	; 1
    1094:	99 23       	and	r25, r25
    1096:	1c f0       	brlt	.+6      	; 0x109e <ButtonPress4+0x160>
			{
				lives--;
    1098:	21 50       	subi	r18, 0x01	; 1
    109a:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    109e:	80 91 00 01 	lds	r24, 0x0100
    10a2:	81 11       	cpse	r24, r1
    10a4:	03 c0       	rjmp	.+6      	; 0x10ac <ButtonPress4+0x16e>
			{
				global_g = 20;
    10a6:	84 e1       	ldi	r24, 0x14	; 20
    10a8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    10ac:	8d e0       	ldi	r24, 0x0D	; 13
    10ae:	80 93 f4 01 	sts	0x01F4, r24
    10b2:	08 c1       	rjmp	.+528    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state5:
		if(~PINB & 0x08)
    10b4:	1b 99       	sbic	0x03, 3	; 3
    10b6:	05 c0       	rjmp	.+10     	; 0x10c2 <ButtonPress4+0x184>
		{
			while(~PINB & 0x08){}
    10b8:	1b 9b       	sbis	0x03, 3	; 3
    10ba:	fe cf       	rjmp	.-4      	; 0x10b8 <ButtonPress4+0x17a>
			Press_fourth_level = Press4_state6;
    10bc:	86 e0       	ldi	r24, 0x06	; 6
    10be:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    10c2:	19 9b       	sbis	0x03, 1	; 3
    10c4:	04 c0       	rjmp	.+8      	; 0x10ce <ButtonPress4+0x190>
    10c6:	1a 9b       	sbis	0x03, 2	; 3
    10c8:	02 c0       	rjmp	.+4      	; 0x10ce <ButtonPress4+0x190>
    10ca:	18 99       	sbic	0x03, 0	; 3
    10cc:	ef c0       	rjmp	.+478    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    10ce:	20 91 00 01 	lds	r18, 0x0100
    10d2:	82 2f       	mov	r24, r18
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	01 97       	sbiw	r24, 0x01	; 1
    10d8:	99 23       	and	r25, r25
    10da:	1c f0       	brlt	.+6      	; 0x10e2 <ButtonPress4+0x1a4>
			{
				lives--;
    10dc:	21 50       	subi	r18, 0x01	; 1
    10de:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    10e2:	80 91 00 01 	lds	r24, 0x0100
    10e6:	81 11       	cpse	r24, r1
    10e8:	03 c0       	rjmp	.+6      	; 0x10f0 <ButtonPress4+0x1b2>
			{
				global_g = 20;
    10ea:	84 e1       	ldi	r24, 0x14	; 20
    10ec:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    10f0:	8d e0       	ldi	r24, 0x0D	; 13
    10f2:	80 93 f4 01 	sts	0x01F4, r24
    10f6:	e6 c0       	rjmp	.+460    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state6:
		if(~PINB & 0x02)
    10f8:	19 99       	sbic	0x03, 1	; 3
    10fa:	05 c0       	rjmp	.+10     	; 0x1106 <ButtonPress4+0x1c8>
		{
			while(~PINB & 0x02){}
    10fc:	19 9b       	sbis	0x03, 1	; 3
    10fe:	fe cf       	rjmp	.-4      	; 0x10fc <ButtonPress4+0x1be>
			Press_fourth_level = Press4_state7;
    1100:	87 e0       	ldi	r24, 0x07	; 7
    1102:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1106:	18 9b       	sbis	0x03, 0	; 3
    1108:	04 c0       	rjmp	.+8      	; 0x1112 <ButtonPress4+0x1d4>
    110a:	1a 9b       	sbis	0x03, 2	; 3
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <ButtonPress4+0x1d4>
    110e:	1b 99       	sbic	0x03, 3	; 3
    1110:	cd c0       	rjmp	.+410    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1112:	20 91 00 01 	lds	r18, 0x0100
    1116:	82 2f       	mov	r24, r18
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	01 97       	sbiw	r24, 0x01	; 1
    111c:	99 23       	and	r25, r25
    111e:	1c f0       	brlt	.+6      	; 0x1126 <ButtonPress4+0x1e8>
			{
				lives--;
    1120:	21 50       	subi	r18, 0x01	; 1
    1122:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1126:	80 91 00 01 	lds	r24, 0x0100
    112a:	81 11       	cpse	r24, r1
    112c:	03 c0       	rjmp	.+6      	; 0x1134 <ButtonPress4+0x1f6>
			{
				global_g = 20;
    112e:	84 e1       	ldi	r24, 0x14	; 20
    1130:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1134:	8d e0       	ldi	r24, 0x0D	; 13
    1136:	80 93 f4 01 	sts	0x01F4, r24
    113a:	c4 c0       	rjmp	.+392    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state7:
		if(~PINB & 0x01)
    113c:	18 99       	sbic	0x03, 0	; 3
    113e:	05 c0       	rjmp	.+10     	; 0x114a <ButtonPress4+0x20c>
		{
			while(~PINB & 0x01){}
    1140:	18 9b       	sbis	0x03, 0	; 3
    1142:	fe cf       	rjmp	.-4      	; 0x1140 <ButtonPress4+0x202>
			Press_fourth_level = Press4_state8;
    1144:	88 e0       	ldi	r24, 0x08	; 8
    1146:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    114a:	19 9b       	sbis	0x03, 1	; 3
    114c:	04 c0       	rjmp	.+8      	; 0x1156 <ButtonPress4+0x218>
    114e:	1a 9b       	sbis	0x03, 2	; 3
    1150:	02 c0       	rjmp	.+4      	; 0x1156 <ButtonPress4+0x218>
    1152:	1b 99       	sbic	0x03, 3	; 3
    1154:	ab c0       	rjmp	.+342    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1156:	20 91 00 01 	lds	r18, 0x0100
    115a:	82 2f       	mov	r24, r18
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	99 23       	and	r25, r25
    1162:	1c f0       	brlt	.+6      	; 0x116a <ButtonPress4+0x22c>
			{
				lives--;
    1164:	21 50       	subi	r18, 0x01	; 1
    1166:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    116a:	80 91 00 01 	lds	r24, 0x0100
    116e:	81 11       	cpse	r24, r1
    1170:	03 c0       	rjmp	.+6      	; 0x1178 <ButtonPress4+0x23a>
			{
				global_g = 20;
    1172:	84 e1       	ldi	r24, 0x14	; 20
    1174:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1178:	8d e0       	ldi	r24, 0x0D	; 13
    117a:	80 93 f4 01 	sts	0x01F4, r24
    117e:	a2 c0       	rjmp	.+324    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state8:
		if(~PINB & 0x08)
    1180:	1b 99       	sbic	0x03, 3	; 3
    1182:	05 c0       	rjmp	.+10     	; 0x118e <ButtonPress4+0x250>
		{
			while(~PINB & 0x08){}
    1184:	1b 9b       	sbis	0x03, 3	; 3
    1186:	fe cf       	rjmp	.-4      	; 0x1184 <ButtonPress4+0x246>
			Press_fourth_level = Press4_state9;
    1188:	89 e0       	ldi	r24, 0x09	; 9
    118a:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    118e:	19 9b       	sbis	0x03, 1	; 3
    1190:	04 c0       	rjmp	.+8      	; 0x119a <ButtonPress4+0x25c>
    1192:	1a 9b       	sbis	0x03, 2	; 3
    1194:	02 c0       	rjmp	.+4      	; 0x119a <ButtonPress4+0x25c>
    1196:	18 99       	sbic	0x03, 0	; 3
    1198:	89 c0       	rjmp	.+274    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    119a:	20 91 00 01 	lds	r18, 0x0100
    119e:	82 2f       	mov	r24, r18
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	01 97       	sbiw	r24, 0x01	; 1
    11a4:	99 23       	and	r25, r25
    11a6:	1c f0       	brlt	.+6      	; 0x11ae <ButtonPress4+0x270>
			{
				lives--;
    11a8:	21 50       	subi	r18, 0x01	; 1
    11aa:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    11ae:	80 91 00 01 	lds	r24, 0x0100
    11b2:	81 11       	cpse	r24, r1
    11b4:	03 c0       	rjmp	.+6      	; 0x11bc <ButtonPress4+0x27e>
			{
				global_g = 20;
    11b6:	84 e1       	ldi	r24, 0x14	; 20
    11b8:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    11bc:	8d e0       	ldi	r24, 0x0D	; 13
    11be:	80 93 f4 01 	sts	0x01F4, r24
    11c2:	80 c0       	rjmp	.+256    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state9:
		if(~PINB & 0x01)
    11c4:	18 99       	sbic	0x03, 0	; 3
    11c6:	05 c0       	rjmp	.+10     	; 0x11d2 <ButtonPress4+0x294>
		{
			while(~PINB & 0x01){}
    11c8:	18 9b       	sbis	0x03, 0	; 3
    11ca:	fe cf       	rjmp	.-4      	; 0x11c8 <ButtonPress4+0x28a>
			Press_fourth_level = Press4_state10;
    11cc:	8a e0       	ldi	r24, 0x0A	; 10
    11ce:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    11d2:	19 9b       	sbis	0x03, 1	; 3
    11d4:	04 c0       	rjmp	.+8      	; 0x11de <ButtonPress4+0x2a0>
    11d6:	1a 9b       	sbis	0x03, 2	; 3
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <ButtonPress4+0x2a0>
    11da:	1b 99       	sbic	0x03, 3	; 3
    11dc:	67 c0       	rjmp	.+206    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    11de:	20 91 00 01 	lds	r18, 0x0100
    11e2:	82 2f       	mov	r24, r18
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	01 97       	sbiw	r24, 0x01	; 1
    11e8:	99 23       	and	r25, r25
    11ea:	1c f0       	brlt	.+6      	; 0x11f2 <ButtonPress4+0x2b4>
			{
				lives--;
    11ec:	21 50       	subi	r18, 0x01	; 1
    11ee:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    11f2:	80 91 00 01 	lds	r24, 0x0100
    11f6:	81 11       	cpse	r24, r1
    11f8:	03 c0       	rjmp	.+6      	; 0x1200 <ButtonPress4+0x2c2>
			{
				global_g = 20;
    11fa:	84 e1       	ldi	r24, 0x14	; 20
    11fc:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1200:	8d e0       	ldi	r24, 0x0D	; 13
    1202:	80 93 f4 01 	sts	0x01F4, r24
    1206:	5e c0       	rjmp	.+188    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state10:
		if(~PINB & 0x02)
    1208:	19 99       	sbic	0x03, 1	; 3
    120a:	05 c0       	rjmp	.+10     	; 0x1216 <ButtonPress4+0x2d8>
		{
			while(~PINB & 0x02){}
    120c:	19 9b       	sbis	0x03, 1	; 3
    120e:	fe cf       	rjmp	.-4      	; 0x120c <ButtonPress4+0x2ce>
			Press_fourth_level = Press4_state11;
    1210:	8b e0       	ldi	r24, 0x0B	; 11
    1212:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1216:	18 9b       	sbis	0x03, 0	; 3
    1218:	04 c0       	rjmp	.+8      	; 0x1222 <ButtonPress4+0x2e4>
    121a:	1a 9b       	sbis	0x03, 2	; 3
    121c:	02 c0       	rjmp	.+4      	; 0x1222 <ButtonPress4+0x2e4>
    121e:	1b 99       	sbic	0x03, 3	; 3
    1220:	45 c0       	rjmp	.+138    	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1222:	20 91 00 01 	lds	r18, 0x0100
    1226:	82 2f       	mov	r24, r18
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	01 97       	sbiw	r24, 0x01	; 1
    122c:	99 23       	and	r25, r25
    122e:	1c f0       	brlt	.+6      	; 0x1236 <ButtonPress4+0x2f8>
			{
				lives--;
    1230:	21 50       	subi	r18, 0x01	; 1
    1232:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1236:	80 91 00 01 	lds	r24, 0x0100
    123a:	81 11       	cpse	r24, r1
    123c:	03 c0       	rjmp	.+6      	; 0x1244 <ButtonPress4+0x306>
			{
				global_g = 20;
    123e:	84 e1       	ldi	r24, 0x14	; 20
    1240:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1244:	8d e0       	ldi	r24, 0x0D	; 13
    1246:	80 93 f4 01 	sts	0x01F4, r24
    124a:	3c c0       	rjmp	.+120    	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		
		case Press4_state11:
		if(~PINB & 0x01)
    124c:	18 99       	sbic	0x03, 0	; 3
    124e:	05 c0       	rjmp	.+10     	; 0x125a <ButtonPress4+0x31c>
		{
			while(~PINB & 0x01){}
    1250:	18 9b       	sbis	0x03, 0	; 3
    1252:	fe cf       	rjmp	.-4      	; 0x1250 <ButtonPress4+0x312>
			Press_fourth_level = Press4_state12;
    1254:	8c e0       	ldi	r24, 0x0C	; 12
    1256:	80 93 f4 01 	sts	0x01F4, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    125a:	19 9b       	sbis	0x03, 1	; 3
    125c:	04 c0       	rjmp	.+8      	; 0x1266 <ButtonPress4+0x328>
    125e:	1a 9b       	sbis	0x03, 2	; 3
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <ButtonPress4+0x328>
    1262:	1b 99       	sbic	0x03, 3	; 3
    1264:	23 c0       	rjmp	.+70     	; 0x12ac <ButtonPress4+0x36e>
		{
			if(lives - 1 > -1)
    1266:	20 91 00 01 	lds	r18, 0x0100
    126a:	82 2f       	mov	r24, r18
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	01 97       	sbiw	r24, 0x01	; 1
    1270:	99 23       	and	r25, r25
    1272:	1c f0       	brlt	.+6      	; 0x127a <ButtonPress4+0x33c>
			{
				lives--;
    1274:	21 50       	subi	r18, 0x01	; 1
    1276:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    127a:	80 91 00 01 	lds	r24, 0x0100
    127e:	81 11       	cpse	r24, r1
    1280:	03 c0       	rjmp	.+6      	; 0x1288 <ButtonPress4+0x34a>
			{
				global_g = 20;
    1282:	84 e1       	ldi	r24, 0x14	; 20
    1284:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fourth_level = Error4;
    1288:	8d e0       	ldi	r24, 0x0D	; 13
    128a:	80 93 f4 01 	sts	0x01F4, r24
    128e:	1a c0       	rjmp	.+52     	; 0x12c4 <ButtonPress4+0x386>
		}
		break;
		case Press4_state12:
		if(~PINB & 0x10)
    1290:	1c 99       	sbic	0x03, 4	; 3
    1292:	6c c0       	rjmp	.+216    	; 0x136c <ButtonPress4+0x42e>
		{
			Press_fourth_level = Off4;
    1294:	8e e0       	ldi	r24, 0x0E	; 14
    1296:	80 93 f4 01 	sts	0x01F4, r24
    129a:	74 c0       	rjmp	.+232    	; 0x1384 <ButtonPress4+0x446>
		}
		break;
		case Error4:
		if(~PINB & 0x01)
    129c:	18 99       	sbic	0x03, 0	; 3
    129e:	12 c0       	rjmp	.+36     	; 0x12c4 <ButtonPress4+0x386>
		{
			while(~PINB & 0x01){}
    12a0:	18 9b       	sbis	0x03, 0	; 3
    12a2:	fe cf       	rjmp	.-4      	; 0x12a0 <ButtonPress4+0x362>
			Press_fourth_level = Press4_state1;
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	80 93 f4 01 	sts	0x01F4, r24
    12aa:	13 c0       	rjmp	.+38     	; 0x12d2 <ButtonPress4+0x394>
		}
	}
	switch(Press_fourth_level)
    12ac:	80 91 f4 01 	lds	r24, 0x01F4
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	fc 01       	movw	r30, r24
    12b4:	31 97       	sbiw	r30, 0x01	; 1
    12b6:	ee 30       	cpi	r30, 0x0E	; 14
    12b8:	f1 05       	cpc	r31, r1
    12ba:	08 f0       	brcs	.+2      	; 0x12be <ButtonPress4+0x380>
    12bc:	6b c0       	rjmp	.+214    	; 0x1394 <ButtonPress4+0x456>
    12be:	eb 54       	subi	r30, 0x4B	; 75
    12c0:	ff 4f       	sbci	r31, 0xFF	; 255
    12c2:	aa c5       	rjmp	.+2900   	; 0x1e18 <__tablejump2__>
	{
		case Error4:
		transmit_data(simon_SevenSeg(lives));
    12c4:	80 91 00 01 	lds	r24, 0x0100
    12c8:	9a d8       	rcall	.-3788   	; 0x3fe <simon_SevenSeg>
    12ca:	7c d8       	rcall	.-3848   	; 0x3c4 <transmit_data>
		PORTA = 0x10;
    12cc:	80 e1       	ldi	r24, 0x10	; 16
    12ce:	82 b9       	out	0x02, r24	; 2
		break;
    12d0:	08 95       	ret
		case Press4_state1:
		transmit_data(simon_SevenSeg(lives));
    12d2:	80 91 00 01 	lds	r24, 0x0100
    12d6:	93 d8       	rcall	.-3802   	; 0x3fe <simon_SevenSeg>
    12d8:	75 d8       	rcall	.-3862   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    12da:	81 e0       	ldi	r24, 0x01	; 1
    12dc:	82 b9       	out	0x02, r24	; 2
		break;
    12de:	08 95       	ret
		case Press4_state2:
		transmit_data(simon_SevenSeg(lives));
    12e0:	80 91 00 01 	lds	r24, 0x0100
    12e4:	8c d8       	rcall	.-3816   	; 0x3fe <simon_SevenSeg>
    12e6:	6e d8       	rcall	.-3876   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    12e8:	88 e0       	ldi	r24, 0x08	; 8
    12ea:	82 b9       	out	0x02, r24	; 2
		break;
    12ec:	08 95       	ret
		case Press4_state3:
		transmit_data(simon_SevenSeg(lives));
    12ee:	80 91 00 01 	lds	r24, 0x0100
    12f2:	85 d8       	rcall	.-3830   	; 0x3fe <simon_SevenSeg>
    12f4:	67 d8       	rcall	.-3890   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    12f6:	82 e0       	ldi	r24, 0x02	; 2
    12f8:	82 b9       	out	0x02, r24	; 2
		break;
    12fa:	08 95       	ret
		case Press4_state4:
		transmit_data(simon_SevenSeg(lives));
    12fc:	80 91 00 01 	lds	r24, 0x0100
    1300:	7e d8       	rcall	.-3844   	; 0x3fe <simon_SevenSeg>
    1302:	60 d8       	rcall	.-3904   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	82 b9       	out	0x02, r24	; 2
		break;
    1308:	08 95       	ret
		case Press4_state5:
		transmit_data(simon_SevenSeg(lives));
    130a:	80 91 00 01 	lds	r24, 0x0100
    130e:	77 d8       	rcall	.-3858   	; 0x3fe <simon_SevenSeg>
    1310:	59 d8       	rcall	.-3918   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    1312:	82 e0       	ldi	r24, 0x02	; 2
    1314:	82 b9       	out	0x02, r24	; 2
		break;
    1316:	08 95       	ret
		case Press4_state6:
		transmit_data(simon_SevenSeg(lives));
    1318:	80 91 00 01 	lds	r24, 0x0100
    131c:	70 d8       	rcall	.-3872   	; 0x3fe <simon_SevenSeg>
    131e:	52 d8       	rcall	.-3932   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    1320:	88 e0       	ldi	r24, 0x08	; 8
    1322:	82 b9       	out	0x02, r24	; 2
		break;
    1324:	08 95       	ret
		case Press4_state7:
		transmit_data(simon_SevenSeg(lives));
    1326:	80 91 00 01 	lds	r24, 0x0100
    132a:	69 d8       	rcall	.-3886   	; 0x3fe <simon_SevenSeg>
    132c:	4b d8       	rcall	.-3946   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    132e:	82 e0       	ldi	r24, 0x02	; 2
    1330:	82 b9       	out	0x02, r24	; 2
		break;
    1332:	08 95       	ret
		case Press4_state8:
		transmit_data(simon_SevenSeg(lives));
    1334:	80 91 00 01 	lds	r24, 0x0100
    1338:	62 d8       	rcall	.-3900   	; 0x3fe <simon_SevenSeg>
    133a:	44 d8       	rcall	.-3960   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    133c:	81 e0       	ldi	r24, 0x01	; 1
    133e:	82 b9       	out	0x02, r24	; 2
		break;
    1340:	08 95       	ret
		case Press4_state9:
		transmit_data(simon_SevenSeg(lives));
    1342:	80 91 00 01 	lds	r24, 0x0100
    1346:	5b d8       	rcall	.-3914   	; 0x3fe <simon_SevenSeg>
    1348:	3d d8       	rcall	.-3974   	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    134a:	88 e0       	ldi	r24, 0x08	; 8
    134c:	82 b9       	out	0x02, r24	; 2
		break;
    134e:	08 95       	ret
		case Press4_state10:
		transmit_data(simon_SevenSeg(lives));
    1350:	80 91 00 01 	lds	r24, 0x0100
    1354:	54 d8       	rcall	.-3928   	; 0x3fe <simon_SevenSeg>
    1356:	36 d8       	rcall	.-3988   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1358:	81 e0       	ldi	r24, 0x01	; 1
    135a:	82 b9       	out	0x02, r24	; 2
		break;
    135c:	08 95       	ret
		case Press4_state11:
		transmit_data(simon_SevenSeg(lives));
    135e:	80 91 00 01 	lds	r24, 0x0100
    1362:	4d d8       	rcall	.-3942   	; 0x3fe <simon_SevenSeg>
    1364:	2f d8       	rcall	.-4002   	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    1366:	82 e0       	ldi	r24, 0x02	; 2
    1368:	82 b9       	out	0x02, r24	; 2
		break;
    136a:	08 95       	ret
		case Press4_state12:
		LCD_DisplayString(1, "Awesomeness");
    136c:	69 e9       	ldi	r22, 0x99	; 153
    136e:	71 e0       	ldi	r23, 0x01	; 1
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
    1376:	80 91 00 01 	lds	r24, 0x0100
    137a:	41 d8       	rcall	.-3966   	; 0x3fe <simon_SevenSeg>
    137c:	23 d8       	rcall	.-4026   	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    137e:	81 e0       	ldi	r24, 0x01	; 1
    1380:	82 b9       	out	0x02, r24	; 2
		break;
    1382:	08 95       	ret
		case Off4:
		transmit_data(simon_SevenSeg(lives));
    1384:	80 91 00 01 	lds	r24, 0x0100
    1388:	3a d8       	rcall	.-3980   	; 0x3fe <simon_SevenSeg>
    138a:	1c d8       	rcall	.-4040   	; 0x3c4 <transmit_data>
		PORTA = 0x00;
    138c:	12 b8       	out	0x02, r1	; 2
		global_g = 8;
    138e:	88 e0       	ldi	r24, 0x08	; 8
    1390:	80 93 ea 01 	sts	0x01EA, r24
    1394:	08 95       	ret

00001396 <TickFct_Machine5>:
}	

enum SM5_States{SM5_off, SM5_on1, SM5_on2, SM5_on3, SM5_on4, SM5_on5, SM5_on6, SM5_on7, SM5_on8, SM5_on9, SM5_on10, SM5_on11, SM5_on12, SM5_on13, SM5_on14, SM5_on15} SM5_States;
void TickFct_Machine5()
{
	switch(SM5_States)
    1396:	80 91 f8 01 	lds	r24, 0x01F8
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	80 31       	cpi	r24, 0x10	; 16
    139e:	91 05       	cpc	r25, r1
    13a0:	08 f0       	brcs	.+2      	; 0x13a4 <TickFct_Machine5+0xe>
    13a2:	54 c0       	rjmp	.+168    	; 0x144c <TickFct_Machine5+0xb6>
    13a4:	fc 01       	movw	r30, r24
    13a6:	ed 53       	subi	r30, 0x3D	; 61
    13a8:	ff 4f       	sbci	r31, 0xFF	; 255
    13aa:	36 c5       	rjmp	.+2668   	; 0x1e18 <__tablejump2__>
	{
		case SM5_off:
		LCD_DisplayString(1, "Level Five");
    13ac:	65 ea       	ldi	r22, 0xA5	; 165
    13ae:	71 e0       	ldi	r23, 0x01	; 1
    13b0:	81 e0       	ldi	r24, 0x01	; 1
    13b2:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		if(global_g == 8)
    13b6:	80 91 ea 01 	lds	r24, 0x01EA
    13ba:	88 30       	cpi	r24, 0x08	; 8
    13bc:	09 f0       	breq	.+2      	; 0x13c0 <TickFct_Machine5+0x2a>
    13be:	46 c0       	rjmp	.+140    	; 0x144c <TickFct_Machine5+0xb6>
		{
			if(~PINB & 0x01)
    13c0:	18 99       	sbic	0x03, 0	; 3
    13c2:	06 c0       	rjmp	.+12     	; 0x13d0 <TickFct_Machine5+0x3a>
			{
				while(~PINB & 0x01){}
    13c4:	18 9b       	sbis	0x03, 0	; 3
    13c6:	fe cf       	rjmp	.-4      	; 0x13c4 <TickFct_Machine5+0x2e>
				SM5_States = SM5_on1;
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	80 93 f8 01 	sts	0x01F8, r24
    13ce:	4a c0       	rjmp	.+148    	; 0x1464 <TickFct_Machine5+0xce>
			}
			else
			{
				SM5_States = SM5_off;
    13d0:	10 92 f8 01 	sts	0x01F8, r1
    13d4:	45 c0       	rjmp	.+138    	; 0x1460 <TickFct_Machine5+0xca>
			}
		}
		break;
		case SM5_on1:
		SM5_States = SM5_on2;
    13d6:	82 e0       	ldi	r24, 0x02	; 2
    13d8:	80 93 f8 01 	sts	0x01F8, r24
    13dc:	46 c0       	rjmp	.+140    	; 0x146a <TickFct_Machine5+0xd4>
		break;
		case SM5_on2:
		SM5_States = SM5_on3;
    13de:	83 e0       	ldi	r24, 0x03	; 3
    13e0:	80 93 f8 01 	sts	0x01F8, r24
    13e4:	45 c0       	rjmp	.+138    	; 0x1470 <TickFct_Machine5+0xda>
		break;
		case SM5_on3:
		SM5_States = SM5_on4;
    13e6:	84 e0       	ldi	r24, 0x04	; 4
    13e8:	80 93 f8 01 	sts	0x01F8, r24
    13ec:	44 c0       	rjmp	.+136    	; 0x1476 <TickFct_Machine5+0xe0>
		break;
		case SM5_on4:
		SM5_States = SM5_on5;
    13ee:	85 e0       	ldi	r24, 0x05	; 5
    13f0:	80 93 f8 01 	sts	0x01F8, r24
    13f4:	43 c0       	rjmp	.+134    	; 0x147c <TickFct_Machine5+0xe6>
		break;
		case SM5_on5:
		SM5_States = SM5_on6;
    13f6:	86 e0       	ldi	r24, 0x06	; 6
    13f8:	80 93 f8 01 	sts	0x01F8, r24
    13fc:	42 c0       	rjmp	.+132    	; 0x1482 <TickFct_Machine5+0xec>
		break;
		case SM5_on6:
		SM5_States = SM5_on7;
    13fe:	87 e0       	ldi	r24, 0x07	; 7
    1400:	80 93 f8 01 	sts	0x01F8, r24
    1404:	41 c0       	rjmp	.+130    	; 0x1488 <TickFct_Machine5+0xf2>
		break;
		case SM5_on7:
		SM5_States = SM5_on8;
    1406:	88 e0       	ldi	r24, 0x08	; 8
    1408:	80 93 f8 01 	sts	0x01F8, r24
    140c:	40 c0       	rjmp	.+128    	; 0x148e <TickFct_Machine5+0xf8>
		break;
		case SM5_on8:
		SM5_States = SM5_on9;
    140e:	89 e0       	ldi	r24, 0x09	; 9
    1410:	80 93 f8 01 	sts	0x01F8, r24
    1414:	3f c0       	rjmp	.+126    	; 0x1494 <TickFct_Machine5+0xfe>
		break;
		case SM5_on9:
		SM5_States = SM5_on10;
    1416:	8a e0       	ldi	r24, 0x0A	; 10
    1418:	80 93 f8 01 	sts	0x01F8, r24
    141c:	3e c0       	rjmp	.+124    	; 0x149a <TickFct_Machine5+0x104>
		break;
		case SM5_on10:
		SM5_States = SM5_on11;
    141e:	8b e0       	ldi	r24, 0x0B	; 11
    1420:	80 93 f8 01 	sts	0x01F8, r24
    1424:	3d c0       	rjmp	.+122    	; 0x14a0 <TickFct_Machine5+0x10a>
		break;
		case SM5_on11:
		SM5_States = SM5_on12;
    1426:	8c e0       	ldi	r24, 0x0C	; 12
    1428:	80 93 f8 01 	sts	0x01F8, r24
    142c:	3c c0       	rjmp	.+120    	; 0x14a6 <TickFct_Machine5+0x110>
		break;
		case SM5_on12:
		SM5_States = SM5_on13;
    142e:	8d e0       	ldi	r24, 0x0D	; 13
    1430:	80 93 f8 01 	sts	0x01F8, r24
    1434:	3b c0       	rjmp	.+118    	; 0x14ac <TickFct_Machine5+0x116>
		break;
		case SM5_on13:
		SM5_States = SM5_on14;
    1436:	8e e0       	ldi	r24, 0x0E	; 14
    1438:	80 93 f8 01 	sts	0x01F8, r24
    143c:	3a c0       	rjmp	.+116    	; 0x14b2 <TickFct_Machine5+0x11c>
		break;
		case SM5_on14:
		SM5_States = SM5_on15;
    143e:	8f e0       	ldi	r24, 0x0F	; 15
    1440:	80 93 f8 01 	sts	0x01F8, r24
    1444:	39 c0       	rjmp	.+114    	; 0x14b8 <TickFct_Machine5+0x122>
		break;
		case SM5_on15:
		SM5_States = SM5_off;
    1446:	10 92 f8 01 	sts	0x01F8, r1
		break;
    144a:	0a c0       	rjmp	.+20     	; 0x1460 <TickFct_Machine5+0xca>
	}
	switch(SM5_States)
    144c:	80 91 f8 01 	lds	r24, 0x01F8
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	80 31       	cpi	r24, 0x10	; 16
    1454:	91 05       	cpc	r25, r1
    1456:	d0 f5       	brcc	.+116    	; 0x14cc <TickFct_Machine5+0x136>
    1458:	fc 01       	movw	r30, r24
    145a:	ed 52       	subi	r30, 0x2D	; 45
    145c:	ff 4f       	sbci	r31, 0xFF	; 255
    145e:	dc c4       	rjmp	.+2488   	; 0x1e18 <__tablejump2__>
	{
		case SM5_off:
		PORTA = 0x00;
    1460:	12 b8       	out	0x02, r1	; 2
		break;
    1462:	08 95       	ret
		case SM5_on1:
		PORTA = 0x08;
    1464:	88 e0       	ldi	r24, 0x08	; 8
    1466:	82 b9       	out	0x02, r24	; 2
		break;
    1468:	08 95       	ret
		case SM5_on2:
		PORTA = 0x04;
    146a:	84 e0       	ldi	r24, 0x04	; 4
    146c:	82 b9       	out	0x02, r24	; 2
		break;
    146e:	08 95       	ret
		case SM5_on3:
		PORTA = 0x02;
    1470:	82 e0       	ldi	r24, 0x02	; 2
    1472:	82 b9       	out	0x02, r24	; 2
		break;
    1474:	08 95       	ret
		case SM5_on4:
		PORTA = 0x01;
    1476:	81 e0       	ldi	r24, 0x01	; 1
    1478:	82 b9       	out	0x02, r24	; 2
		break;
    147a:	08 95       	ret
		case SM5_on5:
		PORTA = 0x02;
    147c:	82 e0       	ldi	r24, 0x02	; 2
    147e:	82 b9       	out	0x02, r24	; 2
		break;
    1480:	08 95       	ret
		case SM5_on6:
		PORTA = 0x01;
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	82 b9       	out	0x02, r24	; 2
		break;
    1486:	08 95       	ret
		case SM5_on7:
		PORTA = 0x04;
    1488:	84 e0       	ldi	r24, 0x04	; 4
    148a:	82 b9       	out	0x02, r24	; 2
		break;
    148c:	08 95       	ret
		case SM5_on8:
		PORTA = 0x08;
    148e:	88 e0       	ldi	r24, 0x08	; 8
    1490:	82 b9       	out	0x02, r24	; 2
		break;
    1492:	08 95       	ret
		case SM5_on9:
		PORTA = 0x02;
    1494:	82 e0       	ldi	r24, 0x02	; 2
    1496:	82 b9       	out	0x02, r24	; 2
		break;
    1498:	08 95       	ret
		case SM5_on10:
		PORTA = 0x01;
    149a:	81 e0       	ldi	r24, 0x01	; 1
    149c:	82 b9       	out	0x02, r24	; 2
		break;
    149e:	08 95       	ret
		case SM5_on11:
		PORTA = 0x02;
    14a0:	82 e0       	ldi	r24, 0x02	; 2
    14a2:	82 b9       	out	0x02, r24	; 2
		break;
    14a4:	08 95       	ret
		case SM5_on12:
		PORTA = 0x01;
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	82 b9       	out	0x02, r24	; 2
		break;
    14aa:	08 95       	ret
		case SM5_on13:
		PORTA = 0x04;
    14ac:	84 e0       	ldi	r24, 0x04	; 4
    14ae:	82 b9       	out	0x02, r24	; 2
		break;
    14b0:	08 95       	ret
		case SM5_on14:
		PORTA = 0x08;
    14b2:	88 e0       	ldi	r24, 0x08	; 8
    14b4:	82 b9       	out	0x02, r24	; 2
		break;
    14b6:	08 95       	ret
		case SM5_on15:
		LCD_DisplayString(1, "One Last Time!!!!!!!!");
    14b8:	60 eb       	ldi	r22, 0xB0	; 176
    14ba:	71 e0       	ldi	r23, 0x01	; 1
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		PORTA = 0x01;
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	82 b9       	out	0x02, r24	; 2
		global_g = 9;
    14c6:	89 e0       	ldi	r24, 0x09	; 9
    14c8:	80 93 ea 01 	sts	0x01EA, r24
    14cc:	08 95       	ret

000014ce <ButtonPress5>:
}

enum Press_fifth_level{Init5, Press5_state1, Press5_state2, Press5_state3, Press5_state4, Press5_state5, Press5_state6, Press5_state7, Press5_state8, Press5_state9, Press5_state10, Press5_state11, Press5_state12, Press5_state13, Press5_state14, Press5_state15, Error5, Off5} Press_fifth_level;
void ButtonPress5()
{
	switch(Press_fifth_level)
    14ce:	80 91 f9 01 	lds	r24, 0x01F9
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	81 31       	cpi	r24, 0x11	; 17
    14d6:	91 05       	cpc	r25, r1
    14d8:	08 f0       	brcs	.+2      	; 0x14dc <ButtonPress5+0xe>
    14da:	16 c2       	rjmp	.+1068   	; 0x1908 <ButtonPress5+0x43a>
    14dc:	fc 01       	movw	r30, r24
    14de:	ed 51       	subi	r30, 0x1D	; 29
    14e0:	ff 4f       	sbci	r31, 0xFF	; 255
    14e2:	9a c4       	rjmp	.+2356   	; 0x1e18 <__tablejump2__>
	{
		case Init5:
		if(global_g == 9)
    14e4:	80 91 ea 01 	lds	r24, 0x01EA
    14e8:	89 30       	cpi	r24, 0x09	; 9
    14ea:	09 f0       	breq	.+2      	; 0x14ee <ButtonPress5+0x20>
    14ec:	af c2       	rjmp	.+1374   	; 0x1a4c <ButtonPress5+0x57e>
		{
			PORTA = 0x00;
    14ee:	12 b8       	out	0x02, r1	; 2
			if(~PINB & 0x08)
    14f0:	1b 99       	sbic	0x03, 3	; 3
    14f2:	05 c0       	rjmp	.+10     	; 0x14fe <ButtonPress5+0x30>
			{
				while(~PINB & 0x08){}
    14f4:	1b 9b       	sbis	0x03, 3	; 3
    14f6:	fe cf       	rjmp	.-4      	; 0x14f4 <ButtonPress5+0x26>
				Press_fifth_level = Press5_state1;
    14f8:	81 e0       	ldi	r24, 0x01	; 1
    14fa:	80 93 f9 01 	sts	0x01F9, r24
			}
			if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    14fe:	19 9b       	sbis	0x03, 1	; 3
    1500:	04 c0       	rjmp	.+8      	; 0x150a <ButtonPress5+0x3c>
    1502:	1a 9b       	sbis	0x03, 2	; 3
    1504:	02 c0       	rjmp	.+4      	; 0x150a <ButtonPress5+0x3c>
    1506:	18 99       	sbic	0x03, 0	; 3
    1508:	ff c1       	rjmp	.+1022   	; 0x1908 <ButtonPress5+0x43a>
			{
				if(lives - 1 > -1)
    150a:	20 91 00 01 	lds	r18, 0x0100
    150e:	82 2f       	mov	r24, r18
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	01 97       	sbiw	r24, 0x01	; 1
    1514:	99 23       	and	r25, r25
    1516:	1c f0       	brlt	.+6      	; 0x151e <ButtonPress5+0x50>
				{
					lives--;
    1518:	21 50       	subi	r18, 0x01	; 1
    151a:	20 93 00 01 	sts	0x0100, r18
				}
				if(lives == 0)
    151e:	80 91 00 01 	lds	r24, 0x0100
    1522:	81 11       	cpse	r24, r1
    1524:	03 c0       	rjmp	.+6      	; 0x152c <ButtonPress5+0x5e>
				{
					global_g = 20;
    1526:	84 e1       	ldi	r24, 0x14	; 20
    1528:	80 93 ea 01 	sts	0x01EA, r24
				}
				Press_fifth_level = Error5;
    152c:	80 e1       	ldi	r24, 0x10	; 16
    152e:	80 93 f9 01 	sts	0x01F9, r24
    1532:	f6 c1       	rjmp	.+1004   	; 0x1920 <ButtonPress5+0x452>
			}
		}
		break;
		case Press5_state1:
		if(~PINB & 0x04)
    1534:	1a 99       	sbic	0x03, 2	; 3
    1536:	05 c0       	rjmp	.+10     	; 0x1542 <ButtonPress5+0x74>
		{
			while(~PINB & 0x04){}
    1538:	1a 9b       	sbis	0x03, 2	; 3
    153a:	fe cf       	rjmp	.-4      	; 0x1538 <ButtonPress5+0x6a>
			Press_fifth_level = Press5_state2;
    153c:	82 e0       	ldi	r24, 0x02	; 2
    153e:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    1542:	19 9b       	sbis	0x03, 1	; 3
    1544:	04 c0       	rjmp	.+8      	; 0x154e <ButtonPress5+0x80>
    1546:	18 9b       	sbis	0x03, 0	; 3
    1548:	02 c0       	rjmp	.+4      	; 0x154e <ButtonPress5+0x80>
    154a:	1b 99       	sbic	0x03, 3	; 3
    154c:	dd c1       	rjmp	.+954    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    154e:	20 91 00 01 	lds	r18, 0x0100
    1552:	82 2f       	mov	r24, r18
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	01 97       	sbiw	r24, 0x01	; 1
    1558:	99 23       	and	r25, r25
    155a:	1c f0       	brlt	.+6      	; 0x1562 <ButtonPress5+0x94>
			{
				lives--;
    155c:	21 50       	subi	r18, 0x01	; 1
    155e:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1562:	80 91 00 01 	lds	r24, 0x0100
    1566:	81 11       	cpse	r24, r1
    1568:	03 c0       	rjmp	.+6      	; 0x1570 <ButtonPress5+0xa2>
			{
				global_g = 20;
    156a:	84 e1       	ldi	r24, 0x14	; 20
    156c:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1570:	80 e1       	ldi	r24, 0x10	; 16
    1572:	80 93 f9 01 	sts	0x01F9, r24
    1576:	d4 c1       	rjmp	.+936    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state2:
		if(~PINB & 0x02)
    1578:	19 99       	sbic	0x03, 1	; 3
    157a:	05 c0       	rjmp	.+10     	; 0x1586 <ButtonPress5+0xb8>
		{
			while(~PINB & 0x02){}
    157c:	19 9b       	sbis	0x03, 1	; 3
    157e:	fe cf       	rjmp	.-4      	; 0x157c <ButtonPress5+0xae>
			Press_fifth_level = Press5_state3;
    1580:	83 e0       	ldi	r24, 0x03	; 3
    1582:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    1586:	18 9b       	sbis	0x03, 0	; 3
    1588:	04 c0       	rjmp	.+8      	; 0x1592 <ButtonPress5+0xc4>
    158a:	1a 9b       	sbis	0x03, 2	; 3
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <ButtonPress5+0xc4>
    158e:	1b 99       	sbic	0x03, 3	; 3
    1590:	bb c1       	rjmp	.+886    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    1592:	20 91 00 01 	lds	r18, 0x0100
    1596:	82 2f       	mov	r24, r18
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	01 97       	sbiw	r24, 0x01	; 1
    159c:	99 23       	and	r25, r25
    159e:	1c f0       	brlt	.+6      	; 0x15a6 <ButtonPress5+0xd8>
			{
				lives--;
    15a0:	21 50       	subi	r18, 0x01	; 1
    15a2:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    15a6:	80 91 00 01 	lds	r24, 0x0100
    15aa:	81 11       	cpse	r24, r1
    15ac:	03 c0       	rjmp	.+6      	; 0x15b4 <ButtonPress5+0xe6>
			{
				global_g = 20;
    15ae:	84 e1       	ldi	r24, 0x14	; 20
    15b0:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    15b4:	80 e1       	ldi	r24, 0x10	; 16
    15b6:	80 93 f9 01 	sts	0x01F9, r24
    15ba:	b2 c1       	rjmp	.+868    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state3:
		if(~PINB & 0x01)
    15bc:	18 99       	sbic	0x03, 0	; 3
    15be:	05 c0       	rjmp	.+10     	; 0x15ca <ButtonPress5+0xfc>
		{
			while(~PINB & 0x01){}
    15c0:	18 9b       	sbis	0x03, 0	; 3
    15c2:	fe cf       	rjmp	.-4      	; 0x15c0 <ButtonPress5+0xf2>
			Press_fifth_level = Press5_state4;
    15c4:	84 e0       	ldi	r24, 0x04	; 4
    15c6:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    15ca:	19 9b       	sbis	0x03, 1	; 3
    15cc:	04 c0       	rjmp	.+8      	; 0x15d6 <ButtonPress5+0x108>
    15ce:	1a 9b       	sbis	0x03, 2	; 3
    15d0:	02 c0       	rjmp	.+4      	; 0x15d6 <ButtonPress5+0x108>
    15d2:	1b 99       	sbic	0x03, 3	; 3
    15d4:	99 c1       	rjmp	.+818    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    15d6:	20 91 00 01 	lds	r18, 0x0100
    15da:	82 2f       	mov	r24, r18
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	01 97       	sbiw	r24, 0x01	; 1
    15e0:	99 23       	and	r25, r25
    15e2:	1c f0       	brlt	.+6      	; 0x15ea <ButtonPress5+0x11c>
			{
				lives--;
    15e4:	21 50       	subi	r18, 0x01	; 1
    15e6:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    15ea:	80 91 00 01 	lds	r24, 0x0100
    15ee:	81 11       	cpse	r24, r1
    15f0:	03 c0       	rjmp	.+6      	; 0x15f8 <ButtonPress5+0x12a>
			{
				global_g = 20;
    15f2:	84 e1       	ldi	r24, 0x14	; 20
    15f4:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    15f8:	80 e1       	ldi	r24, 0x10	; 16
    15fa:	80 93 f9 01 	sts	0x01F9, r24
    15fe:	90 c1       	rjmp	.+800    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state4:
		if(~PINB & 0x02)
    1600:	19 99       	sbic	0x03, 1	; 3
    1602:	05 c0       	rjmp	.+10     	; 0x160e <ButtonPress5+0x140>
		{
			while(~PINB & 0x02){}
    1604:	19 9b       	sbis	0x03, 1	; 3
    1606:	fe cf       	rjmp	.-4      	; 0x1604 <ButtonPress5+0x136>
			Press_fifth_level = Press5_state5;
    1608:	85 e0       	ldi	r24, 0x05	; 5
    160a:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    160e:	18 9b       	sbis	0x03, 0	; 3
    1610:	04 c0       	rjmp	.+8      	; 0x161a <ButtonPress5+0x14c>
    1612:	1a 9b       	sbis	0x03, 2	; 3
    1614:	02 c0       	rjmp	.+4      	; 0x161a <ButtonPress5+0x14c>
    1616:	1b 99       	sbic	0x03, 3	; 3
    1618:	77 c1       	rjmp	.+750    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    161a:	20 91 00 01 	lds	r18, 0x0100
    161e:	82 2f       	mov	r24, r18
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	01 97       	sbiw	r24, 0x01	; 1
    1624:	99 23       	and	r25, r25
    1626:	1c f0       	brlt	.+6      	; 0x162e <ButtonPress5+0x160>
			{
				lives--;
    1628:	21 50       	subi	r18, 0x01	; 1
    162a:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    162e:	80 91 00 01 	lds	r24, 0x0100
    1632:	81 11       	cpse	r24, r1
    1634:	03 c0       	rjmp	.+6      	; 0x163c <ButtonPress5+0x16e>
			{
				global_g = 20;
    1636:	84 e1       	ldi	r24, 0x14	; 20
    1638:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    163c:	80 e1       	ldi	r24, 0x10	; 16
    163e:	80 93 f9 01 	sts	0x01F9, r24
    1642:	6e c1       	rjmp	.+732    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state5:
		if(~PINB & 0x01)
    1644:	18 99       	sbic	0x03, 0	; 3
    1646:	05 c0       	rjmp	.+10     	; 0x1652 <ButtonPress5+0x184>
		{
			while(~PINB & 0x01){}
    1648:	18 9b       	sbis	0x03, 0	; 3
    164a:	fe cf       	rjmp	.-4      	; 0x1648 <ButtonPress5+0x17a>
			Press_fifth_level = Press5_state6;
    164c:	86 e0       	ldi	r24, 0x06	; 6
    164e:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1652:	19 9b       	sbis	0x03, 1	; 3
    1654:	04 c0       	rjmp	.+8      	; 0x165e <ButtonPress5+0x190>
    1656:	1a 9b       	sbis	0x03, 2	; 3
    1658:	02 c0       	rjmp	.+4      	; 0x165e <ButtonPress5+0x190>
    165a:	1b 99       	sbic	0x03, 3	; 3
    165c:	55 c1       	rjmp	.+682    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    165e:	20 91 00 01 	lds	r18, 0x0100
    1662:	82 2f       	mov	r24, r18
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	01 97       	sbiw	r24, 0x01	; 1
    1668:	99 23       	and	r25, r25
    166a:	1c f0       	brlt	.+6      	; 0x1672 <ButtonPress5+0x1a4>
			{
				lives--;
    166c:	21 50       	subi	r18, 0x01	; 1
    166e:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1672:	80 91 00 01 	lds	r24, 0x0100
    1676:	81 11       	cpse	r24, r1
    1678:	03 c0       	rjmp	.+6      	; 0x1680 <ButtonPress5+0x1b2>
			{
				global_g = 20;
    167a:	84 e1       	ldi	r24, 0x14	; 20
    167c:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1680:	80 e1       	ldi	r24, 0x10	; 16
    1682:	80 93 f9 01 	sts	0x01F9, r24
    1686:	4c c1       	rjmp	.+664    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state6:
		if(~PINB & 0x04)
    1688:	1a 99       	sbic	0x03, 2	; 3
    168a:	05 c0       	rjmp	.+10     	; 0x1696 <ButtonPress5+0x1c8>
		{
			
			while(~PINB & 0x04){}
    168c:	1a 9b       	sbis	0x03, 2	; 3
    168e:	fe cf       	rjmp	.-4      	; 0x168c <ButtonPress5+0x1be>
			Press_fifth_level = Press5_state7;
    1690:	87 e0       	ldi	r24, 0x07	; 7
    1692:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    1696:	19 9b       	sbis	0x03, 1	; 3
    1698:	04 c0       	rjmp	.+8      	; 0x16a2 <ButtonPress5+0x1d4>
    169a:	18 9b       	sbis	0x03, 0	; 3
    169c:	02 c0       	rjmp	.+4      	; 0x16a2 <ButtonPress5+0x1d4>
    169e:	1b 99       	sbic	0x03, 3	; 3
    16a0:	33 c1       	rjmp	.+614    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    16a2:	20 91 00 01 	lds	r18, 0x0100
    16a6:	82 2f       	mov	r24, r18
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	01 97       	sbiw	r24, 0x01	; 1
    16ac:	99 23       	and	r25, r25
    16ae:	1c f0       	brlt	.+6      	; 0x16b6 <ButtonPress5+0x1e8>
			{
				lives--;
    16b0:	21 50       	subi	r18, 0x01	; 1
    16b2:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    16b6:	80 91 00 01 	lds	r24, 0x0100
    16ba:	81 11       	cpse	r24, r1
    16bc:	03 c0       	rjmp	.+6      	; 0x16c4 <ButtonPress5+0x1f6>
			{
				global_g = 20;
    16be:	84 e1       	ldi	r24, 0x14	; 20
    16c0:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    16c4:	80 e1       	ldi	r24, 0x10	; 16
    16c6:	80 93 f9 01 	sts	0x01F9, r24
    16ca:	2a c1       	rjmp	.+596    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state7:
		if(~PINB & 0x08)
    16cc:	1b 99       	sbic	0x03, 3	; 3
    16ce:	05 c0       	rjmp	.+10     	; 0x16da <ButtonPress5+0x20c>
		{
			while(~PINB & 0x08){}
    16d0:	1b 9b       	sbis	0x03, 3	; 3
    16d2:	fe cf       	rjmp	.-4      	; 0x16d0 <ButtonPress5+0x202>
			Press_fifth_level = Press5_state8;
    16d4:	88 e0       	ldi	r24, 0x08	; 8
    16d6:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    16da:	19 9b       	sbis	0x03, 1	; 3
    16dc:	04 c0       	rjmp	.+8      	; 0x16e6 <ButtonPress5+0x218>
    16de:	1a 9b       	sbis	0x03, 2	; 3
    16e0:	02 c0       	rjmp	.+4      	; 0x16e6 <ButtonPress5+0x218>
    16e2:	18 99       	sbic	0x03, 0	; 3
    16e4:	11 c1       	rjmp	.+546    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    16e6:	20 91 00 01 	lds	r18, 0x0100
    16ea:	82 2f       	mov	r24, r18
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	01 97       	sbiw	r24, 0x01	; 1
    16f0:	99 23       	and	r25, r25
    16f2:	1c f0       	brlt	.+6      	; 0x16fa <ButtonPress5+0x22c>
			{
				lives--;
    16f4:	21 50       	subi	r18, 0x01	; 1
    16f6:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    16fa:	80 91 00 01 	lds	r24, 0x0100
    16fe:	81 11       	cpse	r24, r1
    1700:	03 c0       	rjmp	.+6      	; 0x1708 <ButtonPress5+0x23a>
			{
				global_g = 20;
    1702:	84 e1       	ldi	r24, 0x14	; 20
    1704:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1708:	80 e1       	ldi	r24, 0x10	; 16
    170a:	80 93 f9 01 	sts	0x01F9, r24
    170e:	08 c1       	rjmp	.+528    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state8:
		if(~PINB & 0x02)
    1710:	19 99       	sbic	0x03, 1	; 3
    1712:	05 c0       	rjmp	.+10     	; 0x171e <ButtonPress5+0x250>
		{
			while(~PINB & 0x02){}
    1714:	19 9b       	sbis	0x03, 1	; 3
    1716:	fe cf       	rjmp	.-4      	; 0x1714 <ButtonPress5+0x246>
			Press_fifth_level = Press5_state9;
    1718:	89 e0       	ldi	r24, 0x09	; 9
    171a:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    171e:	18 9b       	sbis	0x03, 0	; 3
    1720:	04 c0       	rjmp	.+8      	; 0x172a <ButtonPress5+0x25c>
    1722:	1a 9b       	sbis	0x03, 2	; 3
    1724:	02 c0       	rjmp	.+4      	; 0x172a <ButtonPress5+0x25c>
    1726:	1b 99       	sbic	0x03, 3	; 3
    1728:	ef c0       	rjmp	.+478    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    172a:	20 91 00 01 	lds	r18, 0x0100
    172e:	82 2f       	mov	r24, r18
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	01 97       	sbiw	r24, 0x01	; 1
    1734:	99 23       	and	r25, r25
    1736:	1c f0       	brlt	.+6      	; 0x173e <ButtonPress5+0x270>
			{
				lives--;
    1738:	21 50       	subi	r18, 0x01	; 1
    173a:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    173e:	80 91 00 01 	lds	r24, 0x0100
    1742:	81 11       	cpse	r24, r1
    1744:	03 c0       	rjmp	.+6      	; 0x174c <ButtonPress5+0x27e>
			{
				global_g = 20;
    1746:	84 e1       	ldi	r24, 0x14	; 20
    1748:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    174c:	80 e1       	ldi	r24, 0x10	; 16
    174e:	80 93 f9 01 	sts	0x01F9, r24
    1752:	e6 c0       	rjmp	.+460    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state9:
		if(~PINB & 0x01)
    1754:	18 99       	sbic	0x03, 0	; 3
    1756:	05 c0       	rjmp	.+10     	; 0x1762 <ButtonPress5+0x294>
		{
			while(~PINB & 0x01){}
    1758:	18 9b       	sbis	0x03, 0	; 3
    175a:	fe cf       	rjmp	.-4      	; 0x1758 <ButtonPress5+0x28a>
			Press_fifth_level = Press5_state10;
    175c:	8a e0       	ldi	r24, 0x0A	; 10
    175e:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    1762:	19 9b       	sbis	0x03, 1	; 3
    1764:	04 c0       	rjmp	.+8      	; 0x176e <ButtonPress5+0x2a0>
    1766:	1a 9b       	sbis	0x03, 2	; 3
    1768:	02 c0       	rjmp	.+4      	; 0x176e <ButtonPress5+0x2a0>
    176a:	1b 99       	sbic	0x03, 3	; 3
    176c:	cd c0       	rjmp	.+410    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    176e:	20 91 00 01 	lds	r18, 0x0100
    1772:	82 2f       	mov	r24, r18
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	01 97       	sbiw	r24, 0x01	; 1
    1778:	99 23       	and	r25, r25
    177a:	1c f0       	brlt	.+6      	; 0x1782 <ButtonPress5+0x2b4>
			{
				lives--;
    177c:	21 50       	subi	r18, 0x01	; 1
    177e:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1782:	80 91 00 01 	lds	r24, 0x0100
    1786:	81 11       	cpse	r24, r1
    1788:	03 c0       	rjmp	.+6      	; 0x1790 <ButtonPress5+0x2c2>
			{
				global_g = 20;
    178a:	84 e1       	ldi	r24, 0x14	; 20
    178c:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1790:	80 e1       	ldi	r24, 0x10	; 16
    1792:	80 93 f9 01 	sts	0x01F9, r24
    1796:	c4 c0       	rjmp	.+392    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state10:
		if(~PINB & 0x02)
    1798:	19 99       	sbic	0x03, 1	; 3
    179a:	05 c0       	rjmp	.+10     	; 0x17a6 <ButtonPress5+0x2d8>
		{
			while(~PINB & 0x02){}
    179c:	19 9b       	sbis	0x03, 1	; 3
    179e:	fe cf       	rjmp	.-4      	; 0x179c <ButtonPress5+0x2ce>
			Press_fifth_level = Press5_state11;
    17a0:	8b e0       	ldi	r24, 0x0B	; 11
    17a2:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x01 || ~PINB & 0x04 || ~PINB & 0x08)
    17a6:	18 9b       	sbis	0x03, 0	; 3
    17a8:	04 c0       	rjmp	.+8      	; 0x17b2 <ButtonPress5+0x2e4>
    17aa:	1a 9b       	sbis	0x03, 2	; 3
    17ac:	02 c0       	rjmp	.+4      	; 0x17b2 <ButtonPress5+0x2e4>
    17ae:	1b 99       	sbic	0x03, 3	; 3
    17b0:	ab c0       	rjmp	.+342    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    17b2:	20 91 00 01 	lds	r18, 0x0100
    17b6:	82 2f       	mov	r24, r18
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	01 97       	sbiw	r24, 0x01	; 1
    17bc:	99 23       	and	r25, r25
    17be:	1c f0       	brlt	.+6      	; 0x17c6 <ButtonPress5+0x2f8>
			{
				lives--;
    17c0:	21 50       	subi	r18, 0x01	; 1
    17c2:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    17c6:	80 91 00 01 	lds	r24, 0x0100
    17ca:	81 11       	cpse	r24, r1
    17cc:	03 c0       	rjmp	.+6      	; 0x17d4 <ButtonPress5+0x306>
			{
				global_g = 20;
    17ce:	84 e1       	ldi	r24, 0x14	; 20
    17d0:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    17d4:	80 e1       	ldi	r24, 0x10	; 16
    17d6:	80 93 f9 01 	sts	0x01F9, r24
    17da:	a2 c0       	rjmp	.+324    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state11:
		if(~PINB & 0x01)
    17dc:	18 99       	sbic	0x03, 0	; 3
    17de:	05 c0       	rjmp	.+10     	; 0x17ea <ButtonPress5+0x31c>
		{
			while(~PINB & 0x01){}
    17e0:	18 9b       	sbis	0x03, 0	; 3
    17e2:	fe cf       	rjmp	.-4      	; 0x17e0 <ButtonPress5+0x312>
			Press_fifth_level = Press5_state12;
    17e4:	8c e0       	ldi	r24, 0x0C	; 12
    17e6:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    17ea:	19 9b       	sbis	0x03, 1	; 3
    17ec:	04 c0       	rjmp	.+8      	; 0x17f6 <ButtonPress5+0x328>
    17ee:	1a 9b       	sbis	0x03, 2	; 3
    17f0:	02 c0       	rjmp	.+4      	; 0x17f6 <ButtonPress5+0x328>
    17f2:	1b 99       	sbic	0x03, 3	; 3
    17f4:	89 c0       	rjmp	.+274    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    17f6:	20 91 00 01 	lds	r18, 0x0100
    17fa:	82 2f       	mov	r24, r18
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	01 97       	sbiw	r24, 0x01	; 1
    1800:	99 23       	and	r25, r25
    1802:	1c f0       	brlt	.+6      	; 0x180a <ButtonPress5+0x33c>
			{
				lives--;
    1804:	21 50       	subi	r18, 0x01	; 1
    1806:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    180a:	80 91 00 01 	lds	r24, 0x0100
    180e:	81 11       	cpse	r24, r1
    1810:	03 c0       	rjmp	.+6      	; 0x1818 <ButtonPress5+0x34a>
			{
				global_g = 20;
    1812:	84 e1       	ldi	r24, 0x14	; 20
    1814:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    1818:	80 e1       	ldi	r24, 0x10	; 16
    181a:	80 93 f9 01 	sts	0x01F9, r24
    181e:	80 c0       	rjmp	.+256    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state12:
		if(~PINB & 0x04)
    1820:	1a 99       	sbic	0x03, 2	; 3
    1822:	05 c0       	rjmp	.+10     	; 0x182e <ButtonPress5+0x360>
		{
			while(~PINB & 0x04){}
    1824:	1a 9b       	sbis	0x03, 2	; 3
    1826:	fe cf       	rjmp	.-4      	; 0x1824 <ButtonPress5+0x356>
			Press_fifth_level = Press5_state13;
    1828:	8d e0       	ldi	r24, 0x0D	; 13
    182a:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x01 || ~PINB & 0x08)
    182e:	19 9b       	sbis	0x03, 1	; 3
    1830:	04 c0       	rjmp	.+8      	; 0x183a <ButtonPress5+0x36c>
    1832:	18 9b       	sbis	0x03, 0	; 3
    1834:	02 c0       	rjmp	.+4      	; 0x183a <ButtonPress5+0x36c>
    1836:	1b 99       	sbic	0x03, 3	; 3
    1838:	67 c0       	rjmp	.+206    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    183a:	20 91 00 01 	lds	r18, 0x0100
    183e:	82 2f       	mov	r24, r18
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	01 97       	sbiw	r24, 0x01	; 1
    1844:	99 23       	and	r25, r25
    1846:	1c f0       	brlt	.+6      	; 0x184e <ButtonPress5+0x380>
			{
				lives--;
    1848:	21 50       	subi	r18, 0x01	; 1
    184a:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    184e:	80 91 00 01 	lds	r24, 0x0100
    1852:	81 11       	cpse	r24, r1
    1854:	03 c0       	rjmp	.+6      	; 0x185c <ButtonPress5+0x38e>
			{
				global_g = 20;
    1856:	84 e1       	ldi	r24, 0x14	; 20
    1858:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    185c:	80 e1       	ldi	r24, 0x10	; 16
    185e:	80 93 f9 01 	sts	0x01F9, r24
    1862:	5e c0       	rjmp	.+188    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state13:
		if(~PINB & 0x08)
    1864:	1b 99       	sbic	0x03, 3	; 3
    1866:	05 c0       	rjmp	.+10     	; 0x1872 <ButtonPress5+0x3a4>
		{
			while(~PINB & 0x08){}
    1868:	1b 9b       	sbis	0x03, 3	; 3
    186a:	fe cf       	rjmp	.-4      	; 0x1868 <ButtonPress5+0x39a>
			Press_fifth_level = Press5_state14;
    186c:	8e e0       	ldi	r24, 0x0E	; 14
    186e:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x01)
    1872:	19 9b       	sbis	0x03, 1	; 3
    1874:	04 c0       	rjmp	.+8      	; 0x187e <ButtonPress5+0x3b0>
    1876:	1a 9b       	sbis	0x03, 2	; 3
    1878:	02 c0       	rjmp	.+4      	; 0x187e <ButtonPress5+0x3b0>
    187a:	18 99       	sbic	0x03, 0	; 3
    187c:	45 c0       	rjmp	.+138    	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    187e:	20 91 00 01 	lds	r18, 0x0100
    1882:	82 2f       	mov	r24, r18
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	99 23       	and	r25, r25
    188a:	1c f0       	brlt	.+6      	; 0x1892 <ButtonPress5+0x3c4>
			{
				lives--;
    188c:	21 50       	subi	r18, 0x01	; 1
    188e:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    1892:	80 91 00 01 	lds	r24, 0x0100
    1896:	81 11       	cpse	r24, r1
    1898:	03 c0       	rjmp	.+6      	; 0x18a0 <ButtonPress5+0x3d2>
			{
				global_g = 20;
    189a:	84 e1       	ldi	r24, 0x14	; 20
    189c:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    18a0:	80 e1       	ldi	r24, 0x10	; 16
    18a2:	80 93 f9 01 	sts	0x01F9, r24
    18a6:	3c c0       	rjmp	.+120    	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state14:
		if(~PINB & 0x01)
    18a8:	18 99       	sbic	0x03, 0	; 3
    18aa:	05 c0       	rjmp	.+10     	; 0x18b6 <ButtonPress5+0x3e8>
		{
			while(~PINB & 0x01){}
    18ac:	18 9b       	sbis	0x03, 0	; 3
    18ae:	fe cf       	rjmp	.-4      	; 0x18ac <ButtonPress5+0x3de>
			Press_fifth_level = Press5_state15;
    18b0:	8f e0       	ldi	r24, 0x0F	; 15
    18b2:	80 93 f9 01 	sts	0x01F9, r24
		}
		if(~PINB & 0x02 || ~PINB & 0x04 || ~PINB & 0x08)
    18b6:	19 9b       	sbis	0x03, 1	; 3
    18b8:	04 c0       	rjmp	.+8      	; 0x18c2 <ButtonPress5+0x3f4>
    18ba:	1a 9b       	sbis	0x03, 2	; 3
    18bc:	02 c0       	rjmp	.+4      	; 0x18c2 <ButtonPress5+0x3f4>
    18be:	1b 99       	sbic	0x03, 3	; 3
    18c0:	23 c0       	rjmp	.+70     	; 0x1908 <ButtonPress5+0x43a>
		{
			if(lives - 1 > -1)
    18c2:	20 91 00 01 	lds	r18, 0x0100
    18c6:	82 2f       	mov	r24, r18
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	01 97       	sbiw	r24, 0x01	; 1
    18cc:	99 23       	and	r25, r25
    18ce:	1c f0       	brlt	.+6      	; 0x18d6 <ButtonPress5+0x408>
			{
				lives--;
    18d0:	21 50       	subi	r18, 0x01	; 1
    18d2:	20 93 00 01 	sts	0x0100, r18
			}
			if(lives == 0)
    18d6:	80 91 00 01 	lds	r24, 0x0100
    18da:	81 11       	cpse	r24, r1
    18dc:	03 c0       	rjmp	.+6      	; 0x18e4 <ButtonPress5+0x416>
			{
				global_g = 20;
    18de:	84 e1       	ldi	r24, 0x14	; 20
    18e0:	80 93 ea 01 	sts	0x01EA, r24
			}
			Press_fifth_level = Error5;
    18e4:	80 e1       	ldi	r24, 0x10	; 16
    18e6:	80 93 f9 01 	sts	0x01F9, r24
    18ea:	1a c0       	rjmp	.+52     	; 0x1920 <ButtonPress5+0x452>
		}
		break;
		case Press5_state15:
		if(~PINB & 0x10)
    18ec:	1c 99       	sbic	0x03, 4	; 3
    18ee:	9f c0       	rjmp	.+318    	; 0x1a2e <ButtonPress5+0x560>
		{
			Press_fifth_level = Off5;
    18f0:	81 e1       	ldi	r24, 0x11	; 17
    18f2:	80 93 f9 01 	sts	0x01F9, r24
    18f6:	a9 c0       	rjmp	.+338    	; 0x1a4a <ButtonPress5+0x57c>
		}
		break;
		case Error5:
		if(~PINB & 0x08)
    18f8:	1b 99       	sbic	0x03, 3	; 3
    18fa:	12 c0       	rjmp	.+36     	; 0x1920 <ButtonPress5+0x452>
		{
			while(~PINB & 0x08){}
    18fc:	1b 9b       	sbis	0x03, 3	; 3
    18fe:	fe cf       	rjmp	.-4      	; 0x18fc <ButtonPress5+0x42e>
			Press_fifth_level = Press5_state1;
    1900:	81 e0       	ldi	r24, 0x01	; 1
    1902:	80 93 f9 01 	sts	0x01F9, r24
    1906:	15 c0       	rjmp	.+42     	; 0x1932 <ButtonPress5+0x464>
		}
		break;
	}
	switch(Press_fifth_level)
    1908:	80 91 f9 01 	lds	r24, 0x01F9
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	fc 01       	movw	r30, r24
    1910:	31 97       	sbiw	r30, 0x01	; 1
    1912:	e1 31       	cpi	r30, 0x11	; 17
    1914:	f1 05       	cpc	r31, r1
    1916:	08 f0       	brcs	.+2      	; 0x191a <ButtonPress5+0x44c>
    1918:	99 c0       	rjmp	.+306    	; 0x1a4c <ButtonPress5+0x57e>
    191a:	ec 50       	subi	r30, 0x0C	; 12
    191c:	ff 4f       	sbci	r31, 0xFF	; 255
    191e:	7c c2       	rjmp	.+1272   	; 0x1e18 <__tablejump2__>
	{
		case Error5:
		transmit_data(simon_SevenSeg(lives));
    1920:	80 91 00 01 	lds	r24, 0x0100
    1924:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1928:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x10;
    192c:	80 e1       	ldi	r24, 0x10	; 16
    192e:	82 b9       	out	0x02, r24	; 2
		break;
    1930:	08 95       	ret
		case Press5_state1:
		transmit_data(simon_SevenSeg(lives));
    1932:	80 91 00 01 	lds	r24, 0x0100
    1936:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    193a:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    193e:	88 e0       	ldi	r24, 0x08	; 8
    1940:	82 b9       	out	0x02, r24	; 2
		break;
    1942:	08 95       	ret
		case Press5_state2:
		transmit_data(simon_SevenSeg(lives));
    1944:	80 91 00 01 	lds	r24, 0x0100
    1948:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    194c:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x04;
    1950:	84 e0       	ldi	r24, 0x04	; 4
    1952:	82 b9       	out	0x02, r24	; 2
		break;
    1954:	08 95       	ret
		case Press5_state3:
		transmit_data(simon_SevenSeg(lives));
    1956:	80 91 00 01 	lds	r24, 0x0100
    195a:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    195e:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    1962:	82 e0       	ldi	r24, 0x02	; 2
    1964:	82 b9       	out	0x02, r24	; 2
		break;
    1966:	08 95       	ret
		case Press5_state4:
		transmit_data(simon_SevenSeg(lives));
    1968:	80 91 00 01 	lds	r24, 0x0100
    196c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1970:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1974:	81 e0       	ldi	r24, 0x01	; 1
    1976:	82 b9       	out	0x02, r24	; 2
		break;
    1978:	08 95       	ret
		case Press5_state5:
		transmit_data(simon_SevenSeg(lives));
    197a:	80 91 00 01 	lds	r24, 0x0100
    197e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1982:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    1986:	82 e0       	ldi	r24, 0x02	; 2
    1988:	82 b9       	out	0x02, r24	; 2
		break;
    198a:	08 95       	ret
		case Press5_state6:
		transmit_data(simon_SevenSeg(lives));
    198c:	80 91 00 01 	lds	r24, 0x0100
    1990:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1994:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	82 b9       	out	0x02, r24	; 2
		break;
    199c:	08 95       	ret
		case Press5_state7:
		transmit_data(simon_SevenSeg(lives));
    199e:	80 91 00 01 	lds	r24, 0x0100
    19a2:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    19a6:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x04;
    19aa:	84 e0       	ldi	r24, 0x04	; 4
    19ac:	82 b9       	out	0x02, r24	; 2
		break;
    19ae:	08 95       	ret
		case Press5_state8:
		transmit_data(simon_SevenSeg(lives));
    19b0:	80 91 00 01 	lds	r24, 0x0100
    19b4:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    19b8:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    19bc:	88 e0       	ldi	r24, 0x08	; 8
    19be:	82 b9       	out	0x02, r24	; 2
		break;
    19c0:	08 95       	ret
		case Press5_state9:
		transmit_data(simon_SevenSeg(lives));
    19c2:	80 91 00 01 	lds	r24, 0x0100
    19c6:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    19ca:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    19ce:	82 e0       	ldi	r24, 0x02	; 2
    19d0:	82 b9       	out	0x02, r24	; 2
		break;
    19d2:	08 95       	ret
		case Press5_state10:
		transmit_data(simon_SevenSeg(lives));
    19d4:	80 91 00 01 	lds	r24, 0x0100
    19d8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    19dc:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    19e0:	81 e0       	ldi	r24, 0x01	; 1
    19e2:	82 b9       	out	0x02, r24	; 2
		break;
    19e4:	08 95       	ret
		case Press5_state11:
		transmit_data(simon_SevenSeg(lives));
    19e6:	80 91 00 01 	lds	r24, 0x0100
    19ea:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    19ee:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x02;
    19f2:	82 e0       	ldi	r24, 0x02	; 2
    19f4:	82 b9       	out	0x02, r24	; 2
		break;
    19f6:	08 95       	ret
		case Press5_state12:
		transmit_data(simon_SevenSeg(lives));
    19f8:	80 91 00 01 	lds	r24, 0x0100
    19fc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1a00:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1a04:	81 e0       	ldi	r24, 0x01	; 1
    1a06:	82 b9       	out	0x02, r24	; 2
		break;
    1a08:	08 95       	ret
		case Press5_state13:
		transmit_data(simon_SevenSeg(lives));
    1a0a:	80 91 00 01 	lds	r24, 0x0100
    1a0e:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1a12:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x04;
    1a16:	84 e0       	ldi	r24, 0x04	; 4
    1a18:	82 b9       	out	0x02, r24	; 2
		break;
    1a1a:	08 95       	ret
		case Press5_state14:
		transmit_data(simon_SevenSeg(lives));
    1a1c:	80 91 00 01 	lds	r24, 0x0100
    1a20:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1a24:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x08;
    1a28:	88 e0       	ldi	r24, 0x08	; 8
    1a2a:	82 b9       	out	0x02, r24	; 2
		break;
    1a2c:	08 95       	ret
		case Press5_state15:
		LCD_DisplayString(1, "Fantastic Job ;)");
    1a2e:	66 ec       	ldi	r22, 0xC6	; 198
    1a30:	71 e0       	ldi	r23, 0x01	; 1
    1a32:	81 e0       	ldi	r24, 0x01	; 1
    1a34:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
		transmit_data(simon_SevenSeg(lives));
    1a38:	80 91 00 01 	lds	r24, 0x0100
    1a3c:	0e 94 ff 01 	call	0x3fe	; 0x3fe <simon_SevenSeg>
    1a40:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <transmit_data>
		PORTA = 0x01;
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	82 b9       	out	0x02, r24	; 2
		break;
    1a48:	08 95       	ret
		case Off5:
		PORTA = 0x00;
    1a4a:	12 b8       	out	0x02, r1	; 2
    1a4c:	08 95       	ret

00001a4e <main>:
	}
}


int main(void)
{
    1a4e:	cf 92       	push	r12
    1a50:	df 92       	push	r13
    1a52:	ef 92       	push	r14
    1a54:	ff 92       	push	r15
	DDRA = 0xFF;	PORTA = 0x00;//LED outputs
    1a56:	8f ef       	ldi	r24, 0xFF	; 255
    1a58:	81 b9       	out	0x01, r24	; 1
    1a5a:	12 b8       	out	0x02, r1	; 2
	DDRB = 0x00;	PORTB = 0xFF;//input of the buttons
    1a5c:	14 b8       	out	0x04, r1	; 4
    1a5e:	85 b9       	out	0x05, r24	; 5
	DDRD = 0xFF;	PORTD = 0x00;//seven segment output with shift register
    1a60:	8a b9       	out	0x0a, r24	; 10
    1a62:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0xFF;	PORTC = 0x00;//data lines for LCD display
    1a64:	87 b9       	out	0x07, r24	; 7
    1a66:	18 b8       	out	0x08, r1	; 8
	
	LCD_init();
    1a68:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_init>
	if(global_g == 0)
    1a6c:	80 91 ea 01 	lds	r24, 0x01EA
    1a70:	81 11       	cpse	r24, r1
    1a72:	cb c1       	rjmp	.+918    	; 0x1e0a <main+0x3bc>
	{
		LCD_ClearScreen();
    1a74:	0e 94 45 01 	call	0x28a	; 0x28a <LCD_ClearScreen>
		while(global_g == 0)
    1a78:	80 91 ea 01 	lds	r24, 0x01EA
    1a7c:	81 11       	cpse	r24, r1
    1a7e:	26 c0       	rjmp	.+76     	; 0x1acc <main+0x7e>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1a80:	0f 2e       	mov	r0, r31
    1a82:	f4 ef       	ldi	r31, 0xF4	; 244
    1a84:	cf 2e       	mov	r12, r31
    1a86:	dd 24       	eor	r13, r13
    1a88:	d3 94       	inc	r13
    1a8a:	e1 2c       	mov	r14, r1
    1a8c:	f1 2c       	mov	r15, r1
    1a8e:	f0 2d       	mov	r31, r0
    1a90:	c0 92 01 01 	sts	0x0101, r12
    1a94:	d0 92 02 01 	sts	0x0102, r13
    1a98:	e0 92 03 01 	sts	0x0103, r14
    1a9c:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1aa0:	c0 92 eb 01 	sts	0x01EB, r12
    1aa4:	d0 92 ec 01 	sts	0x01EC, r13
    1aa8:	e0 92 ed 01 	sts	0x01ED, r14
    1aac:	f0 92 ee 01 	sts	0x01EE, r15
	{
		LCD_ClearScreen();
		while(global_g == 0)
		{
			TimerSet(500);
			TimerOn();
    1ab0:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_State_machine_1();
    1ab4:	0e 94 29 02 	call	0x452	; 0x452 <TickFct_State_machine_1>
			while(!TimerFlag);
    1ab8:	80 91 ef 01 	lds	r24, 0x01EF
    1abc:	88 23       	and	r24, r24
    1abe:	e1 f3       	breq	.-8      	; 0x1ab8 <main+0x6a>
			TimerFlag = 0;	
    1ac0:	10 92 ef 01 	sts	0x01EF, r1
	
	LCD_init();
	if(global_g == 0)
	{
		LCD_ClearScreen();
		while(global_g == 0)
    1ac4:	80 91 ea 01 	lds	r24, 0x01EA
    1ac8:	88 23       	and	r24, r24
    1aca:	11 f3       	breq	.-60     	; 0x1a90 <main+0x42>
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    1acc:	80 91 ea 01 	lds	r24, 0x01EA
    1ad0:	81 30       	cpi	r24, 0x01	; 1
    1ad2:	29 f5       	brne	.+74     	; 0x1b1e <main+0xd0>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1ad4:	0f 2e       	mov	r0, r31
    1ad6:	f8 ec       	ldi	r31, 0xC8	; 200
    1ad8:	cf 2e       	mov	r12, r31
    1ada:	d1 2c       	mov	r13, r1
    1adc:	e1 2c       	mov	r14, r1
    1ade:	f1 2c       	mov	r15, r1
    1ae0:	f0 2d       	mov	r31, r0
    1ae2:	c0 92 01 01 	sts	0x0101, r12
    1ae6:	d0 92 02 01 	sts	0x0102, r13
    1aea:	e0 92 03 01 	sts	0x0103, r14
    1aee:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1af2:	c0 92 eb 01 	sts	0x01EB, r12
    1af6:	d0 92 ec 01 	sts	0x01EC, r13
    1afa:	e0 92 ed 01 	sts	0x01ED, r14
    1afe:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;	
		}
		while(global_g == 1)
		{
			TimerSet(200);
			TimerOn();
    1b02:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress();
    1b06:	0e 94 80 02 	call	0x500	; 0x500 <ButtonPress>
			while(!TimerFlag);
    1b0a:	80 91 ef 01 	lds	r24, 0x01EF
    1b0e:	88 23       	and	r24, r24
    1b10:	e1 f3       	breq	.-8      	; 0x1b0a <main+0xbc>
			TimerFlag = 0;
    1b12:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_State_machine_1();
			while(!TimerFlag);
			TimerFlag = 0;	
		}
		while(global_g == 1)
    1b16:	80 91 ea 01 	lds	r24, 0x01EA
    1b1a:	81 30       	cpi	r24, 0x01	; 1
    1b1c:	11 f3       	breq	.-60     	; 0x1ae2 <main+0x94>
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1b1e:	80 91 ea 01 	lds	r24, 0x01EA
    1b22:	82 30       	cpi	r24, 0x02	; 2
    1b24:	31 f5       	brne	.+76     	; 0x1b72 <main+0x124>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1b26:	0f 2e       	mov	r0, r31
    1b28:	f4 ef       	ldi	r31, 0xF4	; 244
    1b2a:	cf 2e       	mov	r12, r31
    1b2c:	dd 24       	eor	r13, r13
    1b2e:	d3 94       	inc	r13
    1b30:	e1 2c       	mov	r14, r1
    1b32:	f1 2c       	mov	r15, r1
    1b34:	f0 2d       	mov	r31, r0
    1b36:	c0 92 01 01 	sts	0x0101, r12
    1b3a:	d0 92 02 01 	sts	0x0102, r13
    1b3e:	e0 92 03 01 	sts	0x0103, r14
    1b42:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1b46:	c0 92 eb 01 	sts	0x01EB, r12
    1b4a:	d0 92 ec 01 	sts	0x01EC, r13
    1b4e:	e0 92 ed 01 	sts	0x01ED, r14
    1b52:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 2)
		{
			TimerSet(500);
			TimerOn();
    1b56:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine2();
    1b5a:	0e 94 72 03 	call	0x6e4	; 0x6e4 <TickFct_Machine2>
			while(!TimerFlag);
    1b5e:	80 91 ef 01 	lds	r24, 0x01EF
    1b62:	88 23       	and	r24, r24
    1b64:	e1 f3       	breq	.-8      	; 0x1b5e <main+0x110>
			TimerFlag = 0;
    1b66:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 2)
    1b6a:	80 91 ea 01 	lds	r24, 0x01EA
    1b6e:	82 30       	cpi	r24, 0x02	; 2
    1b70:	11 f3       	breq	.-60     	; 0x1b36 <main+0xe8>
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1b72:	80 91 ea 01 	lds	r24, 0x01EA
    1b76:	83 30       	cpi	r24, 0x03	; 3
    1b78:	29 f5       	brne	.+74     	; 0x1bc4 <main+0x176>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1b7a:	0f 2e       	mov	r0, r31
    1b7c:	f8 ec       	ldi	r31, 0xC8	; 200
    1b7e:	cf 2e       	mov	r12, r31
    1b80:	d1 2c       	mov	r13, r1
    1b82:	e1 2c       	mov	r14, r1
    1b84:	f1 2c       	mov	r15, r1
    1b86:	f0 2d       	mov	r31, r0
    1b88:	c0 92 01 01 	sts	0x0101, r12
    1b8c:	d0 92 02 01 	sts	0x0102, r13
    1b90:	e0 92 03 01 	sts	0x0103, r14
    1b94:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1b98:	c0 92 eb 01 	sts	0x01EB, r12
    1b9c:	d0 92 ec 01 	sts	0x01EC, r13
    1ba0:	e0 92 ed 01 	sts	0x01ED, r14
    1ba4:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 3)
		{
			TimerSet(200);
			TimerOn();
    1ba8:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress2();
    1bac:	0e 94 ce 03 	call	0x79c	; 0x79c <ButtonPress2>
			while(!TimerFlag);
    1bb0:	80 91 ef 01 	lds	r24, 0x01EF
    1bb4:	88 23       	and	r24, r24
    1bb6:	e1 f3       	breq	.-8      	; 0x1bb0 <main+0x162>
			TimerFlag = 0;
    1bb8:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 3)
    1bbc:	80 91 ea 01 	lds	r24, 0x01EA
    1bc0:	83 30       	cpi	r24, 0x03	; 3
    1bc2:	11 f3       	breq	.-60     	; 0x1b88 <main+0x13a>
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1bc4:	80 91 ea 01 	lds	r24, 0x01EA
    1bc8:	84 30       	cpi	r24, 0x04	; 4
    1bca:	31 f5       	brne	.+76     	; 0x1c18 <main+0x1ca>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1bcc:	0f 2e       	mov	r0, r31
    1bce:	f4 ef       	ldi	r31, 0xF4	; 244
    1bd0:	cf 2e       	mov	r12, r31
    1bd2:	dd 24       	eor	r13, r13
    1bd4:	d3 94       	inc	r13
    1bd6:	e1 2c       	mov	r14, r1
    1bd8:	f1 2c       	mov	r15, r1
    1bda:	f0 2d       	mov	r31, r0
    1bdc:	c0 92 01 01 	sts	0x0101, r12
    1be0:	d0 92 02 01 	sts	0x0102, r13
    1be4:	e0 92 03 01 	sts	0x0103, r14
    1be8:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1bec:	c0 92 eb 01 	sts	0x01EB, r12
    1bf0:	d0 92 ec 01 	sts	0x01EC, r13
    1bf4:	e0 92 ed 01 	sts	0x01ED, r14
    1bf8:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 4)
		{
			TimerSet(500);
			TimerOn();
    1bfc:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine3();
    1c00:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <TickFct_Machine3>
			while(!TimerFlag);
    1c04:	80 91 ef 01 	lds	r24, 0x01EF
    1c08:	88 23       	and	r24, r24
    1c0a:	e1 f3       	breq	.-8      	; 0x1c04 <main+0x1b6>
			TimerFlag = 0;
    1c0c:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress2();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 4)
    1c10:	80 91 ea 01 	lds	r24, 0x01EA
    1c14:	84 30       	cpi	r24, 0x04	; 4
    1c16:	11 f3       	breq	.-60     	; 0x1bdc <main+0x18e>
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1c18:	80 91 ea 01 	lds	r24, 0x01EA
    1c1c:	85 30       	cpi	r24, 0x05	; 5
    1c1e:	29 f5       	brne	.+74     	; 0x1c6a <main+0x21c>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1c20:	0f 2e       	mov	r0, r31
    1c22:	f8 ec       	ldi	r31, 0xC8	; 200
    1c24:	cf 2e       	mov	r12, r31
    1c26:	d1 2c       	mov	r13, r1
    1c28:	e1 2c       	mov	r14, r1
    1c2a:	f1 2c       	mov	r15, r1
    1c2c:	f0 2d       	mov	r31, r0
    1c2e:	c0 92 01 01 	sts	0x0101, r12
    1c32:	d0 92 02 01 	sts	0x0102, r13
    1c36:	e0 92 03 01 	sts	0x0103, r14
    1c3a:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1c3e:	c0 92 eb 01 	sts	0x01EB, r12
    1c42:	d0 92 ec 01 	sts	0x01EC, r13
    1c46:	e0 92 ed 01 	sts	0x01ED, r14
    1c4a:	f0 92 ee 01 	sts	0x01EE, r15
		}
		while(global_g == 5)
		{

			TimerSet(200);
			TimerOn();
    1c4e:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress3();
    1c52:	0e 94 69 05 	call	0xad2	; 0xad2 <ButtonPress3>
			while(!TimerFlag);
    1c56:	80 91 ef 01 	lds	r24, 0x01EF
    1c5a:	88 23       	and	r24, r24
    1c5c:	e1 f3       	breq	.-8      	; 0x1c56 <main+0x208>
			TimerFlag = 0;
    1c5e:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 5)
    1c62:	80 91 ea 01 	lds	r24, 0x01EA
    1c66:	85 30       	cpi	r24, 0x05	; 5
    1c68:	11 f3       	breq	.-60     	; 0x1c2e <main+0x1e0>
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1c6a:	80 91 ea 01 	lds	r24, 0x01EA
    1c6e:	86 30       	cpi	r24, 0x06	; 6
    1c70:	29 f5       	brne	.+74     	; 0x1cbc <main+0x26e>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1c72:	0f 2e       	mov	r0, r31
    1c74:	f4 ef       	ldi	r31, 0xF4	; 244
    1c76:	cf 2e       	mov	r12, r31
    1c78:	dd 24       	eor	r13, r13
    1c7a:	d3 94       	inc	r13
    1c7c:	e1 2c       	mov	r14, r1
    1c7e:	f1 2c       	mov	r15, r1
    1c80:	f0 2d       	mov	r31, r0
    1c82:	c0 92 01 01 	sts	0x0101, r12
    1c86:	d0 92 02 01 	sts	0x0102, r13
    1c8a:	e0 92 03 01 	sts	0x0103, r14
    1c8e:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1c92:	c0 92 eb 01 	sts	0x01EB, r12
    1c96:	d0 92 ec 01 	sts	0x01EC, r13
    1c9a:	e0 92 ed 01 	sts	0x01ED, r14
    1c9e:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 6)
		{
			TimerSet(500);
			TimerOn();
    1ca2:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine4();
    1ca6:	c7 d8       	rcall	.-3698   	; 0xe36 <TickFct_Machine4>
			while(!TimerFlag);
    1ca8:	80 91 ef 01 	lds	r24, 0x01EF
    1cac:	88 23       	and	r24, r24
    1cae:	e1 f3       	breq	.-8      	; 0x1ca8 <main+0x25a>
			TimerFlag = 0;
    1cb0:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress3();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 6)
    1cb4:	80 91 ea 01 	lds	r24, 0x01EA
    1cb8:	86 30       	cpi	r24, 0x06	; 6
    1cba:	19 f3       	breq	.-58     	; 0x1c82 <main+0x234>
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1cbc:	80 91 ea 01 	lds	r24, 0x01EA
    1cc0:	87 30       	cpi	r24, 0x07	; 7
    1cc2:	21 f5       	brne	.+72     	; 0x1d0c <main+0x2be>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1cc4:	0f 2e       	mov	r0, r31
    1cc6:	f8 ec       	ldi	r31, 0xC8	; 200
    1cc8:	cf 2e       	mov	r12, r31
    1cca:	d1 2c       	mov	r13, r1
    1ccc:	e1 2c       	mov	r14, r1
    1cce:	f1 2c       	mov	r15, r1
    1cd0:	f0 2d       	mov	r31, r0
    1cd2:	c0 92 01 01 	sts	0x0101, r12
    1cd6:	d0 92 02 01 	sts	0x0102, r13
    1cda:	e0 92 03 01 	sts	0x0103, r14
    1cde:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1ce2:	c0 92 eb 01 	sts	0x01EB, r12
    1ce6:	d0 92 ec 01 	sts	0x01EC, r13
    1cea:	e0 92 ed 01 	sts	0x01ED, r14
    1cee:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 7)
		{
			TimerSet(200);
			TimerOn();
    1cf2:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress4();
    1cf6:	23 d9       	rcall	.-3514   	; 0xf3e <ButtonPress4>
			while(!TimerFlag);
    1cf8:	80 91 ef 01 	lds	r24, 0x01EF
    1cfc:	88 23       	and	r24, r24
    1cfe:	e1 f3       	breq	.-8      	; 0x1cf8 <main+0x2aa>
			TimerFlag = 0;
    1d00:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 7)
    1d04:	80 91 ea 01 	lds	r24, 0x01EA
    1d08:	87 30       	cpi	r24, 0x07	; 7
    1d0a:	19 f3       	breq	.-58     	; 0x1cd2 <main+0x284>
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1d0c:	80 91 ea 01 	lds	r24, 0x01EA
    1d10:	88 30       	cpi	r24, 0x08	; 8
    1d12:	29 f5       	brne	.+74     	; 0x1d5e <main+0x310>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1d14:	0f 2e       	mov	r0, r31
    1d16:	f4 ef       	ldi	r31, 0xF4	; 244
    1d18:	cf 2e       	mov	r12, r31
    1d1a:	dd 24       	eor	r13, r13
    1d1c:	d3 94       	inc	r13
    1d1e:	e1 2c       	mov	r14, r1
    1d20:	f1 2c       	mov	r15, r1
    1d22:	f0 2d       	mov	r31, r0
    1d24:	c0 92 01 01 	sts	0x0101, r12
    1d28:	d0 92 02 01 	sts	0x0102, r13
    1d2c:	e0 92 03 01 	sts	0x0103, r14
    1d30:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1d34:	c0 92 eb 01 	sts	0x01EB, r12
    1d38:	d0 92 ec 01 	sts	0x01EC, r13
    1d3c:	e0 92 ed 01 	sts	0x01ED, r14
    1d40:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 8)
		{
			TimerSet(500);
			TimerOn();
    1d44:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			TickFct_Machine5();
    1d48:	26 db       	rcall	.-2484   	; 0x1396 <TickFct_Machine5>
			while(!TimerFlag);
    1d4a:	80 91 ef 01 	lds	r24, 0x01EF
    1d4e:	88 23       	and	r24, r24
    1d50:	e1 f3       	breq	.-8      	; 0x1d4a <main+0x2fc>
			TimerFlag = 0;
    1d52:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress4();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 8)
    1d56:	80 91 ea 01 	lds	r24, 0x01EA
    1d5a:	88 30       	cpi	r24, 0x08	; 8
    1d5c:	19 f3       	breq	.-58     	; 0x1d24 <main+0x2d6>
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1d5e:	80 91 ea 01 	lds	r24, 0x01EA
    1d62:	89 30       	cpi	r24, 0x09	; 9
    1d64:	29 f5       	brne	.+74     	; 0x1db0 <main+0x362>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1d66:	0f 2e       	mov	r0, r31
    1d68:	fc e2       	ldi	r31, 0x2C	; 44
    1d6a:	cf 2e       	mov	r12, r31
    1d6c:	dd 24       	eor	r13, r13
    1d6e:	d3 94       	inc	r13
    1d70:	e1 2c       	mov	r14, r1
    1d72:	f1 2c       	mov	r15, r1
    1d74:	f0 2d       	mov	r31, r0
    1d76:	c0 92 01 01 	sts	0x0101, r12
    1d7a:	d0 92 02 01 	sts	0x0102, r13
    1d7e:	e0 92 03 01 	sts	0x0103, r14
    1d82:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1d86:	c0 92 eb 01 	sts	0x01EB, r12
    1d8a:	d0 92 ec 01 	sts	0x01EC, r13
    1d8e:	e0 92 ed 01 	sts	0x01ED, r14
    1d92:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 9)
		{
			TimerSet(300);
			TimerOn();
    1d96:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			ButtonPress5();
    1d9a:	99 db       	rcall	.-2254   	; 0x14ce <ButtonPress5>
			while(!TimerFlag);
    1d9c:	80 91 ef 01 	lds	r24, 0x01EF
    1da0:	88 23       	and	r24, r24
    1da2:	e1 f3       	breq	.-8      	; 0x1d9c <main+0x34e>
			TimerFlag = 0;
    1da4:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			TickFct_Machine5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 9)
    1da8:	80 91 ea 01 	lds	r24, 0x01EA
    1dac:	89 30       	cpi	r24, 0x09	; 9
    1dae:	19 f3       	breq	.-58     	; 0x1d76 <main+0x328>
			TimerOn();
			ButtonPress5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 20)
    1db0:	80 91 ea 01 	lds	r24, 0x01EA
    1db4:	84 31       	cpi	r24, 0x14	; 20
    1db6:	49 f5       	brne	.+82     	; 0x1e0a <main+0x3bc>
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
void TimerSet(unsigned long M)
{
	_avr_timer_M = M;
    1db8:	0f 2e       	mov	r0, r31
    1dba:	f8 ee       	ldi	r31, 0xE8	; 232
    1dbc:	cf 2e       	mov	r12, r31
    1dbe:	f3 e0       	ldi	r31, 0x03	; 3
    1dc0:	df 2e       	mov	r13, r31
    1dc2:	e1 2c       	mov	r14, r1
    1dc4:	f1 2c       	mov	r15, r1
    1dc6:	f0 2d       	mov	r31, r0
    1dc8:	c0 92 01 01 	sts	0x0101, r12
    1dcc:	d0 92 02 01 	sts	0x0102, r13
    1dd0:	e0 92 03 01 	sts	0x0103, r14
    1dd4:	f0 92 04 01 	sts	0x0104, r15
	_avr_timer_cntcurr = _avr_timer_M;
    1dd8:	c0 92 eb 01 	sts	0x01EB, r12
    1ddc:	d0 92 ec 01 	sts	0x01EC, r13
    1de0:	e0 92 ed 01 	sts	0x01ED, r14
    1de4:	f0 92 ee 01 	sts	0x01EE, r15
			TimerFlag = 0;
		}
		while(global_g == 20)
		{
			TimerSet(1000);
			TimerOn();
    1de8:	0e 94 82 01 	call	0x304	; 0x304 <TimerOn>
			LCD_DisplayString(1, "You have failed :(");
    1dec:	67 ed       	ldi	r22, 0xD7	; 215
    1dee:	71 e0       	ldi	r23, 0x01	; 1
    1df0:	81 e0       	ldi	r24, 0x01	; 1
    1df2:	0e 94 68 01 	call	0x2d0	; 0x2d0 <LCD_DisplayString>
			while(!TimerFlag);
    1df6:	80 91 ef 01 	lds	r24, 0x01EF
    1dfa:	88 23       	and	r24, r24
    1dfc:	e1 f3       	breq	.-8      	; 0x1df6 <main+0x3a8>
			TimerFlag = 0;
    1dfe:	10 92 ef 01 	sts	0x01EF, r1
			TimerOn();
			ButtonPress5();
			while(!TimerFlag);
			TimerFlag = 0;
		}
		while(global_g == 20)
    1e02:	80 91 ea 01 	lds	r24, 0x01EA
    1e06:	84 31       	cpi	r24, 0x14	; 20
    1e08:	f9 f2       	breq	.-66     	; 0x1dc8 <main+0x37a>
			TimerFlag = 0;
		}
	}
	return 0;
		
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	ff 90       	pop	r15
    1e10:	ef 90       	pop	r14
    1e12:	df 90       	pop	r13
    1e14:	cf 90       	pop	r12
    1e16:	08 95       	ret

00001e18 <__tablejump2__>:
    1e18:	ee 0f       	add	r30, r30
    1e1a:	ff 1f       	adc	r31, r31

00001e1c <__tablejump__>:
    1e1c:	05 90       	lpm	r0, Z+
    1e1e:	f4 91       	lpm	r31, Z
    1e20:	e0 2d       	mov	r30, r0
    1e22:	09 94       	ijmp

00001e24 <_exit>:
    1e24:	f8 94       	cli

00001e26 <__stop_program>:
    1e26:	ff cf       	rjmp	.-2      	; 0x1e26 <__stop_program>
